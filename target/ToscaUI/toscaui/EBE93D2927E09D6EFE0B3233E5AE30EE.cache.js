var $wnd = $wnd || window.parent;
var __gwtModuleFunction = $wnd.toscaui;
var $sendStats = __gwtModuleFunction.__sendStats;
$sendStats('moduleStartup', 'moduleEvalStart');
var $gwt_version = "2.6.1";
var $strongName = 'EBE93D2927E09D6EFE0B3233E5AE30EE';
var $doc = $wnd.document;function __gwtStartLoadingFragment(frag) {
var fragFile = 'deferredjs/' + $strongName + '/' + frag + '.cache.js';
return __gwtModuleFunction.__startLoadingFragment(fragFile);
}
function __gwtInstallCode(code) {return __gwtModuleFunction.__installRunAsyncCode(code);}
var $stats = $wnd.__gwtStatsEvent ? function(a) {return $wnd.__gwtStatsEvent(a);} : null;
var $sessionId = $wnd.__gwtStatsSessionId ? $wnd.__gwtStatsSessionId : null;
var _, N8000000000000000_longLit = {l:0, m:0, h:524288}, N20be69c220e5a91_longLit = {l:3253615, m:2461559, h:1040193}, P0_longLit = {l:0, m:0, h:0}, P60aa5235efb78016_longLit = {l:3637270, m:579518, h:395941}, P7fffffffffffffff_longLit = {l:4194303, m:4194303, h:524287}, seedTable = {}, Q$Object = 0, Q$String = 1, Q$AnimationScheduler$AnimationHandle = 2, Q$AnimationSchedulerImpl = 3, Q$AnimationSchedulerImplTimer$AnimationHandleImpl = 4, Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1 = 5, Q$AriaAttributeType = 6, Q$Id = 7, Q$JavaScriptException = 8, Q$SerializableThrowable = 9, Q$Style$Display = 10, Q$Style$Float = 11, Q$Style$HasCssName = 12, Q$Style$Overflow = 13, Q$Style$Position = 14, Q$Style$TextAlign = 15, Q$Style$Unit = 16, Q$Style$Visibility = 17, Q$BlurHandler = 18, Q$ChangeHandler = 19, Q$ClickHandler = 20, Q$DomEvent$Type = 21, Q$DragLeaveHandler = 22, Q$DragOverHandler = 23, Q$DropHandler = 24, Q$HasAllMouseHandlers = 25, Q$KeyDownHandler = 26, Q$KeyPressHandler = 27, Q$KeyUpHandler = 28, Q$MouseDownHandler = 29, Q$MouseMoveHandler = 30, Q$MouseOutHandler = 31, Q$MouseOverHandler = 32, Q$MouseUpHandler = 33, Q$AttachEvent$Handler = 34, Q$CloseHandler = 35, Q$HasAttachHandlers = 36, Q$OpenHandler = 37, Q$ResizeHandler = 38, Q$SelectionHandler = 39, Q$ValueChangeHandler = 40, Q$EventHandler = 41, Q$HasHandlers = 42, Q$HasDirection$Direction = 43, Q$BidiFormatterBase = 44, Q$JSONArray = 45, Q$JSONNumber = 46, Q$JSONObject = 47, Q$JSONString = 48, Q$LongLibBase$LongEmul = 49, Q$HtmlLogFormatter = 50, Q$NullLogHandler = 51, Q$NullLoggingPopup = 52, Q$SafeStyles = 53, Q$SafeHtml = 54, Q$SafeUri = 55, Q$DocumentModeAsserter$Severity = 56, Q$Event$NativePreviewHandler = 57, Q$EventListener = 58, Q$Window$ClosingHandler = 59, Q$FlexTable$FlexCellFormatter = 60, Q$FlowPanel = 61, Q$FormPanel = 62, Q$FormPanel$SubmitCompleteHandler = 63, Q$FormPanel$SubmitHandler = 64, Q$HTMLTable = 65, Q$HasHorizontalAlignment$HorizontalAlignmentConstant = 66, Q$HasVisibility = 67, Q$HasWidgets = 68, Q$IsRenderable = 69, Q$IsWidget = 70, Q$MenuBar = 71, Q$MenuItem = 72, Q$PopupListener = 73, Q$PopupPanel = 74, Q$PopupPanel$AnimationType = 75, Q$RootPanel = 76, Q$SimplePanel = 77, Q$TextBox = 78, Q$UIObject = 79, Q$ValueBoxBase$TextAlignment = 80, Q$Widget = 81, Q$FocusImplStandard = 82, Q$SimpleEventBus$Command = 83, Q$UmbrellaException = 84, Q$DetailServiceController$DetailServiceView = 85, Q$DetailServiceController_ControllerProxy = 86, Q$LoginController$LoginView = 87, Q$LoginController_ControllerProxy = 88, Q$MainController$MainView = 89, Q$MainController_ControllerProxy = 90, Q$MenuController$MenuView = 91, Q$MenuController_ControllerProxy = 92, Q$PublishServiceController$PublishServiceView = 93, Q$PublishServiceController_ControllerProxy = 94, Q$ServiceCatalogListController$ServiceCatalogList = 95, Q$ServiceCatalogListController_ControllerProxy = 96, Q$SubscribeServiceTaylorFormController$SubscribeServiceTaylorFormView = 97, Q$SubscribeServiceTaylorFormController_ControllerProxy = 98, Q$ToscaListController_ControllerProxy = 99, Q$IApi = 100, Q$IConnect = 101, Q$IUserInfo = 102, Q$ToscaProviderService = 103, Q$StoryboardItem = 104, Q$Serializable = 105, Q$Boolean = 106, Q$CharSequence = 107, Q$Comparable = 108, Q$Double = 109, Q$Enum = 110, Q$Error = 111, Q$Exception = 112, Q$Integer = 113, Q$NullPointerException = 114, Q$Number = 115, Q$RuntimeException = 116, Q$StackTraceElement = 117, Q$Throwable = 118, Q$ParseException = 119, Q$Date = 120, Q$List = 121, Q$Map = 122, Q$Map$Entry = 123, Q$RandomAccess = 124, Q$Set = 125, Q$Handler = 126, Q$Handler_$1 = 127, Q$Logger = 128, Q$FastMap = 129, Q$IoCResource$Scope = 130, Q$DeviceAdaptive$Device = 131, Q$DeviceAdaptive$Input = 132, Q$DeviceAdaptive$Size = 133, Q$InterfaceConfigException = 134, Q$LazyPanelWrappingType = 135, Q$ChangeViewHandler = 136, Q$LazyPanel = 137, Q$OrientationChangeHandler = 138, Q$View = 139, Q$ViewActivateHandler = 140, Q$ViewAware = 141, Q$ViewContainer = 142, Q$ViewDeactivateHandler = 143, Q$ViewLoadHandler = 144, Q$ViewUnloadHandler = 145, Q$SocketCloseHandler = 146, Q$SocketErrorHandler = 147, Q$SocketMessageHandler = 148, Q$SocketOpenHandler = 149, Q$CompilationMessage$CompilerOperation = 150, Q$Button = 151, Q$FlatMessageBox$MessageType = 152, Q$DialogViewContainer = 153, Q$SelectHandler = 154, Q$PasteHandler = 155, Q$SwapHandler = 156, Q$ProgressBar = 157, Q$SimpleViewContainer = 158, Q$Storyboard = 159, Q$HorizontalSwapContainer = 160, Q$HorizontalSwapPanel = 161, Q$HorizontalSwapPanel$Direction = 162, Q$AddFileHandler = 163, Q$RemoveFileHandler = 164, Q$UploadCanceledHandler = 165, Q$UploadCompleteHandler = 166, Q$UploadErrorHandler = 167, Q$UploadStartHandler = 168, Q$GenericDragEventHandler$DragAndDropFeature = 169, Q$MoveCapability$Movable = 170, Q$ResizeCapability$Resizable = 171, CM$ = {};
function newSeed(id_0){
  return new seedTable[id_0];
}

function defineSeed(id_0, superSeed, castableTypeMap){
  var seed = seedTable[id_0];
  if (seed && !seed.___clazz$) {
    _ = seed.prototype;
  }
   else {
    if (!seed) {
      seed = seedTable[id_0] = function(){
      }
      ;
    }
    _ = seed.prototype = superSeed < 0?{}:newSeed(superSeed);
    _.castableTypeMap$ = castableTypeMap;
  }
  for (var i = 3; i < arguments.length; ++i) {
    arguments[i].prototype = _;
  }
  if (seed.___clazz$) {
    _.___clazz$ = seed.___clazz$;
    seed.___clazz$ = null;
  }
}

function $$init_217(){
}

function $clinit_SeedUtil(){
}

function makeCastMap(a){
  var result = {};
  for (var i = 0, c = a.length; i < c; ++i) {
    result[a[i]] = 1;
  }
  return result;
}

function nullMethod(){
}

function $$init(){
}

function $equals(this$static, other){
  return this$static === other;
}

function $hashCode(this$static){
  return getHashCode(this$static);
}

function Object_1(){
  $$init();
}

defineSeed(1, -1, CM$, Object_1);
_.equals$ = function equals(other){
  return $equals(this, other);
}
;
_.getClass$ = function getClass_0(){
  return this.___clazz$;
}
;
_.hashCode$ = function hashCode_0(){
  return $hashCode(this);
}
;
_.toString$ = function toString_0(){
  return $getName_2(this.___clazz$) + '@' + toHexString(this.hashCode$());
}
;
_.toString = function(){
  return this.toString$();
}
;
_.typeMarker$ = nullMethod;
function $$init_0(this$static){
  this$static.callback = new Animation$1_0(this$static);
}

function $cancel(this$static){
  if (!this$static.isRunning) {
    return;
  }
  this$static.wasStarted = this$static.isStarted;
  this$static.element = null;
  this$static.isRunning = false;
  this$static.isStarted = false;
  if (isNotNull(this$static.requestHandle)) {
    this$static.requestHandle.cancel();
    this$static.requestHandle = null;
  }
  $onCancel(this$static);
}

function $interpolate(progress){
  return (1 + cos_0(3.141592653589793 + progress * 3.141592653589793)) / 2;
}

function $isRunning(this$static, curRunId){
  return this$static.isRunning && this$static.runId == curRunId;
}

function $onCancel(this$static){
  this$static.wasStarted && this$static.onComplete();
}

function $onStart(this$static){
  this$static.onUpdate($interpolate(0));
}

function $run(this$static, duration){
  $run_1(this$static, duration, null);
}

function $run_0(this$static, duration, startTime, element){
  $cancel(this$static);
  this$static.isRunning = true;
  this$static.isStarted = false;
  this$static.duration = duration;
  this$static.startTime = startTime;
  this$static.element = element;
  ++this$static.runId;
  this$static.callback.execute(currentTimeMillis());
}

function $run_1(this$static, duration, element){
  $run_0(this$static, duration, currentTimeMillis(), element);
}

function $update(this$static, curTime){
  var curRunId, finished, progress;
  curRunId = this$static.runId;
  finished = curTime >= this$static.startTime + this$static.duration;
  if (this$static.isStarted && !finished) {
    progress = (curTime - this$static.startTime) / this$static.duration;
    this$static.onUpdate($interpolate(progress));
    return $isRunning(this$static, curRunId);
  }
  if (!this$static.isStarted && curTime >= this$static.startTime) {
    this$static.isStarted = true;
    this$static.onStart();
    if (!$isRunning(this$static, curRunId)) {
      return false;
    }
  }
  if (finished) {
    this$static.isRunning = false;
    this$static.isStarted = false;
    this$static.onComplete();
    return false;
  }
  return true;
}

function Animation_0(){
  Animation_1.call(this, get_0());
}

function Animation_1(scheduler){
  Object_1.call(this);
  $$init_0(this);
  this.scheduler = scheduler;
}

defineSeed(3, 1, {});
_.onComplete = function onComplete(){
  this.onUpdate($interpolate(1));
}
;
_.onStart = function onStart(){
  $onStart(this);
}
;
_.duration = -1;
_.isRunning = false;
_.isStarted = false;
_.runId = -1;
_.startTime = -1;
_.wasStarted = false;
function $$init_1(){
}

function Animation$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_1();
}

defineSeed(4, 1, {}, Animation$1_0);
_.execute = function execute(timestamp){
  $update(this.this$0, timestamp)?(this.this$0.requestHandle = this.this$0.scheduler.requestAnimationFrame(this.this$0.callback, this.this$0.element)):(this.this$0.requestHandle = null);
}
;
function $$init_2(){
}

function AnimationScheduler_0(){
  Object_1.call(this);
  $$init_2();
}

function get_0(){
  return $clinit_AnimationSchedulerImpl() , INSTANCE;
}

defineSeed(5, 1, {});
function $$init_3(){
}

function AnimationScheduler$AnimationHandle_0(){
  Object_1.call(this);
  $$init_3();
}

defineSeed(6, 1, makeCastMap([Q$AnimationScheduler$AnimationHandle]));
function $clinit_AnimationSchedulerImpl(){
  $clinit_AnimationSchedulerImpl = nullMethod;
  var impl;
  {
    impl = new AnimationSchedulerImplWebkit_0;
    instanceOf(impl, Q$AnimationSchedulerImpl) && (dynamicCast(impl, Q$AnimationSchedulerImpl).isNativelySupported() || (impl = new AnimationSchedulerImplTimer_0));
    INSTANCE = impl;
  }
}

function $$init_4(){
}

function AnimationSchedulerImpl_0(){
  AnimationScheduler_0.call(this);
  $$init_4();
}

defineSeed(7, 5, makeCastMap([Q$AnimationSchedulerImpl]));
var INSTANCE;
function $$init_5(this$static){
  this$static.animationRequests = new ArrayList_0;
  this$static.timer = new AnimationSchedulerImplTimer$1_0(this$static);
}

function $cancelAnimationFrame(this$static, requestId){
  this$static.animationRequests.remove(requestId);
  this$static.animationRequests.size_1() == 0 && $cancel_0(this$static.timer);
}

function $updateAnimations(this$static){
  var curAnimations, duration, requestId, requestId$array, requestId$index, requestId$max;
  curAnimations = initDim(_3Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit, makeCastMap([Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1, Q$Serializable]), Q$AnimationSchedulerImplTimer$AnimationHandleImpl, this$static.animationRequests.size_1(), 0);
  curAnimations = dynamicCast(this$static.animationRequests.toArray_0(curAnimations), Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1);
  duration = new Duration_0;
  for (requestId$array = curAnimations , requestId$index = 0 , requestId$max = requestId$array.length; requestId$index < requestId$max; ++requestId$index) {
    requestId = requestId$array[requestId$index];
    this$static.animationRequests.remove(requestId);
    $getCallback(requestId).execute($getStartMillis(duration));
  }
  this$static.animationRequests.size_1() > 0 && $schedule(this$static.timer, max_0(5, 16 - $elapsedMillis(duration)));
}

function AnimationSchedulerImplTimer_0(){
  AnimationSchedulerImpl_0.call(this);
  $$init_5(this);
}

defineSeed(8, 7, makeCastMap([Q$AnimationSchedulerImpl]), AnimationSchedulerImplTimer_0);
_.isNativelySupported = function isNativelySupported(){
  return true;
}
;
_.requestAnimationFrame = function requestAnimationFrame(callback, element){
  var requestId;
  requestId = new AnimationSchedulerImplTimer$AnimationHandleImpl_0(this, callback);
  this.animationRequests.add_0(requestId);
  this.animationRequests.size_1() == 1 && $schedule(this.timer, 16);
  return requestId;
}
;
function $$init_6(this$static){
}

function $cancel_0(this$static){
  if (!$isRunning_0(this$static)) {
    return;
  }
  ++this$static.cancelCounter;
  this$static.isRepeating?clearInterval_0($intValue(this$static.timerId)):clearTimeout_0($intValue(this$static.timerId));
  this$static.timerId = null;
}

function $isRunning_0(this$static){
  return isNotNull(this$static.timerId);
}

function $schedule(this$static, delayMillis){
  if (delayMillis < 0) {
    throw new IllegalArgumentException_1('must be non-negative');
  }
  $isRunning_0(this$static) && $cancel_0(this$static);
  this$static.isRepeating = false;
  this$static.timerId = valueOf_12(setTimeout_0(createCallback(this$static, this$static.cancelCounter), delayMillis));
}

function Timer_0(){
  Object_1.call(this);
  $$init_6(this);
}

function createCallback(timer, cancelCounter){
  return $entry(function(){
    timer.fire(cancelCounter);
  }
  );
}

defineSeed(10, 1, {});
_.fire = function fire(scheduleCancelCounter){
  if (scheduleCancelCounter != this.cancelCounter) {
    return;
  }
  this.isRepeating || (this.timerId = null);
  this.run();
}
;
_.cancelCounter = 0;
_.isRepeating = false;
_.timerId = null;
function $$init_7(){
}

function AnimationSchedulerImplTimer$1_0(this$0){
  this.this$0 = this$0;
  Timer_0.call(this);
  $$init_7();
}

defineSeed(9, 10, {}, AnimationSchedulerImplTimer$1_0);
_.run = function run(){
  $updateAnimations(this.this$0);
}
;
function $$init_8(){
}

function $getCallback(this$static){
  return this$static.callback;
}

function AnimationSchedulerImplTimer$AnimationHandleImpl_0(this$0, callback){
  this.this$0 = this$0;
  AnimationScheduler$AnimationHandle_0.call(this);
  $$init_8();
  this.callback = callback;
}

defineSeed(11, 6, makeCastMap([Q$AnimationScheduler$AnimationHandle, Q$AnimationSchedulerImplTimer$AnimationHandleImpl]), AnimationSchedulerImplTimer$AnimationHandleImpl_0);
_.cancel = function cancel(){
  $cancelAnimationFrame(this.this$0, this);
}
;
function $$init_9(){
}

function $cancelAnimationFrameImpl(requestId){
  $wnd.webkitCancelRequestAnimationFrame(requestId);
}

function $requestAnimationFrameImpl(callback, element){
  var _callback = callback;
  var wrapper = $entry(function(){
    var now_0 = currentTimeMillis();
    _callback.execute(now_0);
  }
  );
  return $wnd.webkitRequestAnimationFrame(wrapper, element);
}

function AnimationSchedulerImplWebkit_0(){
  AnimationSchedulerImpl_0.call(this);
  $$init_9();
}

defineSeed(12, 7, makeCastMap([Q$AnimationSchedulerImpl]), AnimationSchedulerImplWebkit_0);
_.isNativelySupported = function isNativelySupported_0(){
  return !!($wnd.webkitRequestAnimationFrame && $wnd.webkitCancelRequestAnimationFrame);
}
;
_.requestAnimationFrame = function requestAnimationFrame_0(callback, element){
  var requestId;
  requestId = $requestAnimationFrameImpl(callback, element);
  return new AnimationSchedulerImplWebkit$AnimationHandleImpl_0(this, requestId);
}
;
function $$init_10(){
}

function AnimationSchedulerImplWebkit$AnimationHandleImpl_0(this$0, requestId){
  this , this$0;
  AnimationScheduler$AnimationHandle_0.call(this);
  $$init_10();
  this.requestId = requestId;
}

defineSeed(13, 6, makeCastMap([Q$AnimationScheduler$AnimationHandle]), AnimationSchedulerImplWebkit$AnimationHandleImpl_0);
_.cancel = function cancel_0(){
  $cancelAnimationFrameImpl(this.requestId);
}
;
_.requestId = 0;
function $$init_11(){
}

function RoleImpl_0(roleName){
  Object_1.call(this);
  $$init_11();
  if (jsEquals(roleName, null)) {
    debugger;
    throw makeAssertionError_Object('Role name cannot be null');
  }
  this.roleName = roleName;
}

defineSeed(15, 1, {});
_.set_0 = function set_1(element){
  if (isNull_1(element)) {
    debugger;
    throw makeAssertionError_Object('Element cannot be null.');
  }
  $setAttribute(element, 'role', this.roleName);
}
;
function $$init_12(){
}

function AlertRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_12();
}

defineSeed(14, 15, {}, AlertRoleImpl_0);
function $$init_13(){
}

function AlertdialogRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_13();
}

defineSeed(16, 15, {}, AlertdialogRoleImpl_0);
function $$init_14(){
}

function ApplicationRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_14();
}

defineSeed(17, 15, {}, ApplicationRoleImpl_0);
function $$init_15(){
}

function $getAriaValue(this$static, value_0){
  var buf, item_0, item$array, item$index, item$max;
  buf = new StringBuffer_0;
  for (item$array = value_0 , item$index = 0 , item$max = item$array.length; item$index < item$max; ++item$index) {
    item_0 = item$array[item$index];
    $append_1($append_1(buf, this$static.getSingleValue(item_0)), ' ');
  }
  return $trim($toString_1(buf));
}

function $set(this$static, element, values){
  if (isNull_1(element)) {
    debugger;
    throw makeAssertionError_Object('Element cannot be null.');
  }
  if (values.length <= 0) {
    debugger;
    throw makeAssertionError();
  }
  $setAttribute(element, this$static.name_0, $getAriaValue(this$static, values));
}

function Attribute_0(name_0, defaultValue){
  Object_1.call(this);
  $$init_15();
  if (jsEquals(name_0, null)) {
    debugger;
    throw makeAssertionError_Object('Name cannot be null');
  }
  this.name_0 = name_0;
  this , defaultValue;
}

defineSeed(19, 1, {});
function $$init_16(){
}

function $getSingleValue(value_0){
  return value_0.getAriaValue();
}

function AriaValueAttribute_0(name_0, defaultValue){
  Attribute_0.call(this, name_0, defaultValue);
  $$init_16();
}

defineSeed(18, 19, {}, AriaValueAttribute_0);
_.getSingleValue = function getSingleValue(value_0){
  return $getSingleValue(dynamicCast(value_0, Q$AriaAttributeType));
}
;
function $$init_17(){
}

function ArticleRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_17();
}

defineSeed(20, 15, {}, ArticleRoleImpl_0);
function $$init_18(){
}

function BannerRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_18();
}

defineSeed(21, 15, {}, BannerRoleImpl_0);
function $$init_19(){
}

function ButtonRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_19();
}

defineSeed(22, 15, {}, ButtonRoleImpl_0);
function $$init_20(){
}

function CheckboxRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_20();
}

defineSeed(23, 15, {}, CheckboxRoleImpl_0);
function $$init_21(){
}

function ColumnheaderRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_21();
}

defineSeed(24, 15, {}, ColumnheaderRoleImpl_0);
function $$init_22(){
}

function ComboboxRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_22();
}

defineSeed(25, 15, {}, ComboboxRoleImpl_0);
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty(element, value_0){
  $set(($clinit_Property() , ACTIVEDESCENDANT), element, initValues(_3Lcom_google_gwt_aria_client_Id_2_classLit, makeCastMap([Q$Serializable]), Q$Id, [value_0]));
}
;
function $$init_23(){
}

function ComplementaryRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_23();
}

defineSeed(26, 15, {}, ComplementaryRoleImpl_0);
function $$init_24(){
}

function ContentinfoRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_24();
}

defineSeed(27, 15, {}, ContentinfoRoleImpl_0);
function $$init_25(){
}

function DefinitionRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_25();
}

defineSeed(28, 15, {}, DefinitionRoleImpl_0);
function $$init_26(){
}

function DialogRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_26();
}

defineSeed(29, 15, {}, DialogRoleImpl_0);
function $$init_27(){
}

function DirectoryRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_27();
}

defineSeed(30, 15, {}, DirectoryRoleImpl_0);
function $$init_28(){
}

function DocumentRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_28();
}

defineSeed(31, 15, {}, DocumentRoleImpl_0);
function $$init_29(){
}

function FormRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_29();
}

defineSeed(32, 15, {}, FormRoleImpl_0);
function $$init_30(){
}

function GridRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_30();
}

defineSeed(33, 15, {}, GridRoleImpl_0);
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_0(element, value_0){
  $set(($clinit_Property() , ACTIVEDESCENDANT), element, initValues(_3Lcom_google_gwt_aria_client_Id_2_classLit, makeCastMap([Q$Serializable]), Q$Id, [value_0]));
}
;
function $$init_31(){
}

function GridcellRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_31();
}

defineSeed(34, 15, {}, GridcellRoleImpl_0);
function $$init_32(){
}

function GroupRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_32();
}

defineSeed(35, 15, {}, GroupRoleImpl_0);
function $$init_33(){
}

function HeadingRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_33();
}

defineSeed(36, 15, {}, HeadingRoleImpl_0);
function $$init_34(){
}

function $init(this$static, elementId){
  if (!(jsNotEquals(elementId, null) || $equals_2(elementId, ''))) {
    debugger;
    throw makeAssertionError_Object('Invalid elementId: cannot be null or empty.');
  }
  this$static.id_0 = elementId;
}

function Id_0(element){
  Object_1.call(this);
  $$init_34();
  if (isNull_1(element)) {
    debugger;
    throw makeAssertionError_Object('Element cannot be null');
  }
  $init(this, $getId(element));
}

function of(element){
  return new Id_0(element);
}

defineSeed(37, 1, makeCastMap([Q$AriaAttributeType, Q$Id]), Id_0);
_.getAriaValue = function getAriaValue(){
  return this.id_0;
}
;
function $$init_35(){
}

function ImgRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_35();
}

defineSeed(38, 15, {}, ImgRoleImpl_0);
function $$init_36(){
}

function LinkRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_36();
}

defineSeed(39, 15, {}, LinkRoleImpl_0);
function $$init_37(){
}

function ListRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_37();
}

defineSeed(40, 15, {}, ListRoleImpl_0);
function $$init_38(){
}

function ListboxRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_38();
}

defineSeed(41, 15, {}, ListboxRoleImpl_0);
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_1(element, value_0){
  $set(($clinit_Property() , ACTIVEDESCENDANT), element, initValues(_3Lcom_google_gwt_aria_client_Id_2_classLit, makeCastMap([Q$Serializable]), Q$Id, [value_0]));
}
;
function $$init_39(){
}

function ListitemRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_39();
}

defineSeed(42, 15, {}, ListitemRoleImpl_0);
function $$init_40(){
}

function LogRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_40();
}

defineSeed(43, 15, {}, LogRoleImpl_0);
function $$init_41(){
}

function MainRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_41();
}

defineSeed(44, 15, {}, MainRoleImpl_0);
function $$init_42(){
}

function MarqueeRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_42();
}

defineSeed(45, 15, {}, MarqueeRoleImpl_0);
function $$init_43(){
}

function MathRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_43();
}

defineSeed(46, 15, {}, MathRoleImpl_0);
function $$init_44(){
}

function MenuRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_44();
}

defineSeed(47, 15, {}, MenuRoleImpl_0);
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_2(element, value_0){
  $set(($clinit_Property() , ACTIVEDESCENDANT), element, initValues(_3Lcom_google_gwt_aria_client_Id_2_classLit, makeCastMap([Q$Serializable]), Q$Id, [value_0]));
}
;
function $$init_45(){
}

function MenubarRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_45();
}

defineSeed(48, 15, {}, MenubarRoleImpl_0);
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_3(element, value_0){
  $set(($clinit_Property() , ACTIVEDESCENDANT), element, initValues(_3Lcom_google_gwt_aria_client_Id_2_classLit, makeCastMap([Q$Serializable]), Q$Id, [value_0]));
}
;
function $$init_46(){
}

function MenuitemRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_46();
}

defineSeed(49, 15, {}, MenuitemRoleImpl_0);
function $$init_47(){
}

function MenuitemcheckboxRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_47();
}

defineSeed(50, 15, {}, MenuitemcheckboxRoleImpl_0);
function $$init_48(){
}

function MenuitemradioRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_48();
}

defineSeed(51, 15, {}, MenuitemradioRoleImpl_0);
function $$init_49(){
}

function NavigationRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_49();
}

defineSeed(52, 15, {}, NavigationRoleImpl_0);
function $$init_50(){
}

function NoteRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_50();
}

defineSeed(53, 15, {}, NoteRoleImpl_0);
function $$init_51(){
}

function OptionRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_51();
}

defineSeed(54, 15, {}, OptionRoleImpl_0);
function $$init_52(){
}

function PresentationRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_52();
}

defineSeed(55, 15, {}, PresentationRoleImpl_0);
function $$init_53(){
}

function PrimitiveValueAttribute_0(name_0, defaultValue){
  Attribute_0.call(this, name_0, defaultValue);
  $$init_53();
}

defineSeed(56, 19, {}, PrimitiveValueAttribute_0);
_.getSingleValue = function getSingleValue_0(value_0){
  return valueOf_16(value_0);
}
;
function $$init_54(){
}

function ProgressbarRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_54();
}

defineSeed(57, 15, {}, ProgressbarRoleImpl_0);
function $clinit_Property(){
  $clinit_Property = nullMethod;
  ACTIVEDESCENDANT = new AriaValueAttribute_0('aria-activedescendant', '');
  new PrimitiveValueAttribute_0('aria-atomic', 'false');
  new AriaValueAttribute_0('aria-autocomplete', 'none');
  new AriaValueAttribute_0('aria-controls', '');
  new AriaValueAttribute_0('aria-describedby', '');
  new AriaValueAttribute_0('aria-dropeffect', 'none');
  new AriaValueAttribute_0('aria-flowto', '');
  new PrimitiveValueAttribute_0('aria-haspopup', 'false');
  new PrimitiveValueAttribute_0('aria-label', '');
  new AriaValueAttribute_0('aria-labelledby', '');
  new PrimitiveValueAttribute_0('aria-level', '');
  new AriaValueAttribute_0('aria-live', 'off');
  new PrimitiveValueAttribute_0('aria-multiline', 'false');
  new PrimitiveValueAttribute_0('aria-multiselectable', 'false');
  new AriaValueAttribute_0('aria-orientation', 'vertical');
  new AriaValueAttribute_0('aria-owns', '');
  new PrimitiveValueAttribute_0('aria-posinset', '');
  new PrimitiveValueAttribute_0('aria-readonly', 'false');
  new AriaValueAttribute_0('aria-relevant', 'additions text');
  new PrimitiveValueAttribute_0('aria-required', 'false');
  new PrimitiveValueAttribute_0('aria-setsize', '');
  new AriaValueAttribute_0('aria-sort', 'none');
  new PrimitiveValueAttribute_0('aria-valuemax', '');
  new PrimitiveValueAttribute_0('aria-valuemin', '');
  new PrimitiveValueAttribute_0('aria-valuenow', '');
  new PrimitiveValueAttribute_0('aria-valuetext', '');
}

var ACTIVEDESCENDANT;
function $$init_55(){
}

function RadioRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_55();
}

defineSeed(59, 15, {}, RadioRoleImpl_0);
function $$init_56(){
}

function RadiogroupRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_56();
}

defineSeed(60, 15, {}, RadiogroupRoleImpl_0);
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_4(element, value_0){
  $set(($clinit_Property() , ACTIVEDESCENDANT), element, initValues(_3Lcom_google_gwt_aria_client_Id_2_classLit, makeCastMap([Q$Serializable]), Q$Id, [value_0]));
}
;
function $$init_57(){
}

function RegionRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_57();
}

defineSeed(61, 15, {}, RegionRoleImpl_0);
function $clinit_Roles(){
  $clinit_Roles = nullMethod;
  ALERTDIALOG = new AlertdialogRoleImpl_0('alertdialog');
  ALERT = new AlertRoleImpl_0('alert');
  APPLICATION = new ApplicationRoleImpl_0('application');
  ARTICLE = new ArticleRoleImpl_0('article');
  BANNER = new BannerRoleImpl_0('banner');
  BUTTON = new ButtonRoleImpl_0('button');
  CHECKBOX = new CheckboxRoleImpl_0('checkbox');
  COLUMNHEADER = new ColumnheaderRoleImpl_0('columnheader');
  COMBOBOX = new ComboboxRoleImpl_0('combobox');
  COMPLEMENTARY = new ComplementaryRoleImpl_0('complementary');
  CONTENTINFO = new ContentinfoRoleImpl_0('contentinfo');
  DEFINITION = new DefinitionRoleImpl_0('definition');
  DIALOG = new DialogRoleImpl_0('dialog');
  DIRECTORY = new DirectoryRoleImpl_0('directory');
  DOCUMENT = new DocumentRoleImpl_0('document');
  FORM = new FormRoleImpl_0('form');
  GRIDCELL = new GridcellRoleImpl_0('gridcell');
  GRID = new GridRoleImpl_0('grid');
  GROUP = new GroupRoleImpl_0('group');
  HEADING = new HeadingRoleImpl_0('heading');
  IMG = new ImgRoleImpl_0('img');
  LINK = new LinkRoleImpl_0('link');
  LISTBOX = new ListboxRoleImpl_0('listbox');
  LISTITEM = new ListitemRoleImpl_0('listitem');
  LIST = new ListRoleImpl_0('list');
  LOG = new LogRoleImpl_0('log');
  MAIN = new MainRoleImpl_0('main');
  MARQUEE = new MarqueeRoleImpl_0('marquee');
  MATH = new MathRoleImpl_0('math');
  MENUBAR = new MenubarRoleImpl_0('menubar');
  MENUITEMCHECKBOX = new MenuitemcheckboxRoleImpl_0('menuitemcheckbox');
  MENUITEMRADIO = new MenuitemradioRoleImpl_0('menuitemradio');
  MENUITEM = new MenuitemRoleImpl_0('menuitem');
  MENU = new MenuRoleImpl_0('menu');
  NAVIGATION = new NavigationRoleImpl_0('navigation');
  NOTE = new NoteRoleImpl_0('note');
  OPTION = new OptionRoleImpl_0('option');
  PRESENTATION = new PresentationRoleImpl_0('presentation');
  PROGRESSBAR = new ProgressbarRoleImpl_0('progressbar');
  RADIOGROUP = new RadiogroupRoleImpl_0('radiogroup');
  RADIO = new RadioRoleImpl_0('radio');
  REGION = new RegionRoleImpl_0('region');
  ROWGROUP = new RowgroupRoleImpl_0('rowgroup');
  ROWHEADER = new RowheaderRoleImpl_0('rowheader');
  ROW = new RowRoleImpl_0('row');
  SCROLLBAR = new ScrollbarRoleImpl_0('scrollbar');
  SEARCH = new SearchRoleImpl_0('search');
  SEPARATOR = new SeparatorRoleImpl_0('separator');
  SLIDER = new SliderRoleImpl_0('slider');
  SPINBUTTON = new SpinbuttonRoleImpl_0('spinbutton');
  STATUS = new StatusRoleImpl_0('status');
  TABLIST = new TablistRoleImpl_0('tablist');
  TABPANEL = new TabpanelRoleImpl_0('tabpanel');
  TAB = new TabRoleImpl_0('tab');
  TEXTBOX = new TextboxRoleImpl_0('textbox');
  TIMER = new TimerRoleImpl_0('timer');
  TOOLBAR = new ToolbarRoleImpl_0('toolbar');
  TOOLTIP = new TooltipRoleImpl_0('tooltip');
  TREEGRID = new TreegridRoleImpl_0('treegrid');
  TREEITEM = new TreeitemRoleImpl_0('treeitem');
  TREE = new TreeRoleImpl_0('tree');
  ROLES_MAP = new HashMap_0;
  ROLES_MAP.put('region', REGION);
  ROLES_MAP.put('alert', ALERT);
  ROLES_MAP.put('dialog', DIALOG);
  ROLES_MAP.put('alertdialog', ALERTDIALOG);
  ROLES_MAP.put('application', APPLICATION);
  ROLES_MAP.put('document', DOCUMENT);
  ROLES_MAP.put('article', ARTICLE);
  ROLES_MAP.put('banner', BANNER);
  ROLES_MAP.put('button', BUTTON);
  ROLES_MAP.put('checkbox', CHECKBOX);
  ROLES_MAP.put('gridcell', GRIDCELL);
  ROLES_MAP.put('columnheader', COLUMNHEADER);
  ROLES_MAP.put('group', GROUP);
  ROLES_MAP.put('combobox', COMBOBOX);
  ROLES_MAP.put('complementary', COMPLEMENTARY);
  ROLES_MAP.put('contentinfo', CONTENTINFO);
  ROLES_MAP.put('definition', DEFINITION);
  ROLES_MAP.put('list', LIST);
  ROLES_MAP.put('directory', DIRECTORY);
  ROLES_MAP.put('form', FORM);
  ROLES_MAP.put('grid', GRID);
  ROLES_MAP.put('heading', HEADING);
  ROLES_MAP.put('img', IMG);
  ROLES_MAP.put('link', LINK);
  ROLES_MAP.put('listbox', LISTBOX);
  ROLES_MAP.put('listitem', LISTITEM);
  ROLES_MAP.put('log', LOG);
  ROLES_MAP.put('main', MAIN);
  ROLES_MAP.put('marquee', MARQUEE);
  ROLES_MAP.put('math', MATH);
  ROLES_MAP.put('menu', MENU);
  ROLES_MAP.put('menubar', MENUBAR);
  ROLES_MAP.put('menuitem', MENUITEM);
  ROLES_MAP.put('menuitemcheckbox', MENUITEMCHECKBOX);
  ROLES_MAP.put('option', OPTION);
  ROLES_MAP.put('radio', RADIO);
  ROLES_MAP.put('menuitemradio', MENUITEMRADIO);
  ROLES_MAP.put('navigation', NAVIGATION);
  ROLES_MAP.put('note', NOTE);
  ROLES_MAP.put('presentation', PRESENTATION);
  ROLES_MAP.put('progressbar', PROGRESSBAR);
  ROLES_MAP.put('radiogroup', RADIOGROUP);
  ROLES_MAP.put('row', ROW);
  ROLES_MAP.put('rowgroup', ROWGROUP);
  ROLES_MAP.put('rowheader', ROWHEADER);
  ROLES_MAP.put('search', SEARCH);
  ROLES_MAP.put('separator', SEPARATOR);
  ROLES_MAP.put('scrollbar', SCROLLBAR);
  ROLES_MAP.put('slider', SLIDER);
  ROLES_MAP.put('spinbutton', SPINBUTTON);
  ROLES_MAP.put('status', STATUS);
  ROLES_MAP.put('tab', TAB);
  ROLES_MAP.put('tablist', TABLIST);
  ROLES_MAP.put('tabpanel', TABPANEL);
  ROLES_MAP.put('textbox', TEXTBOX);
  ROLES_MAP.put('timer', TIMER);
  ROLES_MAP.put('toolbar', TOOLBAR);
  ROLES_MAP.put('tooltip', TOOLTIP);
  ROLES_MAP.put('tree', TREE);
  ROLES_MAP.put('treegrid', TREEGRID);
  ROLES_MAP.put('treeitem', TREEITEM);
}

function getMenubarRole(){
  $clinit_Roles();
  return MENUBAR;
}

function getMenuitemRole(){
  $clinit_Roles();
  return MENUITEM;
}

var ALERT, ALERTDIALOG, APPLICATION, ARTICLE, BANNER, BUTTON, CHECKBOX, COLUMNHEADER, COMBOBOX, COMPLEMENTARY, CONTENTINFO, DEFINITION, DIALOG, DIRECTORY, DOCUMENT, FORM, GRID, GRIDCELL, GROUP, HEADING, IMG, LINK, LIST, LISTBOX, LISTITEM, LOG, MAIN, MARQUEE, MATH, MENU, MENUBAR, MENUITEM, MENUITEMCHECKBOX, MENUITEMRADIO, NAVIGATION, NOTE, OPTION, PRESENTATION, PROGRESSBAR, RADIO, RADIOGROUP, REGION, ROLES_MAP, ROW, ROWGROUP, ROWHEADER, SCROLLBAR, SEARCH, SEPARATOR, SLIDER, SPINBUTTON, STATUS, TAB, TABLIST, TABPANEL, TEXTBOX, TIMER, TOOLBAR, TOOLTIP, TREE, TREEGRID, TREEITEM;
function $$init_58(){
}

function RowRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_58();
}

defineSeed(63, 15, {}, RowRoleImpl_0);
function $$init_59(){
}

function RowgroupRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_59();
}

defineSeed(64, 15, {}, RowgroupRoleImpl_0);
function $$init_60(){
}

function RowheaderRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_60();
}

defineSeed(65, 15, {}, RowheaderRoleImpl_0);
function $$init_61(){
}

function ScrollbarRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_61();
}

defineSeed(66, 15, {}, ScrollbarRoleImpl_0);
function $$init_62(){
}

function SearchRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_62();
}

defineSeed(67, 15, {}, SearchRoleImpl_0);
function $$init_63(){
}

function SeparatorRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_63();
}

defineSeed(68, 15, {}, SeparatorRoleImpl_0);
function $$init_64(){
}

function SliderRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_64();
}

defineSeed(69, 15, {}, SliderRoleImpl_0);
function $$init_65(){
}

function SpinbuttonRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_65();
}

defineSeed(70, 15, {}, SpinbuttonRoleImpl_0);
function $$init_66(){
}

function StatusRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_66();
}

defineSeed(71, 15, {}, StatusRoleImpl_0);
function $$init_67(){
}

function TabRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_67();
}

defineSeed(72, 15, {}, TabRoleImpl_0);
function $$init_68(){
}

function TablistRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_68();
}

defineSeed(73, 15, {}, TablistRoleImpl_0);
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_5(element, value_0){
  $set(($clinit_Property() , ACTIVEDESCENDANT), element, initValues(_3Lcom_google_gwt_aria_client_Id_2_classLit, makeCastMap([Q$Serializable]), Q$Id, [value_0]));
}
;
function $$init_69(){
}

function TabpanelRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_69();
}

defineSeed(74, 15, {}, TabpanelRoleImpl_0);
function $$init_70(){
}

function TextboxRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_70();
}

defineSeed(75, 15, {}, TextboxRoleImpl_0);
function $$init_71(){
}

function TimerRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_71();
}

defineSeed(76, 15, {}, TimerRoleImpl_0);
function $$init_72(){
}

function ToolbarRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_72();
}

defineSeed(77, 15, {}, ToolbarRoleImpl_0);
function $$init_73(){
}

function TooltipRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_73();
}

defineSeed(78, 15, {}, TooltipRoleImpl_0);
function $$init_74(){
}

function TreeRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_74();
}

defineSeed(79, 15, {}, TreeRoleImpl_0);
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_6(element, value_0){
  $set(($clinit_Property() , ACTIVEDESCENDANT), element, initValues(_3Lcom_google_gwt_aria_client_Id_2_classLit, makeCastMap([Q$Serializable]), Q$Id, [value_0]));
}
;
function $$init_75(){
}

function TreegridRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_75();
}

defineSeed(80, 15, {}, TreegridRoleImpl_0);
_.setAriaActivedescendantProperty = function setAriaActivedescendantProperty_7(element, value_0){
  $set(($clinit_Property() , ACTIVEDESCENDANT), element, initValues(_3Lcom_google_gwt_aria_client_Id_2_classLit, makeCastMap([Q$Serializable]), Q$Id, [value_0]));
}
;
function $$init_76(){
}

function TreeitemRoleImpl_0(roleName){
  RoleImpl_0.call(this, roleName);
  $$init_76();
}

defineSeed(81, 15, {}, TreeitemRoleImpl_0);
function $$init_77(this$static){
  this$static.start_0 = currentTimeMillis();
}

function $elapsedMillis(this$static){
  return uncheckedConversion(currentTimeMillis() - this$static.start_0);
}

function $getStartMillis(this$static){
  return this$static.start_0;
}

function Duration_0(){
  Object_1.call(this);
  $$init_77(this);
}

function currentTimeMillis(){
  return (new Date).getTime();
}

function uncheckedConversion(elapsed){
  return elapsed;
}

defineSeed(82, 1, {}, Duration_0);
_.start_0 = 0;
function getModuleBaseForStaticFiles(){
  return getModuleBaseURLForStaticFiles();
}

function getModuleBaseURL(){
  return getModuleBaseURL_0();
}

function getModuleName(){
  return getModuleName_0();
}

function getUncaughtExceptionHandler(){
  return uncaughtExceptionHandler;
}

function isClient(){
  return true;
}

function isScript(){
  return true;
}

function log_1(message){
  log_5(message);
}

function log_2(message, e){
  log_6(message, e);
}

function reportUncaughtException(e){
  reportUncaughtException_0(e);
}

function setUncaughtExceptionHandler(handler){
  uncaughtExceptionHandler = handler;
}

var uncaughtExceptionHandler = null;
function $$init_78(){
}

function $getCause(this$static){
  return this$static.cause;
}

function $getStackTrace(this$static){
  if (jsEquals(this$static.stackTrace, null)) {
    return initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, 0, 0);
  }
  return this$static.stackTrace;
}

function $initCause(this$static, cause){
  if (isNotNull(this$static.cause)) {
    throw new IllegalStateException_1("Can't overwrite cause");
  }
  if (jsEquals(cause, this$static)) {
    throw new IllegalArgumentException_1('Self-causation not permitted');
  }
  this$static.cause = cause;
  return this$static;
}

function $printStackTrace(this$static, out){
  var element, element$array, element$index, element$max, t;
  for (t = this$static; isNotNull(t); t = $getCause(t)) {
    jsNotEquals(t, this$static) && out.print_0('Caused by: ');
    out.println(t);
    for (element$array = $getStackTrace(t) , element$index = 0 , element$max = element$array.length; element$index < element$max; ++element$index) {
      element = element$array[element$index];
      out.println_0('\tat ' + element);
    }
  }
}

function $setStackTrace(this$static, stackTrace){
  var c, copy, i;
  copy = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stackTrace.length, 0);
  for (i = 0 , c = stackTrace.length; i < c; ++i) {
    if (isNull_1(stackTrace[i])) {
      throw new NullPointerException_0;
    }
    copy[i] = stackTrace[i];
  }
  this$static.stackTrace = copy;
}

function Throwable_0(){
  Object_1.call(this);
  $$init_78();
  this.fillInStackTrace();
}

function Throwable_1(message){
  Object_1.call(this);
  $$init_78();
  this.detailMessage = message;
  this.fillInStackTrace();
}

function Throwable_2(message, cause){
  Object_1.call(this);
  $$init_78();
  this.cause = cause;
  this.detailMessage = message;
  this.fillInStackTrace();
}

function Throwable_3(cause){
  Object_1.call(this);
  $$init_78();
  this.detailMessage = isNull_1(cause)?null:cause.toString$();
  this.cause = cause;
  this.fillInStackTrace();
}

defineSeed(87, 1, makeCastMap([Q$Serializable, Q$Throwable]));
_.fillInStackTrace = function fillInStackTrace(){
  fillInStackTrace_0(this);
  return this;
}
;
_.getMessage = function getMessage(){
  return this.detailMessage;
}
;
_.initCause = function initCause(cause){
  return $initCause(this, cause);
}
;
_.toString$ = function toString_1(){
  var className, msg;
  className = $getName_2(this.___clazz$);
  msg = this.getMessage();
  return jsNotEquals(msg, null)?className + ': ' + msg:className;
}
;
function $$init_79(){
}

function Exception_0(){
  Throwable_0.call(this);
  $$init_79();
}

function Exception_1(message){
  Throwable_1.call(this, message);
  $$init_79();
}

function Exception_2(message, cause){
  Throwable_2.call(this, message, cause);
  $$init_79();
}

function Exception_3(cause){
  Throwable_3.call(this, cause);
  $$init_79();
}

defineSeed(86, 87, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]));
function $$init_80(){
}

function RuntimeException_0(){
  Exception_0.call(this);
  $$init_80();
}

function RuntimeException_1(message){
  Exception_1.call(this, message);
  $$init_80();
}

function RuntimeException_2(message, cause){
  Exception_2.call(this, message, cause);
  $$init_80();
}

function RuntimeException_3(cause){
  Exception_3.call(this, cause);
  $$init_80();
}

defineSeed(85, 86, makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), RuntimeException_1);
function $clinit_JavaScriptException(){
  $clinit_JavaScriptException = nullMethod;
  NOT_SET = new Object_1;
}

function $$init_81(this$static){
  this$static.description = '';
}

function $ensureInit(this$static){
  var exception;
  if (jsEquals(this$static.message_0, null)) {
    exception = $getThrown(this$static);
    this$static.name_0 = getExceptionName(exception);
    this$static.description = this$static.description + ': ' + getExceptionDescription(exception);
    this$static.message_0 = '(' + this$static.name_0 + ') ' + getExceptionProperties(exception) + this$static.description;
  }
}

function $getMessage(this$static){
  $ensureInit(this$static);
  return this$static.message_0;
}

function $getThrown(this$static){
  return maskUndefined(this$static.e) === maskUndefined(NOT_SET)?null:this$static.e;
}

function $isThrownSet(this$static){
  return maskUndefined(this$static.e) !== maskUndefined(NOT_SET);
}

function JavaScriptException_0(e){
  $clinit_JavaScriptException();
  JavaScriptException_1.call(this, e, '');
}

function JavaScriptException_1(e, description){
  RuntimeException_0.call(this);
  $$init_81(this);
  this.e = e;
  this.description = description;
  createStackTrace_0(this);
}

function getExceptionDescription(e){
  return instanceOfJso(e)?getExceptionDescription0(dynamicCastJso(e)):e + '';
}

function getExceptionDescription0(e){
  return e == null?null:e.message;
}

function getExceptionName(e){
  return jsEquals(e, null)?'null':instanceOfJso(e)?getExceptionName0(dynamicCastJso(e)):instanceOf(e, Q$String)?'String':$getName_2(getClass__devirtual$(e));
}

function getExceptionName0(e){
  return e == null?null:e.name;
}

function getExceptionProperties(e){
  return instanceOfJso(e)?getProperties(dynamicCastJso(e)):'';
}

defineSeed(84, 85, makeCastMap([Q$JavaScriptException, Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), JavaScriptException_0);
_.getMessage = function getMessage_0(){
  return $getMessage(this);
}
;
_.getThrown = function getThrown(){
  return $getThrown(this);
}
;
var NOT_SET;
function $cast(this$static){
  return this$static;
}

function $equals_0(this$static, other){
  return $equals(this$static, other);
}

function $getClass(){
  return Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
}

function $hashCode_0(this$static){
  return getHashCode(this$static);
}

function createArray(){
  return [];
}

function createObject(){
  return {};
}

function equals__devirtual$(this$static, other){
  var maybeJsoInvocation;
  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.equals$(other):$equals_0(maybeJsoInvocation, other);
}

function getClass__devirtual$(this$static){
  var maybeJsoInvocation;
  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.___clazz$:$getClass();
}

function hashCode__devirtual$(this$static){
  var maybeJsoInvocation;
  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.hashCode$():$hashCode_0(maybeJsoInvocation);
}

function toStringSimple(obj){
  return obj.toString?obj.toString():'[JavaScriptObject]';
}

function toStringVerbose(obj){
  var defined = function(m_0){
    return typeof m_0 != 'undefined';
  }
  ;
  var strip = function(s){
    return s.replace(/\r\n/g, '');
  }
  ;
  if (defined(obj.outerHTML))
    return strip(obj.outerHTML);
  if (defined(obj.innerHTML) && obj.cloneNode) {
    $doc.createElement('div').appendChild(obj.cloneNode(true)).innerHTML;
  }
  if (defined(obj.nodeType) && obj.nodeType == 3) {
    return "'" + obj.data.replace(/ /g, '\u25AB').replace(/\u00A0/, '\u25AA') + "'";
  }
  if (typeof defined(obj.htmlText) && obj.collapse) {
    var html = obj.htmlText;
    if (html) {
      return 'IETextRange [' + strip(html) + ']';
    }
     else {
      var dup = obj.duplicate();
      dup.pasteHTML('|');
      var out = 'IETextRange ' + strip(obj.parentElement().outerHTML);
      dup.moveStart('character', -1);
      dup.pasteHTML('');
      return out;
    }
  }
  return obj.toString?obj.toString():'[JavaScriptObject]';
}

function $get(this$static, index_0){
  return this$static[index_0];
}

function $length(this$static){
  return this$static.length;
}

function $push(this$static, value_0){
  this$static[this$static.length] = value_0;
}

function $set_0(this$static, index_0, value_0){
  this$static[index_0] = value_0;
}

function $get_0(this$static, index_0){
  return this$static[index_0];
}

function $join(this$static, separator){
  return this$static.join(separator);
}

function $length_0(this$static){
  return this$static.length;
}

function $push_0(this$static, value_0){
  this$static[this$static.length] = value_0;
}

function $set_1(this$static, index_0, value_0){
  this$static[index_0] = value_0;
}

function $setLength(this$static, newLength){
  this$static.length = newLength;
}

function $getDate(this$static){
  return this$static.getDate();
}

function $getDay(this$static){
  return this$static.getDay();
}

function $getFullYear(this$static){
  return this$static.getFullYear();
}

function $getHours(this$static){
  return this$static.getHours();
}

function $getMinutes(this$static){
  return this$static.getMinutes();
}

function $getMonth(this$static){
  return this$static.getMonth();
}

function $getSeconds(this$static){
  return this$static.getSeconds();
}

function $getTime(this$static){
  return this$static.getTime();
}

function $getTimezoneOffset(this$static){
  return this$static.getTimezoneOffset();
}

function create(){
  return new Date;
}

function create_0(milliseconds){
  return new Date(milliseconds);
}

function $clinit_JsonUtils(){
  $clinit_JsonUtils = nullMethod;
  escapeTable = initEscapeTable();
  hasJsonParse = hasJsonParse_0();
}

function escapeChar(c){
  var lookedUp = escapeTable[c.charCodeAt(0)];
  return lookedUp == null?c:lookedUp;
}

function escapeJsonForEval(toEscape){
  $clinit_JsonUtils();
  var s = toEscape.replace(/[\xad\u0600-\u0603\u06dd\u070f\u17b4\u17b5\u200b-\u200f\u2028-\u202e\u2060-\u2064\u206a-\u206f\ufeff\ufff9-\ufffb]/g, function(x_0){
    return escapeChar(x_0);
  }
  );
  return s;
}

function escapeValue(toEscape){
  $clinit_JsonUtils();
  var s = toEscape.replace(/[\x00-\x1f\xad\u0600-\u0603\u06dd\u070f\u17b4\u17b5\u200b-\u200f\u2028-\u202e\u2060-\u2064\u206a-\u206f\ufeff\ufff9-\ufffb"\\]/g, function(x_0){
    return escapeChar(x_0);
  }
  );
  return '"' + s + '"';
}

function hasJsonParse_0(){
  return typeof JSON == 'object' && typeof JSON.parse == 'function';
}

function initEscapeTable(){
  var out = ['\\u0000', '\\u0001', '\\u0002', '\\u0003', '\\u0004', '\\u0005', '\\u0006', '\\u0007', '\\b', '\\t', '\\n', '\\u000B', '\\f', '\\r', '\\u000E', '\\u000F', '\\u0010', '\\u0011', '\\u0012', '\\u0013', '\\u0014', '\\u0015', '\\u0016', '\\u0017', '\\u0018', '\\u0019', '\\u001A', '\\u001B', '\\u001C', '\\u001D', '\\u001E', '\\u001F'];
  out[34] = '\\"';
  out[92] = '\\\\';
  out[173] = '\\u00ad';
  out[1536] = '\\u0600';
  out[1537] = '\\u0601';
  out[1538] = '\\u0602';
  out[1539] = '\\u0603';
  out[1757] = '\\u06dd';
  out[1807] = '\\u070f';
  out[6068] = '\\u17b4';
  out[6069] = '\\u17b5';
  out[8203] = '\\u200b';
  out[8204] = '\\u200c';
  out[8205] = '\\u200d';
  out[8206] = '\\u200e';
  out[8207] = '\\u200f';
  out[8232] = '\\u2028';
  out[8233] = '\\u2029';
  out[8234] = '\\u202a';
  out[8235] = '\\u202b';
  out[8236] = '\\u202c';
  out[8237] = '\\u202d';
  out[8238] = '\\u202e';
  out[8288] = '\\u2060';
  out[8289] = '\\u2061';
  out[8290] = '\\u2062';
  out[8291] = '\\u2063';
  out[8292] = '\\u2064';
  out[8298] = '\\u206a';
  out[8299] = '\\u206b';
  out[8300] = '\\u206c';
  out[8301] = '\\u206d';
  out[8302] = '\\u206e';
  out[8303] = '\\u206f';
  out[65279] = '\\ufeff';
  out[65529] = '\\ufff9';
  out[65530] = '\\ufffa';
  out[65531] = '\\ufffb';
  return out;
}

function safeEval(json){
  $clinit_JsonUtils();
  var v;
  if (hasJsonParse) {
    try {
      return JSON.parse(json);
    }
     catch (e) {
      return throwIllegalArgumentException('Error parsing JSON: ' + e, json);
    }
  }
   else {
    if (!safeToEval(json)) {
      return throwIllegalArgumentException('Illegal character in JSON string', json);
    }
    json = escapeJsonForEval(json);
    try {
      return eval('(' + json + ')');
    }
     catch (e) {
      return throwIllegalArgumentException('Error parsing JSON: ' + e, json);
    }
  }
}

function safeToEval(text_0){
  $clinit_JsonUtils();
  return !/[^,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]/.test(text_0.replace(/"(\\.|[^"\\])*"/g, ''));
}

function throwIllegalArgumentException(message, data_0){
  throw new IllegalArgumentException_1(message + '\n' + data_0);
}

var escapeTable, hasJsonParse = false;
function $$init_82(){
}

function Scheduler_0(){
  Object_1.call(this);
  $$init_82();
}

function get_1(){
  return $clinit_SchedulerImpl() , INSTANCE_0;
}

defineSeed(93, 1, {});
function $clinit_Impl(){
  $clinit_Impl = nullMethod;
  false;
  2000;
  new UnloadSupport_0;
  exportUnloadModule();
}

function apply_0(jsFunction, thisObj, args){
  if (isScript()) {
    return jsFunction.apply(thisObj, args);
  }
   else {
    var __0 = jsFunction.apply(thisObj, args);
    if (__0 != null) {
      __0 = {val:__0};
    }
    return __0;
  }
}

function clearInterval_0(timerId){
  $clinit_Impl();
  $clearInterval(timerId);
}

function clearTimeout_0(timerId){
  $clinit_Impl();
  $clearTimeout(timerId);
}

function dispose(d){
  $clinit_Impl();
  $dispose(d);
}

function enter(){
  var now_0;
  if (entryDepth < 0) {
    debugger;
    throw makeAssertionError_Object('Negative entryDepth value at entry ' + entryDepth);
  }
  if (entryDepth != 0) {
    now_0 = currentTimeMillis();
    if (now_0 - watchdogEntryDepthLastScheduled > 2000) {
      watchdogEntryDepthLastScheduled = now_0;
      watchdogEntryDepthTimerId = watchdogEntryDepthSchedule();
    }
  }
  if (entryDepth++ == 0) {
    $flushEntryCommands(($clinit_SchedulerImpl() , INSTANCE_0));
    return true;
  }
  return false;
}

function entry_0(jsFunction){
  return function(){
    try {
      if (isScript()) {
        return entry0(jsFunction, this, arguments);
      }
       else {
        var __0 = entry0(jsFunction, this, arguments);
        if (__0 != null) {
          __0 = __0.val;
        }
        return __0;
      }
    }
     catch (e) {
      throw e;
    }
  }
  ;
}

function entry0(jsFunction, thisObj, args){
  var initialEntry, t;
  if ($isUnloadSupported() && isModuleUnloaded()) {
    return null;
  }
  initialEntry = enter();
  try {
    if (isNotNull(getUncaughtExceptionHandler())) {
      try {
        return apply_0(jsFunction, thisObj, args);
      }
       catch ($e0) {
        $e0 = wrap($e0);
        if (instanceOf($e0, Q$Throwable)) {
          t = $e0;
          reportUncaughtException_0(t);
          return undefined_0();
        }
         else 
          throw unwrap($e0);
      }
    }
     else {
      return apply_0(jsFunction, thisObj, args);
    }
  }
   finally {
    exit(initialEntry);
  }
}

function exit(initialEntry){
  initialEntry && $flushFinallyCommands(($clinit_SchedulerImpl() , INSTANCE_0));
  --entryDepth;
  if (entryDepth < 0) {
    debugger;
    throw makeAssertionError_Object('Negative entryDepth value at exit ' + entryDepth);
  }
  if (initialEntry) {
    if (entryDepth != 0) {
      debugger;
      throw makeAssertionError_Object('Depth not 0' + entryDepth);
    }
    if (watchdogEntryDepthTimerId != -1) {
      watchdogEntryDepthCancel(watchdogEntryDepthTimerId);
      watchdogEntryDepthTimerId = -1;
    }
  }
}

function exportUnloadModule(){
  $exportUnloadModule();
}

function getHashCode(o){
  $clinit_Impl();
  return o.$H || (o.$H = getNextHashId());
}

function getModuleBaseURL_0(){
  $clinit_Impl();
  var key = '__gwtDevModeHook:' + $moduleName + ':moduleBase';
  var global = $wnd || self;
  return global[key] || $moduleBase;
}

function getModuleBaseURLForStaticFiles(){
  $clinit_Impl();
  return $moduleBase;
}

function getModuleName_0(){
  $clinit_Impl();
  return $moduleName;
}

function getNextHashId(){
  return ++sNextHashId;
}

function isModuleUnloaded(){
  return false;
}

function registerEntry(){
  $clinit_Impl();
  if (isScript()) {
    return entry_0;
  }
   else {
    return $entry = entry_0;
  }
}

function reportToBrowser(e){
  $wnd.setTimeout(function(){
    throw e;
  }
  , 0);
}

function reportToBrowser_0(e){
  reportToBrowser(instanceOf(e, Q$JavaScriptException)?dynamicCast(e, Q$JavaScriptException).getThrown():e);
}

function reportUncaughtException_0(e){
  $clinit_Impl();
  var handler;
  isNotNull(uncaughtExceptionHandlerForTest) && uncaughtExceptionHandlerForTest.onUncaughtException(e);
  handler = getUncaughtExceptionHandler();
  if (isNotNull(handler)) {
    if (jsEquals(handler, uncaughtExceptionHandlerForTest)) {
      return;
    }
    handler.onUncaughtException(e);
    return;
  }
  reportToBrowser_0(e);
}

function scheduleDispose(){
  $clinit_Impl();
  $scheduleDispose();
}

function setTimeout_0(func, time){
  $clinit_Impl();
  return $setTimeout(func, time);
}

function undefined_0(){
  return;
}

function watchdogEntryDepthCancel(timerId){
  clearTimeout_0(timerId);
}

function watchdogEntryDepthRun(){
  entryDepth != 0 && (entryDepth = 0);
  watchdogEntryDepthTimerId = -1;
}

function watchdogEntryDepthSchedule(){
  return setTimeout_0(function(){
    watchdogEntryDepthRun();
  }
  , 10);
}

var entryDepth = 0, sNextHashId = 0, uncaughtExceptionHandlerForTest, watchdogEntryDepthLastScheduled = 0, watchdogEntryDepthTimerId = -1;
function $clinit_SchedulerImpl(){
  $clinit_SchedulerImpl = nullMethod;
  INSTANCE_0 = new SchedulerImpl_0;
  1;
  50;
  100;
}

function $$init_83(this$static){
}

function $createDuration(){
  return new Duration_0;
}

function $flushEntryCommands(this$static){
  var oldQueue, rescheduled;
  if (isNotNull(this$static.entryCommands)) {
    rescheduled = null;
    do {
      oldQueue = this$static.entryCommands;
      this$static.entryCommands = null;
      rescheduled = runScheduledTasks(oldQueue, rescheduled);
    }
     while (isNotNull(this$static.entryCommands));
    this$static.entryCommands = rescheduled;
  }
}

function $flushFinallyCommands(this$static){
  var oldQueue, rescheduled;
  if (isNotNull(this$static.finallyCommands)) {
    rescheduled = null;
    do {
      oldQueue = this$static.finallyCommands;
      this$static.finallyCommands = null;
      rescheduled = runScheduledTasks(oldQueue, rescheduled);
    }
     while (isNotNull(this$static.finallyCommands));
    this$static.finallyCommands = rescheduled;
  }
}

function $flushPostEventPumpCommands(this$static){
  var oldDeferred;
  if (isNotNull(this$static.deferredCommands)) {
    oldDeferred = this$static.deferredCommands;
    this$static.deferredCommands = null;
    isNull_1(this$static.incrementalCommands) && (this$static.incrementalCommands = createQueue());
    runScheduledTasks(oldDeferred, this$static.incrementalCommands);
  }
  isNotNull(this$static.incrementalCommands) && (this$static.incrementalCommands = $runRepeatingTasks(this$static.incrementalCommands));
}

function $isWorkQueued(this$static){
  return isNotNull(this$static.deferredCommands) || isNotNull(this$static.incrementalCommands);
}

function $maybeSchedulePostEventPumpCommands(this$static){
  if (!this$static.shouldBeRunning) {
    this$static.shouldBeRunning = true;
    isNull_1(this$static.flusher) && (this$static.flusher = new SchedulerImpl$Flusher_0(this$static));
    scheduleFixedDelayImpl(this$static.flusher, 1);
    isNull_1(this$static.rescue) && (this$static.rescue = new SchedulerImpl$Rescuer_0(this$static));
    scheduleFixedDelayImpl(this$static.rescue, 50);
  }
}

function $runRepeatingTasks(tasks){
  var canceledSomeTasks, duration, executedSomeTask, i, length_0, newTasks, t;
  if (isNull_1(tasks)) {
    debugger;
    throw makeAssertionError_Object('tasks');
  }
  length_0 = $length(tasks);
  if (length_0 == 0) {
    return null;
  }
  canceledSomeTasks = false;
  duration = $createDuration();
  while ($elapsedMillis(duration) < 100) {
    executedSomeTask = false;
    for (i = 0; i < length_0; i++) {
      if ($length(tasks) != length_0) {
        debugger;
        throw makeAssertionError_Object('Working array length changed ' + $length(tasks) + ' != ' + length_0);
      }
      t = $get(tasks, i);
      if (isNull_1(t)) {
        continue;
      }
      executedSomeTask = true;
      if (!$isRepeating(t)) {
        debugger;
        throw makeAssertionError_Object('Found a non-repeating Task');
      }
      if (!$executeRepeating(t)) {
        $set_0(tasks, i, null);
        canceledSomeTasks = true;
      }
    }
    if (!executedSomeTask) {
      break;
    }
  }
  if (canceledSomeTasks) {
    newTasks = createQueue();
    for (i = 0; i < length_0; i++) {
      isNotNull($get(tasks, i)) && $push(newTasks, $get(tasks, i));
    }
    if ($length(newTasks) >= length_0) {
      debugger;
      throw makeAssertionError();
    }
    return $length(newTasks) == 0?null:newTasks;
  }
   else {
    return tasks;
  }
}

function $scheduleFixedDelay(cmd, delayMs){
  scheduleFixedDelayImpl(cmd, delayMs);
}

function SchedulerImpl_0(){
  Scheduler_0.call(this);
  $$init_83(this);
}

function createQueue(){
  return $cast(createArray());
}

function execute_0(cmd){
  return cmd.execute_0();
}

function push_0(queue, task){
  isNull_1(queue) && (queue = createQueue());
  $push(queue, task);
  return queue;
}

function runScheduledTasks(tasks, rescheduled){
  var e, i, j, t;
  if (isNull_1(tasks)) {
    debugger;
    throw makeAssertionError_Object('tasks');
  }
  for (i = 0 , j = $length(tasks); i < j; i++) {
    if ($length(tasks) != j) {
      debugger;
      throw makeAssertionError_Object('Working array length changed ' + $length(tasks) + ' != ' + j);
    }
    t = $get(tasks, i);
    try {
      $isRepeating(t)?$executeRepeating(t) && (rescheduled = push_0(rescheduled, t)):$executeScheduled(t);
    }
     catch ($e0) {
      $e0 = wrap($e0);
      if (instanceOf($e0, Q$Throwable)) {
        e = $e0;
        reportUncaughtException(e);
      }
       else 
        throw unwrap($e0);
    }
  }
  return rescheduled;
}

function scheduleFixedDelayImpl(cmd, delayMs){
  setTimeout_0(function(){
    var ret = $entry(execute_0)(cmd);
    if (!isScript()) {
      ret = ret == true;
    }
    if (ret) {
      setTimeout_0(arguments.callee, delayMs);
    }
  }
  , delayMs);
}

defineSeed(95, 93, {}, SchedulerImpl_0);
_.scheduleDeferred = function scheduleDeferred(cmd){
  this.deferredCommands = push_0(this.deferredCommands, create_1(cmd));
  $maybeSchedulePostEventPumpCommands(this);
}
;
_.scheduleFinally = function scheduleFinally(cmd){
  this.finallyCommands = push_0(this.finallyCommands, create_1(cmd));
}
;
_.flushRunning = false;
_.shouldBeRunning = false;
var INSTANCE_0;
function $$init_84(){
}

function SchedulerImpl$Flusher_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_84();
}

defineSeed(96, 1, {}, SchedulerImpl$Flusher_0);
_.execute_0 = function execute_1(){
  this.this$0.flushRunning = true;
  $flushPostEventPumpCommands(this.this$0);
  this.this$0.flushRunning = false;
  return this.this$0.shouldBeRunning = $isWorkQueued(this.this$0);
}
;
function $$init_85(){
}

function SchedulerImpl$Rescuer_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_85();
}

defineSeed(97, 1, {}, SchedulerImpl$Rescuer_0);
_.execute_0 = function execute_2(){
  this.this$0.flushRunning && $scheduleFixedDelay(this.this$0.flusher, 1);
  return this.this$0.shouldBeRunning;
}
;
function $executeRepeating(this$static){
  return $getRepeating(this$static).execute_0();
}

function $executeScheduled(this$static){
  $getScheduled(this$static).execute_1();
}

function $getRepeating(this$static){
  return this$static[0];
}

function $getScheduled(this$static){
  return this$static[0];
}

function $isRepeating(this$static){
  return this$static[1];
}

function create_1(cmd){
  return [cmd, false];
}

function createStackTrace(){
  return (new StackTraceCreator$CollectorChrome_0).collect();
}

function createStackTrace_0(e){
  (new StackTraceCreator$CollectorChrome_0).createStackTrace(e);
}

function extractNameFromToString(fnToString){
  var index_0, start_0, toReturn;
  toReturn = '';
  fnToString = $trim(fnToString);
  index_0 = $indexOf_3(fnToString, '(');
  start_0 = $startsWith(fnToString, 'function')?8:0;
  if (index_0 == -1) {
    index_0 = $indexOf_2(fnToString, 64);
    start_0 = $startsWith(fnToString, 'function ')?9:0;
  }
  index_0 != -1 && (toReturn = $trim($substring_0(fnToString, start_0, index_0)));
  return $length_1(toReturn) > 0?toReturn:'anonymous';
}

function fillInStackTrace_0(t){
  (new StackTraceCreator$CollectorChrome_0).fillInStackTrace_0(t);
}

function getProperties(e){
  return $getProperties((new StackTraceCreator$CollectorChrome_0 , e));
}

function parseInt_0(number){
  return parseInt(number) || -1;
}

function splice(arr, length_0){
  arr.length >= length_0 && arr.splice(0, length_0);
  return arr;
}

function $$init_86(){
}

function $getProperties(e){
  var result = '';
  try {
    for (var prop in e) {
      if (prop != 'name' && (prop != 'message' && prop != 'toString')) {
        try {
          var propValue = prop != '__gwt$exception'?e[prop]:'<skipped>';
          result += '\n ' + prop + ': ' + propValue;
        }
         catch (ignored) {
        }
      }
    }
  }
   catch (ignored) {
  }
  return result;
}

function $makeException(){
  try {
    null.a();
  }
   catch (e) {
    return e;
  }
}

function StackTraceCreator$Collector_0(){
  Object_1.call(this);
  $$init_86();
}

defineSeed(100, 1, {}, StackTraceCreator$Collector_0);
_.collect = function collect(){
  var seen = {};
  var toReturn = [];
  var callee = arguments.callee.caller.caller;
  while (callee) {
    var name_0 = this.extractName(callee.toString());
    toReturn.push(name_0);
    var keyName = ':' + name_0;
    var withThisName = seen[keyName];
    if (withThisName) {
      var i, j;
      for (i = 0 , j = withThisName.length; i < j; i++) {
        if (withThisName[i] === callee) {
          return toReturn;
        }
      }
    }
    (withThisName || (seen[keyName] = [])).push(callee);
    callee = callee.caller;
  }
  return toReturn;
}
;
_.createStackTrace = function createStackTrace_1(e){
  var i, j, stack_0, stackTrace;
  stack_0 = this.inferFrom($getThrown(e));
  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, $length_0(stack_0), 0);
  for (i = 0 , j = stackTrace.length; i < j; i++) {
    stackTrace[i] = new StackTraceElement_0('Unknown', $get_0(stack_0, i), null, -1);
  }
  $setStackTrace(e, stackTrace);
}
;
_.extractName = function extractName(fnToString){
  return extractNameFromToString(fnToString);
}
;
_.fillInStackTrace_0 = function fillInStackTrace_1(t){
  var i, j, stack_0, stackTrace;
  stack_0 = createStackTrace();
  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, $length_0(stack_0), 0);
  for (i = 0 , j = stackTrace.length; i < j; i++) {
    stackTrace[i] = new StackTraceElement_0('Unknown', $get_0(stack_0, i), null, -1);
  }
  $setStackTrace(t, stackTrace);
}
;
_.inferFrom = function inferFrom(e){
  return $cast(createArray());
}
;
function $$init_87(){
}

function $collect(this$static){
  return splice(this$static.inferFrom($makeException()), this$static.toSplice());
}

function $getStack(e){
  return e && e.stack?e.stack.split('\n'):[];
}

function $inferFrom(this$static, e){
  var i, j, jso, stack_0;
  jso = instanceOfJso(e)?dynamicCastJso(e):null;
  stack_0 = $getStack(jso);
  for (i = 0 , j = $length_0(stack_0); i < j; i++) {
    $set_1(stack_0, i, this$static.extractName($get_0(stack_0, i)));
  }
  return stack_0;
}

function StackTraceCreator$CollectorMoz_0(){
  StackTraceCreator$Collector_0.call(this);
  $$init_87();
}

defineSeed(102, 100, {});
_.collect = function collect_0(){
  return $collect(this);
}
;
_.inferFrom = function inferFrom_0(e){
  return $inferFrom(this, e);
}
;
_.toSplice = function toSplice(){
  return 2;
}
;
function $clinit_StackTraceCreator$CollectorChrome(){
  $clinit_StackTraceCreator$CollectorChrome = nullMethod;
  increaseChromeStackTraceLimit();
}

function $$init_88(){
}

function $inferFrom_0(this$static, e){
  var stack_0;
  stack_0 = $inferFrom(this$static, e);
  if ($length_0(stack_0) == 0) {
    return (new StackTraceCreator$Collector_0).inferFrom(e);
  }
   else {
    $startsWith($get_0(stack_0, 0), 'anonymous@@') && (stack_0 = splice(stack_0, 1));
    return stack_0;
  }
}

function $parseStackTrace(e, stack_0){
  var col, endFileUrl, fileName, i, j, lastColon, line, location_0, stackElements, stackTrace;
  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, $length_0(stack_0), 0);
  for (i = 0 , j = stackTrace.length; i < j; i++) {
    stackElements = $split_0($get_0(stack_0, i), '@@');
    line = -1;
    col = -1;
    fileName = 'Unknown';
    if (stackElements.length == 2 && jsNotEquals(stackElements[1], null)) {
      location_0 = stackElements[1];
      lastColon = $lastIndexOf(location_0, 58);
      endFileUrl = $lastIndexOf_0(location_0, 58, lastColon - 1);
      fileName = $substring_0(location_0, 0, endFileUrl);
      if (lastColon != -1 && endFileUrl != -1) {
        line = parseInt_0($substring_0(location_0, endFileUrl + 1, lastColon));
        col = parseInt_0($substring(location_0, lastColon + 1));
      }
    }
    stackTrace[i] = new StackTraceElement_0('Unknown', stackElements[0], fileName + '@' + col, $replaceIfNoSourceMap(line < 0?-1:line));
  }
  $setStackTrace(e, stackTrace);
}

function $replaceIfNoSourceMap(line){
  return line;
}

function StackTraceCreator$CollectorChrome_0(){
  $clinit_StackTraceCreator$CollectorChrome();
  StackTraceCreator$CollectorMoz_0.call(this);
  $$init_88();
}

function increaseChromeStackTraceLimit(){
  Error.stackTraceLimit = 128;
}

defineSeed(101, 102, {}, StackTraceCreator$CollectorChrome_0);
_.collect = function collect_1(){
  var res;
  res = $collect(this);
  $length_0(res) == 0 && (res = splice((new StackTraceCreator$Collector_0).collect(), 1));
  return res;
}
;
_.createStackTrace = function createStackTrace_2(e){
  var stack_0;
  stack_0 = $inferFrom_0(this, $getThrown(e));
  $parseStackTrace(e, stack_0);
}
;
_.extractName = function extractName_0(fnToString){
  var closeParen, index_0, location_0, toReturn;
  'anonymous';
  location_0 = '';
  if ($length_1(fnToString) == 0) {
    return 'anonymous';
  }
  toReturn = $trim(fnToString);
  $startsWith(toReturn, 'at ') && (toReturn = $substring(toReturn, 3));
  index_0 = $indexOf_3(toReturn, '[');
  index_0 != -1 && (toReturn = $trim($substring_0(toReturn, 0, index_0)) + $trim($substring(toReturn, $indexOf_4(toReturn, ']', index_0) + 1)));
  index_0 = $indexOf_3(toReturn, '(');
  if (index_0 == -1) {
    index_0 = $indexOf_3(toReturn, '@');
    if (index_0 == -1) {
      location_0 = toReturn;
      toReturn = '';
    }
     else {
      location_0 = $trim($substring(toReturn, index_0 + 1));
      toReturn = $trim($substring_0(toReturn, 0, index_0));
    }
  }
   else {
    closeParen = $indexOf_4(toReturn, ')', index_0);
    location_0 = $substring_0(toReturn, index_0 + 1, closeParen);
    toReturn = $trim($substring_0(toReturn, 0, index_0));
  }
  index_0 = $indexOf_2(toReturn, 46);
  index_0 != -1 && (toReturn = $substring(toReturn, index_0 + 1));
  return ($length_1(toReturn) > 0?toReturn:'anonymous') + '@@' + location_0;
}
;
_.fillInStackTrace_0 = function fillInStackTrace_2(t){
  var stack_0;
  stack_0 = createStackTrace();
  $parseStackTrace(t, stack_0);
}
;
_.inferFrom = function inferFrom_1(e){
  return $inferFrom_0(this, e);
}
;
_.toSplice = function toSplice_0(){
  return 3;
}
;
function $$init_89(){
}

function StringBufferImpl_0(){
  Object_1.call(this);
  $$init_89();
}

defineSeed(103, 1, {});
function $$init_90(this$static){
}

function StringBufferImplAppend_0(){
  StringBufferImpl_0.call(this);
  $$init_90(this);
}

defineSeed(104, 103, {}, StringBufferImplAppend_0);
_.append_0 = function append(data_0, x_0){
  this.string += x_0;
}
;
_.append_1 = function append_0(data_0, x_0){
  this.string += x_0;
}
;
_.appendNonNull = function appendNonNull(data_0, x_0){
  this.string += x_0;
}
;
_.createData = function createData(){
  return null;
}
;
_.toString_0 = function toString_2(data_0){
  return this.string;
}
;
_.string = '';
function $$init_91(){
}

function JsLogger_0(){
  Object_1.call(this);
  $$init_91();
}

defineSeed(106, 1, {});
_.log_0 = function log_3(message, e){
}
;
function $$init_92(){
}

function $consoleErrorEnabled(){
  return !!($wnd.console && $wnd.console.error);
}

function $consoleLogEnabled(){
  return !!($wnd.console && $wnd.console.log);
}

function $error(message){
  $wnd.console.error(message);
}

function $log(message){
  $wnd.console.log(message);
}

function $makeSimpleStackTrace(first){
  var element, element$array, element$index, element$max, out, t;
  out = new StringBuilder_0;
  for (t = first; isNotNull(t); t = $getCause(t)) {
    jsEquals(t, first)?$append_3(out, t.toString$() + '\n'):$append_3(out, 'Caused by: ' + t.toString$() + '\n');
    for (element$array = $getStackTrace(t) , element$index = 0 , element$max = element$array.length; element$index < element$max; ++element$index) {
      element = element$array[element$index];
      $append_3(out, '  at ' + $getMethodName(element) + '\n');
    }
  }
  return $toString_2(out);
}

function SuperDevModeLogger_0(){
  JsLogger_0.call(this);
  $$init_92();
}

defineSeed(105, 106, {}, SuperDevModeLogger_0);
_.log_0 = function log_4(message, t){
  var out;
  if (!$consoleLogEnabled()) {
    return;
  }
  $log(message);
  if (isNotNull(t)) {
    out = $makeSimpleStackTrace(t);
    $consoleErrorEnabled()?$error(out):$log(out);
  }
}
;
function $$init_93(){
}

function $clearInterval(timerId){
  clearInterval0(timerId);
}

function $clearTimeout(timerId){
  clearTimeout0(timerId);
}

function $dispose(d){
  isNotNull(d) && d.dispose();
}

function $exportUnloadModule(){
}

function $isUnloadSupported(){
  return false;
}

function $scheduleDispose(){
}

function $setTimeout(func, time){
  return setTimeout0(func, time, null);
}

function UnloadSupport_0(){
  Object_1.call(this);
  $$init_93();
}

function clearInterval0(timerId){
  $wnd.clearInterval(timerId);
}

function clearTimeout0(timerId){
  $wnd.clearTimeout(timerId);
}

function setTimeout0(func, time, disposeable){
  var timerId = $wnd.setTimeout(function(){
    func();
    if (disposeable != null) {
      dispose(disposeable);
    }
  }
  , time);
  return timerId;
}

defineSeed(107, 1, {}, UnloadSupport_0);
function $clinit_GWT(){
  $clinit_GWT = nullMethod;
  null;
  isScript_0()?(logger_0 = new SuperDevModeLogger_0):(logger_0 = null);
}

function isScript_0(){
  $clinit_GWT();
  return true;
}

function log_5(message){
  $clinit_GWT();
  log_6(message, null);
}

function log_6(message, e){
  $clinit_GWT();
  isNotNull(logger_0) && logger_0.log_0(message, e);
}

var logger_0;
function $$init_94(){
}

function $initCause_0(this$static, cause){
  return $initCause(this$static, fromThrowable(cause));
}

function $setDesignatedType(this$static, typeName, isExactType){
  this$static.typeName = typeName;
  this$static.exactTypeKnown = isExactType;
}

function SerializableThrowable_0(designatedType, message){
  Throwable_1.call(this, message);
  $$init_94();
  this.typeName = designatedType;
}

function createSerializable(t){
  var throwable;
  throwable = new SerializableThrowable_0(null, t.getMessage());
  $setStackTrace(throwable, $getStackTrace(t));
  $initCause_0(throwable, $getCause(t));
  throwable , t;
  resolveDesignatedType(throwable, t);
  return throwable;
}

function fromThrowable(throwable){
  return instanceOf(throwable, Q$SerializableThrowable)?dynamicCast(throwable, Q$SerializableThrowable):isNotNull(throwable)?createSerializable(throwable):null;
}

defineSeed(109, 87, makeCastMap([Q$SerializableThrowable, Q$Serializable, Q$Throwable]), SerializableThrowable_0);
_.fillInStackTrace = function fillInStackTrace_3(){
  return this;
}
;
_.initCause = function initCause_0(cause){
  return $initCause_0(this, cause);
}
;
_.toString$ = function toString_3(){
  var msg, type_0;
  type_0 = this.exactTypeKnown?this.typeName:this.typeName + '(EXACT TYPE UNKNOWN)';
  msg = this.getMessage();
  return jsEquals(msg, null)?type_0:type_0 + ': ' + msg;
}
;
_.exactTypeKnown = false;
function resolveDesignatedType(throwable, designated){
  var resolvedName, resolvedType;
  if (isClassMetadataEnabled()) {
    $setDesignatedType(throwable, $getName_2(designated.___clazz$), true);
  }
   else {
    try {
      throw unwrap(designated);
    }
     catch ($e0) {
      $e0 = wrap($e0);
      if (instanceOf($e0, Q$NullPointerException)) {
        $e0;
        resolvedName = 'java.lang.NullPointerException';
        resolvedType = Ljava_lang_NullPointerException_2_classLit;
      }
       else if (instanceOf($e0, Q$JavaScriptException)) {
        $e0;
        resolvedName = 'com.google.gwt.core.client.JavaScriptException';
        resolvedType = Lcom_google_gwt_core_client_JavaScriptException_2_classLit;
      }
       else if (instanceOf($e0, Q$RuntimeException)) {
        $e0;
        resolvedName = 'java.lang.RuntimeException';
        resolvedType = Ljava_lang_RuntimeException_2_classLit;
      }
       else if (instanceOf($e0, Q$Exception)) {
        $e0;
        resolvedName = 'java.lang.Exception';
        resolvedType = Ljava_lang_Exception_2_classLit;
      }
       else if (instanceOf($e0, Q$Error)) {
        $e0;
        resolvedName = 'java.lang.Error';
        resolvedType = Ljava_lang_Error_2_classLit;
      }
       else if (instanceOf($e0, Q$Throwable)) {
        $e0;
        resolvedName = 'java.lang.Throwable';
        resolvedType = Ljava_lang_Throwable_2_classLit;
      }
       else 
        throw unwrap($e0);
    }
    $setDesignatedType(throwable, resolvedName, jsEquals(resolvedType, designated.___clazz$));
  }
}

function $appendChild(this$static, newChild){
  return this$static.appendChild(newChild);
}

function $getFirstChild(this$static){
  return this$static.firstChild;
}

function $getNodeType(this$static){
  return this$static.nodeType;
}

function $getOwnerDocument(this$static){
  return this$static.ownerDocument;
}

function $getParentElement(this$static){
  return $getParentElement_0(($clinit_DOMImpl() , impl_0 , this$static));
}

function $getParentNode(this$static){
  return this$static.parentNode;
}

function $insertBefore(this$static, newChild, refChild){
  return this$static.insertBefore(newChild, refChild);
}

function $isOrHasChild(this$static, child){
  if (isNull_1(child)) {
    debugger;
    throw makeAssertionError_Object('Child cannot be null');
  }
  return ($clinit_DOMImpl() , impl_0).isOrHasChild(this$static, child);
}

function $removeChild(this$static, oldChild){
  return this$static.removeChild(oldChild);
}

function $replaceChild(this$static, newChild, oldChild){
  return this$static.replaceChild(newChild, oldChild);
}

function is(o){
  try {
    return !!o && !!o.nodeType;
  }
   catch (e) {
    return false;
  }
}

function $addClassName(this$static, className){
  var idx, oldClassName;
  className = trimClassName(className);
  oldClassName = $getClassName(this$static);
  idx = indexOfName(oldClassName, className);
  if (idx == -1) {
    $length_1(oldClassName) > 0?$setClassName(this$static, oldClassName + ' ' + className):$setClassName(this$static, className);
    return true;
  }
  return false;
}

function $dispatchEvent(this$static, evt){
  ($clinit_DOMImpl() , impl_0).dispatchEvent_0(this$static, evt);
}

function $focus(this$static){
  this$static.focus();
}

function $getAbsoluteLeft(this$static){
  return ($clinit_DOMImpl() , impl_0).getAbsoluteLeft(this$static);
}

function $getAbsoluteTop(this$static){
  return ($clinit_DOMImpl() , impl_0).getAbsoluteTop(this$static);
}

function $getAttribute(this$static, name_0){
  return $getAttribute_0(($clinit_DOMImpl() , impl_0 , this$static), name_0);
}

function $getClassName(this$static){
  return this$static.className;
}

function $getClientHeight(this$static){
  return toInt32($getSubPixelClientHeight(this$static));
}

function $getClientWidth(this$static){
  return toInt32($getSubPixelClientWidth(this$static));
}

function $getFirstChildElement(this$static){
  return $getFirstChildElement_0(($clinit_DOMImpl() , impl_0 , this$static));
}

function $getId(this$static){
  return this$static.id;
}

function $getInnerHTML(this$static){
  return $getInnerHTML_0(($clinit_DOMImpl() , impl_0 , this$static));
}

function $getInnerText(this$static){
  return ($clinit_DOMImpl() , impl_0).getInnerText(this$static);
}

function $getNextSiblingElement(this$static){
  return $getNextSiblingElement_0(($clinit_DOMImpl() , impl_0 , this$static));
}

function $getOffsetHeight(this$static){
  return toInt32($getSubPixelOffsetHeight(this$static));
}

function $getOffsetWidth(this$static){
  return toInt32($getSubPixelOffsetWidth(this$static));
}

function $getPropertyBoolean(this$static, name_0){
  return !!this$static[name_0];
}

function $getPropertyInt(this$static, name_0){
  return parseInt(this$static[name_0]) | 0;
}

function $getPropertyString(this$static, name_0){
  return this$static[name_0] == null?null:String(this$static[name_0]);
}

function $getScrollHeight(this$static){
  return toInt32($getSubPixelScrollHeight(this$static));
}

function $getScrollLeft(this$static){
  return ($clinit_DOMImpl() , impl_0).getScrollLeft_0(this$static);
}

function $getScrollTop(this$static){
  return toInt32($getSubPixelScrollTop(this$static));
}

function $getScrollWidth(this$static){
  return toInt32($getSubPixelScrollWidth(this$static));
}

function $getString(this$static){
  return $toString(($clinit_DOMImpl() , impl_0 , this$static));
}

function $getStyle(this$static){
  return this$static.style;
}

function $getSubPixelClientHeight(this$static){
  return this$static.clientHeight;
}

function $getSubPixelClientWidth(this$static){
  return this$static.clientWidth;
}

function $getSubPixelOffsetHeight(this$static){
  return this$static.offsetHeight || 0;
}

function $getSubPixelOffsetWidth(this$static){
  return this$static.offsetWidth || 0;
}

function $getSubPixelScrollHeight(this$static){
  return this$static.scrollHeight || 0;
}

function $getSubPixelScrollTop(this$static){
  return this$static.scrollTop || 0;
}

function $getSubPixelScrollWidth(this$static){
  return this$static.scrollWidth || 0;
}

function $getTabIndex(this$static){
  return ($clinit_DOMImpl() , impl_0).getTabIndex(this$static);
}

function $getTagName(this$static){
  return $getTagName_0(($clinit_DOMImpl() , impl_0 , this$static));
}

function $hasTagName(this$static, tagName){
  if (jsEquals(tagName, null)) {
    debugger;
    throw makeAssertionError_Object('tagName must not be null');
  }
  return $equalsIgnoreCase(tagName, $getTagName(this$static));
}

function $removeAttribute(this$static, name_0){
  this$static.removeAttribute(name_0);
}

function $removeClassName(this$static, className){
  var begin, end, idx, newClassName, oldStyle;
  className = trimClassName(className);
  oldStyle = $getClassName(this$static);
  idx = indexOfName(oldStyle, className);
  if (idx != -1) {
    begin = $trim($substring_0(oldStyle, 0, idx));
    end = $trim($substring(oldStyle, idx + $length_1(className)));
    $length_1(begin) == 0?(newClassName = end):$length_1(end) == 0?(newClassName = begin):(newClassName = begin + ' ' + end);
    $setClassName(this$static, newClassName);
    return true;
  }
  return false;
}

function $setAttribute(this$static, name_0, value_0){
  this$static.setAttribute(name_0, value_0);
}

function $setClassName(this$static, className){
  this$static.className = className;
}

function $setId(this$static, id_0){
  this$static.id = id_0;
}

function $setInnerHTML(this$static, html){
  this$static.innerHTML = html || '';
}

function $setInnerSafeHtml(this$static, html){
  $setInnerHTML(this$static, html.asString());
}

function $setInnerText(this$static, text_0){
  ($clinit_DOMImpl() , impl_0).setInnerText(this$static, text_0);
}

function $setPropertyBoolean(this$static, name_0, value_0){
  this$static[name_0] = value_0;
}

function $setPropertyInt(this$static, name_0, value_0){
  this$static[name_0] = value_0;
}

function $setPropertyString(this$static, name_0, value_0){
  this$static[name_0] = value_0;
}

function $setTabIndex(this$static, tabIndex){
  this$static.tabIndex = tabIndex;
}

function as(o){
  if (!is_0(o)) {
    debugger;
    throw makeAssertionError();
  }
  return o;
}

function indexOfName(nameList, name_0){
  var idx, last, lastPos;
  idx = $indexOf_3(nameList, name_0);
  while (idx != -1) {
    if (idx == 0 || $charAt(nameList, idx - 1) == 32) {
      last = idx + $length_1(name_0);
      lastPos = $length_1(nameList);
      if (last == lastPos || last < lastPos && $charAt(nameList, last) == 32) {
        break;
      }
    }
    idx = $indexOf_4(nameList, name_0, idx + 1);
  }
  return idx;
}

function is_0(o){
  if (is(o)) {
    return is_1(o);
  }
  return false;
}

function is_1(node){
  return isNotNull(node) && $getNodeType(node) == 1;
}

function toInt32(val){
  return val | 0;
}

function trimClassName(className){
  if (jsEquals(className, null)) {
    debugger;
    throw makeAssertionError_Object('Unexpectedly null class name');
  }
  className = $trim(className);
  if ($isEmpty(className)) {
    debugger;
    throw makeAssertionError_Object('Unexpectedly empty class name');
  }
  return className;
}

function $clinit_DOMImpl(){
  $clinit_DOMImpl = nullMethod;
  impl_0 = new DOMImplWebkit_0;
}

function $$init_95(){
}

function $createElement(doc, tag){
  return doc.createElement(tag);
}

function $createInputElement(doc, type_0){
  var e = doc.createElement('INPUT');
  e.type = type_0;
  return e;
}

function $createSelectElement(doc, multiple){
  var select;
  select = $createElement(doc, 'select');
  multiple && $setMultiple(select, true);
  return select;
}

function $cssFloatPropertyName(){
  return 'cssFloat';
}

function $cssSetOpacity(style, value_0){
  style.opacity = value_0;
}

function $eventGetAltKey(evt){
  return !!evt.altKey;
}

function $eventGetClientX(evt){
  return toInt32_0($eventGetSubPixelClientX(evt));
}

function $eventGetClientY(evt){
  return toInt32_0($eventGetSubPixelClientY(evt));
}

function $eventGetCtrlKey(evt){
  return !!evt.ctrlKey;
}

function $eventGetKeyCode(evt){
  return evt.keyCode | 0;
}

function $eventGetMetaKey(evt){
  return !!evt.metaKey;
}

function $eventGetShiftKey(evt){
  return !!evt.shiftKey;
}

function $eventGetSubPixelClientX(evt){
  return evt.clientX || 0;
}

function $eventGetSubPixelClientY(evt){
  return evt.clientY || 0;
}

function $eventGetType(evt){
  return evt.type;
}

function $eventStopPropagation(evt){
  evt.stopPropagation();
}

function $getAttribute_0(elem, name_0){
  return elem.getAttribute(name_0) || '';
}

function $getBodyOffsetLeft(){
  return 0;
}

function $getBodyOffsetTop(){
  return 0;
}

function $getFirstChildElement_0(elem){
  var child = elem.firstChild;
  while (child && child.nodeType != 1)
    child = child.nextSibling;
  return child;
}

function $getInnerHTML_0(elem){
  return elem.innerHTML;
}

function $getNextSiblingElement_0(elem){
  var sib = elem.nextSibling;
  while (sib && sib.nodeType != 1)
    sib = sib.nextSibling;
  return sib;
}

function $getParentElement_0(node){
  var parent_0 = node.parentNode;
  if (!parent_0 || parent_0.nodeType != 1) {
    parent_0 = null;
  }
  return parent_0;
}

function $getScrollLeft_0(elem){
  return toInt32_0($getSubPixelScrollLeft(elem));
}

function $getSubPixelAbsoluteLeft(elem){
  var left = 0;
  var curr = elem;
  while (curr.offsetParent) {
    left -= curr.scrollLeft;
    curr = curr.parentNode;
  }
  while (elem) {
    left += elem.offsetLeft;
    elem = elem.offsetParent;
  }
  return left;
}

function $getSubPixelAbsoluteTop(elem){
  var top_0 = 0;
  var curr = elem;
  while (curr.offsetParent) {
    top_0 -= curr.scrollTop;
    curr = curr.parentNode;
  }
  while (elem) {
    top_0 += elem.offsetTop;
    elem = elem.offsetParent;
  }
  return top_0;
}

function $getSubPixelScrollLeft(elem){
  return elem.scrollLeft || 0;
}

function $getTagName_0(elem){
  return elem.tagName;
}

function $imgSetSrc(img, src_0){
  img.src = src_0;
}

function $selectAdd(select, option, before){
  select.add(option, before);
}

function $selectGetLength(select){
  return select.options.length;
}

function $selectGetOptions(select){
  return select.options;
}

function $toString(elem){
  return elem.outerHTML;
}

function DOMImpl_0(){
  Object_1.call(this);
  $$init_95();
}

function toInt32_0(val){
  return val | 0;
}

defineSeed(115, 1, {});
_.createButtonElement = function createButtonElement(doc, type_0){
  var e = doc.createElement('BUTTON');
  e.type = type_0;
  return e;
}
;
_.eventGetCurrentTarget = function eventGetCurrentTarget(event_0){
  return event_0.currentTarget;
}
;
_.getAbsoluteLeft = function getAbsoluteLeft(elem){
  return toInt32_0($getSubPixelAbsoluteLeft(elem));
}
;
_.getAbsoluteTop = function getAbsoluteTop(elem){
  return toInt32_0($getSubPixelAbsoluteTop(elem));
}
;
_.getInnerText = function getInnerText(node){
  var text_0 = '', child = node.firstChild;
  while (child) {
    if (child.nodeType == 1) {
      text_0 += this.getInnerText(child);
    }
     else if (child.nodeValue) {
      text_0 += child.nodeValue;
    }
    child = child.nextSibling;
  }
  return text_0;
}
;
_.getScrollLeft = function getScrollLeft(doc){
  return $getScrollLeft($getViewportElement(doc));
}
;
_.getScrollLeft_0 = function getScrollLeft_0(elem){
  return $getScrollLeft_0(elem);
}
;
_.getScrollTop = function getScrollTop(doc){
  return $getScrollTop($getViewportElement(doc));
}
;
_.getTabIndex = function getTabIndex(elem){
  return elem.tabIndex;
}
;
_.setInnerText = function setInnerText(elem, text_0){
  while (elem.firstChild) {
    elem.removeChild(elem.firstChild);
  }
  if (text_0 != null) {
    elem.appendChild(elem.ownerDocument.createTextNode(text_0));
  }
}
;
var impl_0;
function $$init_96(){
}

function DOMImplStandard_0(){
  DOMImpl_0.call(this);
  $$init_96();
}

defineSeed(116, 115, {});
_.createHtmlEvent = function createHtmlEvent(doc, type_0, canBubble, cancelable){
  var evt = doc.createEvent('HTMLEvents');
  evt.initEvent(type_0, canBubble, cancelable);
  return evt;
}
;
_.dispatchEvent_0 = function dispatchEvent_0(target, evt){
  target.dispatchEvent(evt);
}
;
_.eventGetRelatedTarget = function eventGetRelatedTarget(evt){
  return evt.relatedTarget;
}
;
_.eventGetTarget = function eventGetTarget(evt){
  return evt.target;
}
;
_.eventPreventDefault = function eventPreventDefault(evt){
  evt.preventDefault();
}
;
_.getInnerText = function getInnerText_0(elem){
  return elem.textContent;
}
;
_.isOrHasChild = function isOrHasChild(parent_0, child){
  return parent_0.contains(child);
}
;
_.setInnerText = function setInnerText_0(elem, text_0){
  elem.textContent = text_0 || '';
}
;
function $$init_97(){
}

function $isRTL(elem){
  return elem.ownerDocument.defaultView.getComputedStyle(elem, '').direction == 'rtl';
}

function DOMImplStandardBase_0(){
  DOMImplStandard_0.call(this);
  $$init_97();
}

function getAbsoluteLeftUsingOffsets(elem){
  if (elem.offsetLeft == null) {
    return 0;
  }
  var left = 0;
  var doc = elem.ownerDocument;
  var curr = elem.parentNode;
  if (curr) {
    while (curr.offsetParent) {
      left -= curr.scrollLeft;
      if (doc.defaultView.getComputedStyle(curr, '').getPropertyValue('direction') == 'rtl') {
        left += curr.scrollWidth - curr.clientWidth;
      }
      curr = curr.parentNode;
    }
  }
  while (elem) {
    left += elem.offsetLeft;
    if (doc.defaultView.getComputedStyle(elem, '')['position'] == 'fixed') {
      left += doc.body.scrollLeft;
      return left;
    }
    var parent_0 = elem.offsetParent;
    if (parent_0 && $wnd.devicePixelRatio) {
      left += parseInt(doc.defaultView.getComputedStyle(parent_0, '').getPropertyValue('border-left-width'));
    }
    if (parent_0 && (parent_0.tagName == 'BODY' && elem.style.position == 'absolute')) {
      break;
    }
    elem = parent_0;
  }
  return left;
}

function getAbsoluteTopUsingOffsets(elem){
  if (elem.offsetTop == null) {
    return 0;
  }
  var top_0 = 0;
  var doc = elem.ownerDocument;
  var curr = elem.parentNode;
  if (curr) {
    while (curr.offsetParent) {
      top_0 -= curr.scrollTop;
      curr = curr.parentNode;
    }
  }
  while (elem) {
    top_0 += elem.offsetTop;
    if (doc.defaultView.getComputedStyle(elem, '')['position'] == 'fixed') {
      top_0 += doc.body.scrollTop;
      return top_0;
    }
    var parent_0 = elem.offsetParent;
    if (parent_0 && $wnd.devicePixelRatio) {
      top_0 += parseInt(doc.defaultView.getComputedStyle(parent_0, '').getPropertyValue('border-top-width'));
    }
    if (parent_0 && (parent_0.tagName == 'BODY' && elem.style.position == 'absolute')) {
      break;
    }
    elem = parent_0;
  }
  return top_0;
}

function getBoundingClientRect(element){
  return element.getBoundingClientRect && element.getBoundingClientRect();
}

defineSeed(117, 116, {});
_.createButtonElement = function createButtonElement_0(doc, type_0){
  var e = doc.createElement('BUTTON');
  e.setAttribute('type', type_0);
  return e;
}
;
_.eventGetCurrentTarget = function eventGetCurrentTarget_0(event_0){
  return event_0.currentTarget || $wnd;
}
;
_.getAbsoluteLeft = function getAbsoluteLeft_0(elem){
  var left, rect;
  rect = getBoundingClientRect(elem);
  left = isNotNull(rect)?$getSubPixelLeft(rect) + $getScrollLeft($getBody($getOwnerDocument(elem))):getAbsoluteLeftUsingOffsets(elem);
  return toInt32_0(left);
}
;
_.getAbsoluteTop = function getAbsoluteTop_0(elem){
  var rect, top_0;
  rect = getBoundingClientRect(elem);
  top_0 = isNotNull(rect)?$getSubPixelTop(rect) + $getScrollTop($getBody($getOwnerDocument(elem))):getAbsoluteTopUsingOffsets(elem);
  return toInt32_0(top_0);
}
;
_.getScrollLeft = function getScrollLeft_1(doc){
  return $getScrollLeft($getBody(doc));
}
;
_.getScrollLeft_0 = function getScrollLeft_2(elem){
  if (!$hasTagName(elem, 'body') && $isRTL(elem)) {
    return $getScrollLeft_0(elem) - ($getScrollWidth(elem) - $getClientWidth(elem));
  }
  return $getScrollLeft_0(elem);
}
;
_.getScrollTop = function getScrollTop_0(doc){
  return $getScrollTop($getBody(doc));
}
;
_.getTabIndex = function getTabIndex_0(elem){
  return typeof elem.tabIndex != 'undefined'?elem.tabIndex:-1;
}
;
function $getSubPixelLeft(this$static){
  return this$static.left;
}

function $getSubPixelTop(this$static){
  return this$static.top;
}

function $$init_98(){
}

function DOMImplWebkit_0(){
  DOMImplStandardBase_0.call(this);
  $$init_98();
}

defineSeed(119, 117, {}, DOMImplWebkit_0);
_.eventGetTarget = function eventGetTarget_0(evt){
  var target = evt.target;
  if (target && target.nodeType == 3) {
    target = target.parentNode;
  }
  return target;
}
;
function $createDivElement(this$static){
  return $createElement(($clinit_DOMImpl() , impl_0 , this$static), 'div');
}

function $createElement_0(this$static, tagName){
  return $createElement(($clinit_DOMImpl() , impl_0 , this$static), tagName);
}

function $createFileInputElement(this$static){
  return $createInputElement(($clinit_DOMImpl() , impl_0 , this$static), 'file');
}

function $createFormElement(this$static){
  return $createElement(($clinit_DOMImpl() , impl_0 , this$static), 'form');
}

function $createHtmlEvent(this$static, type_0, canBubble, cancelable){
  return ($clinit_DOMImpl() , impl_0).createHtmlEvent(this$static, type_0, canBubble, cancelable);
}

function $createIFrameElement(this$static){
  return $createElement(($clinit_DOMImpl() , impl_0 , this$static), 'iframe');
}

function $createImageElement(this$static){
  return $createElement(($clinit_DOMImpl() , impl_0 , this$static), 'img');
}

function $createLoadEvent(this$static){
  return $createHtmlEvent(this$static, 'load', false, false);
}

function $createMetaElement(this$static){
  return $createElement(($clinit_DOMImpl() , impl_0 , this$static), 'meta');
}

function $createOptionElement(this$static){
  return $createElement(($clinit_DOMImpl() , impl_0 , this$static), 'option');
}

function $createPasswordInputElement(this$static){
  return $createInputElement(($clinit_DOMImpl() , impl_0 , this$static), 'password');
}

function $createPushButtonElement(this$static){
  return ($clinit_DOMImpl() , impl_0).createButtonElement(this$static, 'button');
}

function $createSelectElement_0(this$static, multiple){
  return $createSelectElement(($clinit_DOMImpl() , impl_0 , this$static), multiple);
}

function $createSpanElement(this$static){
  return $createElement(($clinit_DOMImpl() , impl_0 , this$static), 'span');
}

function $createStyleElement(this$static){
  return $createElement(($clinit_DOMImpl() , impl_0 , this$static), 'style');
}

function $createTBodyElement(this$static){
  return $createElement(($clinit_DOMImpl() , impl_0 , this$static), 'tbody');
}

function $createTDElement(this$static){
  return $createElement(($clinit_DOMImpl() , impl_0 , this$static), 'td');
}

function $createTRElement(this$static){
  return $createElement(($clinit_DOMImpl() , impl_0 , this$static), 'tr');
}

function $createTableElement(this$static){
  return $createElement(($clinit_DOMImpl() , impl_0 , this$static), 'table');
}

function $createTextAreaElement(this$static){
  return $createElement(($clinit_DOMImpl() , impl_0 , this$static), 'textarea');
}

function $createTextInputElement(this$static){
  return $createInputElement(($clinit_DOMImpl() , impl_0 , this$static), 'text');
}

function $createUniqueId(this$static){
  if (!this$static.gwt_uid) {
    this$static.gwt_uid = 1;
  }
  return 'gwt-uid-' + this$static.gwt_uid++;
}

function $getBody(this$static){
  return this$static.body;
}

function $getBodyOffsetLeft_0(){
  return $getBodyOffsetLeft(($clinit_DOMImpl() , impl_0));
}

function $getBodyOffsetTop_0(){
  return $getBodyOffsetTop(($clinit_DOMImpl() , impl_0));
}

function $getClientHeight_0(this$static){
  return $getClientHeight($getViewportElement(this$static));
}

function $getClientWidth_0(this$static){
  return $getClientWidth($getViewportElement(this$static));
}

function $getCompatMode(this$static){
  return this$static.compatMode;
}

function $getDocumentElement(this$static){
  return this$static.documentElement;
}

function $getElementById(this$static, elementId){
  return this$static.getElementById(elementId);
}

function $getElementsByTagName(this$static, tagName){
  return this$static.getElementsByTagName(tagName);
}

function $getScrollHeight_0(this$static){
  return $getScrollHeight($getViewportElement(this$static));
}

function $getScrollLeft_1(this$static){
  return ($clinit_DOMImpl() , impl_0).getScrollLeft(this$static);
}

function $getScrollTop_0(this$static){
  return ($clinit_DOMImpl() , impl_0).getScrollTop(this$static);
}

function $getScrollWidth_0(this$static){
  return $getScrollWidth($getViewportElement(this$static));
}

function $getViewportElement(this$static){
  return $isCSS1Compat(this$static)?$getDocumentElement(this$static):$getBody(this$static);
}

function $isCSS1Compat(this$static){
  return $equals_2($getCompatMode(this$static), 'CSS1Compat');
}

function get_2(){
  return nativeGet();
}

function nativeGet(){
  return $doc;
}

function $getTarget(this$static){
  return this$static.target;
}

function $setTarget(this$static, target){
  this$static.target = target;
}

function as_0(elem){
  if (!is_2(elem)) {
    debugger;
    throw makeAssertionError();
  }
  return elem;
}

function is_2(elem){
  return isNotNull(elem) && $hasTagName(elem, 'form');
}

function as_1(elem){
  if (!is_3(elem)) {
    debugger;
    throw makeAssertionError();
  }
  return elem;
}

function is_3(elem){
  return isNotNull(elem) && $hasTagName(elem, 'head');
}

function $setSrc(this$static, src_0){
  this$static.src = src_0;
}

function $setSrc_0(this$static, src_0){
  $imgSetSrc(($clinit_DOMImpl() , impl_0 , this$static), src_0);
}

function $setContent(this$static, content_0){
  this$static.content = content_0;
}

function $setName(this$static, name_0){
  this$static.name = name_0;
}

function $getAltKey(this$static){
  return $eventGetAltKey(($clinit_DOMImpl() , impl_0 , this$static));
}

function $getClientX(this$static){
  return $eventGetClientX(($clinit_DOMImpl() , impl_0 , this$static));
}

function $getClientY(this$static){
  return $eventGetClientY(($clinit_DOMImpl() , impl_0 , this$static));
}

function $getCtrlKey(this$static){
  return $eventGetCtrlKey(($clinit_DOMImpl() , impl_0 , this$static));
}

function $getCurrentEventTarget(this$static){
  return ($clinit_DOMImpl() , impl_0).eventGetCurrentTarget(this$static);
}

function $getEventTarget(this$static){
  return ($clinit_DOMImpl() , impl_0).eventGetTarget(this$static);
}

function $getKeyCode(this$static){
  return $eventGetKeyCode(($clinit_DOMImpl() , impl_0 , this$static));
}

function $getMetaKey(this$static){
  return $eventGetMetaKey(($clinit_DOMImpl() , impl_0 , this$static));
}

function $getRelatedEventTarget(this$static){
  return ($clinit_DOMImpl() , impl_0).eventGetRelatedTarget(this$static);
}

function $getShiftKey(this$static){
  return $eventGetShiftKey(($clinit_DOMImpl() , impl_0 , this$static));
}

function $getType(this$static){
  return $eventGetType(($clinit_DOMImpl() , impl_0 , this$static));
}

function $preventDefault(this$static){
  ($clinit_DOMImpl() , impl_0).eventPreventDefault(this$static);
}

function $stopPropagation(this$static){
  $eventStopPropagation(($clinit_DOMImpl() , impl_0 , this$static));
}

function $getItem(this$static, index_0){
  return this$static[index_0];
}

function $getLength(this$static){
  return this$static.length;
}

function $setText(this$static, text_0){
  this$static.text = text_0;
}

function $setValue(this$static, value_0){
  this$static.value = value_0;
}

function $add(this$static, option, before){
  $selectAdd(($clinit_DOMImpl() , impl_0 , this$static), option, before);
}

function $getLength_0(this$static){
  return $selectGetLength(($clinit_DOMImpl() , impl_0 , this$static));
}

function $getOptions(this$static){
  return $selectGetOptions(($clinit_DOMImpl() , impl_0 , this$static));
}

function $setMultiple(this$static, multiple){
  this$static.multiple = multiple;
}

function $setSize(this$static, size_0){
  this$static.size = size_0;
}

function $assertCamelCase(name_0){
  if ($contains_0(name_0, '-')) {
    debugger;
    throw makeAssertionError_Object("The style name '" + name_0 + "' should be in camelCase format");
  }
}

function $setDisplay(this$static, value_0){
  $setProperty_0(this$static, 'display', value_0.getCssName());
}

function $setFloat(this$static, value_0){
  $setProperty_0(this$static, $cssFloatPropertyName(($clinit_DOMImpl() , impl_0)), value_0.getCssName());
}

function $setHeight(this$static, value_0, unit){
  $setProperty(this$static, 'height', value_0, unit);
}

function $setLeft(this$static, value_0, unit){
  $setProperty(this$static, 'left', value_0, unit);
}

function $setOpacity(this$static, value_0){
  $cssSetOpacity(($clinit_DOMImpl() , impl_0 , this$static), value_0);
}

function $setOverflow(this$static, value_0){
  $setProperty_0(this$static, 'overflow', value_0.getCssName());
}

function $setOverflowX(this$static, value_0){
  $setProperty_0(this$static, 'overflowX', value_0.getCssName());
}

function $setOverflowY(this$static, value_0){
  $setProperty_0(this$static, 'overflowY', value_0.getCssName());
}

function $setPosition(this$static, value_0){
  $setProperty_0(this$static, 'position', value_0.getCssName());
}

function $setProperty(this$static, name_0, value_0, unit){
  $assertCamelCase(name_0);
  $setPropertyImpl(this$static, name_0, value_0 + unit.getType());
}

function $setProperty_0(this$static, name_0, value_0){
  $assertCamelCase(name_0);
  $setPropertyImpl(this$static, name_0, value_0);
}

function $setPropertyImpl(this$static, name_0, value_0){
  this$static[name_0] = value_0;
}

function $setPropertyPx(this$static, name_0, value_0){
  $setProperty(this$static, name_0, value_0, ($clinit_Style$Unit() , PX));
}

function $setTextAlign(this$static, value_0){
  $setProperty_0(this$static, 'textAlign', value_0.getCssName());
}

function $setTop(this$static, value_0, unit){
  $setProperty(this$static, 'top', value_0, unit);
}

function $setVisibility(this$static, value_0){
  $setProperty_0(this$static, 'visibility', value_0.getCssName());
}

function $setWidth(this$static, value_0, unit){
  $setProperty(this$static, 'width', value_0, unit);
}

function $setZIndex(this$static, value_0){
  $setProperty_0(this$static, 'zIndex', value_0 + '');
}

function $$init_99(){
}

function $equals_1(this$static, other){
  return this$static === other;
}

function $name(this$static){
  return this$static.name_0;
}

function $ordinal(this$static){
  return this$static.ordinal;
}

function Enum_0(name_0, ordinal){
  Object_1.call(this);
  $$init_99();
  this.name_0 = name_0;
  this.ordinal = ordinal;
}

function createValueOfMap(enumConstants){
  var result, value_0, value$array, value$index, value$max;
  result = createObject();
  for (value$array = enumConstants , value$index = 0 , value$max = value$array.length; value$index < value$max; ++value$index) {
    value_0 = value$array[value$index];
    put0(result, ':' + $name(value_0), value_0);
  }
  return result;
}

function get0(map_0, name_0){
  return map_0[name_0];
}

function put0(map_0, name_0, value_0){
  map_0[name_0] = value_0;
}

function valueOf(map_0, name_0){
  var result;
  result = get0(map_0, ':' + name_0);
  if (isNotNull(result)) {
    return result;
  }
  if (jsEquals(name_0, null)) {
    throw new NullPointerException_0;
  }
  throw new IllegalArgumentException_1('Enum constant undefined: ' + name_0);
}

defineSeed(134, 1, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum]));
_.equals$ = function equals_0(other){
  return $equals_1(this, other);
}
;
_.hashCode$ = function hashCode_1(){
  return $hashCode(this);
}
;
_.toString$ = function toString_4(){
  return $name(this);
}
;
_.ordinal = 0;
function $clinit_Style$Display(){
  $clinit_Style$Display = nullMethod;
  NONE = new Style$Display$1_0('NONE', 0);
  BLOCK = new Style$Display$2_0('BLOCK', 1);
  INLINE = new Style$Display$3_0('INLINE', 2);
  INLINE_BLOCK = new Style$Display$4_0('INLINE_BLOCK', 3);
  $VALUES = initValues(_3Lcom_google_gwt_dom_client_Style$Display_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Display, [NONE, BLOCK, INLINE, INLINE_BLOCK]);
}

function $$init_100(){
}

function Style$Display_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_100();
}

function valueOf_0(name_0){
  $clinit_Style$Display();
  return valueOf(($clinit_Style$Display$Map() , $MAP), name_0);
}

function values_0(){
  $clinit_Style$Display();
  return $VALUES;
}

defineSeed(133, 134, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]));
var $VALUES, BLOCK, INLINE, INLINE_BLOCK, NONE;
function $$init_101(){
}

function Style$Display$1_0(enum$name, enum$ordinal){
  Style$Display_0.call(this, enum$name, enum$ordinal);
  $$init_101();
}

defineSeed(135, 133, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$1_0);
_.getCssName = function getCssName(){
  return 'none';
}
;
function $$init_102(){
}

function Style$Display$2_0(enum$name, enum$ordinal){
  Style$Display_0.call(this, enum$name, enum$ordinal);
  $$init_102();
}

defineSeed(136, 133, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$2_0);
_.getCssName = function getCssName_0(){
  return 'block';
}
;
function $$init_103(){
}

function Style$Display$3_0(enum$name, enum$ordinal){
  Style$Display_0.call(this, enum$name, enum$ordinal);
  $$init_103();
}

defineSeed(137, 133, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$3_0);
_.getCssName = function getCssName_1(){
  return 'inline';
}
;
function $$init_104(){
}

function Style$Display$4_0(enum$name, enum$ordinal){
  Style$Display_0.call(this, enum$name, enum$ordinal);
  $$init_104();
}

defineSeed(138, 133, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$4_0);
_.getCssName = function getCssName_2(){
  return 'inline-block';
}
;
function $clinit_Style$Display$Map(){
  $clinit_Style$Display$Map = nullMethod;
  $MAP = createValueOfMap(($clinit_Style$Display() , $VALUES));
}

var $MAP;
function $clinit_Style$Float(){
  $clinit_Style$Float = nullMethod;
  LEFT = new Style$Float$1_0('LEFT', 0);
  RIGHT = new Style$Float$2_0('RIGHT', 1);
  NONE_0 = new Style$Float$3_0('NONE', 2);
  $VALUES_0 = initValues(_3Lcom_google_gwt_dom_client_Style$Float_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Float, [LEFT, RIGHT, NONE_0]);
}

function $$init_105(){
}

function Style$Float_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_105();
}

function valueOf_1(name_0){
  $clinit_Style$Float();
  return valueOf(($clinit_Style$Float$Map() , $MAP_0), name_0);
}

function values_1(){
  $clinit_Style$Float();
  return $VALUES_0;
}

defineSeed(140, 134, makeCastMap([Q$Style$Float, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]));
var $VALUES_0, LEFT, NONE_0, RIGHT;
function $$init_106(){
}

function Style$Float$1_0(enum$name, enum$ordinal){
  Style$Float_0.call(this, enum$name, enum$ordinal);
  $$init_106();
}

defineSeed(141, 140, makeCastMap([Q$Style$Float, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Float$1_0);
_.getCssName = function getCssName_3(){
  return 'left';
}
;
function $$init_107(){
}

function Style$Float$2_0(enum$name, enum$ordinal){
  Style$Float_0.call(this, enum$name, enum$ordinal);
  $$init_107();
}

defineSeed(142, 140, makeCastMap([Q$Style$Float, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Float$2_0);
_.getCssName = function getCssName_4(){
  return 'right';
}
;
function $$init_108(){
}

function Style$Float$3_0(enum$name, enum$ordinal){
  Style$Float_0.call(this, enum$name, enum$ordinal);
  $$init_108();
}

defineSeed(143, 140, makeCastMap([Q$Style$Float, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Float$3_0);
_.getCssName = function getCssName_5(){
  return 'none';
}
;
function $clinit_Style$Float$Map(){
  $clinit_Style$Float$Map = nullMethod;
  $MAP_0 = createValueOfMap(($clinit_Style$Float() , $VALUES_0));
}

var $MAP_0;
function $clinit_Style$Overflow(){
  $clinit_Style$Overflow = nullMethod;
  VISIBLE = new Style$Overflow$1_0('VISIBLE', 0);
  HIDDEN = new Style$Overflow$2_0('HIDDEN', 1);
  SCROLL = new Style$Overflow$3_0('SCROLL', 2);
  AUTO = new Style$Overflow$4_0('AUTO', 3);
  $VALUES_1 = initValues(_3Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Overflow, [VISIBLE, HIDDEN, SCROLL, AUTO]);
}

function $$init_109(){
}

function Style$Overflow_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_109();
}

function valueOf_2(name_0){
  $clinit_Style$Overflow();
  return valueOf(($clinit_Style$Overflow$Map() , $MAP_1), name_0);
}

function values_2(){
  $clinit_Style$Overflow();
  return $VALUES_1;
}

defineSeed(145, 134, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]));
var $VALUES_1, AUTO, HIDDEN, SCROLL, VISIBLE;
function $$init_110(){
}

function Style$Overflow$1_0(enum$name, enum$ordinal){
  Style$Overflow_0.call(this, enum$name, enum$ordinal);
  $$init_110();
}

defineSeed(146, 145, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$1_0);
_.getCssName = function getCssName_6(){
  return 'visible';
}
;
function $$init_111(){
}

function Style$Overflow$2_0(enum$name, enum$ordinal){
  Style$Overflow_0.call(this, enum$name, enum$ordinal);
  $$init_111();
}

defineSeed(147, 145, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$2_0);
_.getCssName = function getCssName_7(){
  return 'hidden';
}
;
function $$init_112(){
}

function Style$Overflow$3_0(enum$name, enum$ordinal){
  Style$Overflow_0.call(this, enum$name, enum$ordinal);
  $$init_112();
}

defineSeed(148, 145, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$3_0);
_.getCssName = function getCssName_8(){
  return 'scroll';
}
;
function $$init_113(){
}

function Style$Overflow$4_0(enum$name, enum$ordinal){
  Style$Overflow_0.call(this, enum$name, enum$ordinal);
  $$init_113();
}

defineSeed(149, 145, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$4_0);
_.getCssName = function getCssName_9(){
  return 'auto';
}
;
function $clinit_Style$Overflow$Map(){
  $clinit_Style$Overflow$Map = nullMethod;
  $MAP_1 = createValueOfMap(($clinit_Style$Overflow() , $VALUES_1));
}

var $MAP_1;
function $clinit_Style$Position(){
  $clinit_Style$Position = nullMethod;
  STATIC = new Style$Position$1_0('STATIC', 0);
  RELATIVE = new Style$Position$2_0('RELATIVE', 1);
  ABSOLUTE = new Style$Position$3_0('ABSOLUTE', 2);
  FIXED = new Style$Position$4_0('FIXED', 3);
  $VALUES_2 = initValues(_3Lcom_google_gwt_dom_client_Style$Position_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Position, [STATIC, RELATIVE, ABSOLUTE, FIXED]);
}

function $$init_114(){
}

function Style$Position_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_114();
}

function valueOf_3(name_0){
  $clinit_Style$Position();
  return valueOf(($clinit_Style$Position$Map() , $MAP_2), name_0);
}

function values_3(){
  $clinit_Style$Position();
  return $VALUES_2;
}

defineSeed(151, 134, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]));
var $VALUES_2, ABSOLUTE, FIXED, RELATIVE, STATIC;
function $$init_115(){
}

function Style$Position$1_0(enum$name, enum$ordinal){
  Style$Position_0.call(this, enum$name, enum$ordinal);
  $$init_115();
}

defineSeed(152, 151, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$1_0);
_.getCssName = function getCssName_10(){
  return 'static';
}
;
function $$init_116(){
}

function Style$Position$2_0(enum$name, enum$ordinal){
  Style$Position_0.call(this, enum$name, enum$ordinal);
  $$init_116();
}

defineSeed(153, 151, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$2_0);
_.getCssName = function getCssName_11(){
  return 'relative';
}
;
function $$init_117(){
}

function Style$Position$3_0(enum$name, enum$ordinal){
  Style$Position_0.call(this, enum$name, enum$ordinal);
  $$init_117();
}

defineSeed(154, 151, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$3_0);
_.getCssName = function getCssName_12(){
  return 'absolute';
}
;
function $$init_118(){
}

function Style$Position$4_0(enum$name, enum$ordinal){
  Style$Position_0.call(this, enum$name, enum$ordinal);
  $$init_118();
}

defineSeed(155, 151, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$4_0);
_.getCssName = function getCssName_13(){
  return 'fixed';
}
;
function $clinit_Style$Position$Map(){
  $clinit_Style$Position$Map = nullMethod;
  $MAP_2 = createValueOfMap(($clinit_Style$Position() , $VALUES_2));
}

var $MAP_2;
function $clinit_Style$TextAlign(){
  $clinit_Style$TextAlign = nullMethod;
  CENTER = new Style$TextAlign$1_0('CENTER', 0);
  JUSTIFY = new Style$TextAlign$2_0('JUSTIFY', 1);
  LEFT_0 = new Style$TextAlign$3_0('LEFT', 2);
  RIGHT_0 = new Style$TextAlign$4_0('RIGHT', 3);
  $VALUES_3 = initValues(_3Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, makeCastMap([Q$Serializable]), Q$Style$TextAlign, [CENTER, JUSTIFY, LEFT_0, RIGHT_0]);
}

function $$init_119(){
}

function Style$TextAlign_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_119();
}

function valueOf_4(name_0){
  $clinit_Style$TextAlign();
  return valueOf(($clinit_Style$TextAlign$Map() , $MAP_3), name_0);
}

function values_4(){
  $clinit_Style$TextAlign();
  return $VALUES_3;
}

defineSeed(157, 134, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]));
var $VALUES_3, CENTER, JUSTIFY, LEFT_0, RIGHT_0;
function $$init_120(){
}

function Style$TextAlign$1_0(enum$name, enum$ordinal){
  Style$TextAlign_0.call(this, enum$name, enum$ordinal);
  $$init_120();
}

defineSeed(158, 157, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$1_0);
_.getCssName = function getCssName_14(){
  return 'center';
}
;
function $$init_121(){
}

function Style$TextAlign$2_0(enum$name, enum$ordinal){
  Style$TextAlign_0.call(this, enum$name, enum$ordinal);
  $$init_121();
}

defineSeed(159, 157, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$2_0);
_.getCssName = function getCssName_15(){
  return 'justify';
}
;
function $$init_122(){
}

function Style$TextAlign$3_0(enum$name, enum$ordinal){
  Style$TextAlign_0.call(this, enum$name, enum$ordinal);
  $$init_122();
}

defineSeed(160, 157, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$3_0);
_.getCssName = function getCssName_16(){
  return 'left';
}
;
function $$init_123(){
}

function Style$TextAlign$4_0(enum$name, enum$ordinal){
  Style$TextAlign_0.call(this, enum$name, enum$ordinal);
  $$init_123();
}

defineSeed(161, 157, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$4_0);
_.getCssName = function getCssName_17(){
  return 'right';
}
;
function $clinit_Style$TextAlign$Map(){
  $clinit_Style$TextAlign$Map = nullMethod;
  $MAP_3 = createValueOfMap(($clinit_Style$TextAlign() , $VALUES_3));
}

var $MAP_3;
function $clinit_Style$Unit(){
  $clinit_Style$Unit = nullMethod;
  PX = new Style$Unit$1_0('PX', 0);
  PCT = new Style$Unit$2_0('PCT', 1);
  EM = new Style$Unit$3_0('EM', 2);
  EX = new Style$Unit$4_0('EX', 3);
  PT = new Style$Unit$5_0('PT', 4);
  PC = new Style$Unit$6_0('PC', 5);
  IN = new Style$Unit$7_0('IN', 6);
  CM = new Style$Unit$8_0('CM', 7);
  MM = new Style$Unit$9_0('MM', 8);
  $VALUES_4 = initValues(_3Lcom_google_gwt_dom_client_Style$Unit_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Unit, [PX, PCT, EM, EX, PT, PC, IN, CM, MM]);
}

function $$init_124(){
}

function Style$Unit_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_124();
}

function valueOf_5(name_0){
  $clinit_Style$Unit();
  return valueOf(($clinit_Style$Unit$Map() , $MAP_4), name_0);
}

function values_5(){
  $clinit_Style$Unit();
  return $VALUES_4;
}

defineSeed(163, 134, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]));
var $VALUES_4, CM, EM, EX, IN, MM, PC, PCT, PT, PX;
function $$init_125(){
}

function Style$Unit$1_0(enum$name, enum$ordinal){
  Style$Unit_0.call(this, enum$name, enum$ordinal);
  $$init_125();
}

defineSeed(164, 163, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$1_0);
_.getType = function getType(){
  return 'px';
}
;
function $$init_126(){
}

function Style$Unit$2_0(enum$name, enum$ordinal){
  Style$Unit_0.call(this, enum$name, enum$ordinal);
  $$init_126();
}

defineSeed(165, 163, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$2_0);
_.getType = function getType_0(){
  return '%';
}
;
function $$init_127(){
}

function Style$Unit$3_0(enum$name, enum$ordinal){
  Style$Unit_0.call(this, enum$name, enum$ordinal);
  $$init_127();
}

defineSeed(166, 163, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$3_0);
_.getType = function getType_1(){
  return 'em';
}
;
function $$init_128(){
}

function Style$Unit$4_0(enum$name, enum$ordinal){
  Style$Unit_0.call(this, enum$name, enum$ordinal);
  $$init_128();
}

defineSeed(167, 163, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$4_0);
_.getType = function getType_2(){
  return 'ex';
}
;
function $$init_129(){
}

function Style$Unit$5_0(enum$name, enum$ordinal){
  Style$Unit_0.call(this, enum$name, enum$ordinal);
  $$init_129();
}

defineSeed(168, 163, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$5_0);
_.getType = function getType_3(){
  return 'pt';
}
;
function $$init_130(){
}

function Style$Unit$6_0(enum$name, enum$ordinal){
  Style$Unit_0.call(this, enum$name, enum$ordinal);
  $$init_130();
}

defineSeed(169, 163, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$6_0);
_.getType = function getType_4(){
  return 'pc';
}
;
function $$init_131(){
}

function Style$Unit$7_0(enum$name, enum$ordinal){
  Style$Unit_0.call(this, enum$name, enum$ordinal);
  $$init_131();
}

defineSeed(170, 163, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$7_0);
_.getType = function getType_5(){
  return 'in';
}
;
function $$init_132(){
}

function Style$Unit$8_0(enum$name, enum$ordinal){
  Style$Unit_0.call(this, enum$name, enum$ordinal);
  $$init_132();
}

defineSeed(171, 163, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$8_0);
_.getType = function getType_6(){
  return 'cm';
}
;
function $$init_133(){
}

function Style$Unit$9_0(enum$name, enum$ordinal){
  Style$Unit_0.call(this, enum$name, enum$ordinal);
  $$init_133();
}

defineSeed(172, 163, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$9_0);
_.getType = function getType_7(){
  return 'mm';
}
;
function $clinit_Style$Unit$Map(){
  $clinit_Style$Unit$Map = nullMethod;
  $MAP_4 = createValueOfMap(($clinit_Style$Unit() , $VALUES_4));
}

var $MAP_4;
function $clinit_Style$Visibility(){
  $clinit_Style$Visibility = nullMethod;
  VISIBLE_0 = new Style$Visibility$1_0('VISIBLE', 0);
  HIDDEN_0 = new Style$Visibility$2_0('HIDDEN', 1);
  $VALUES_5 = initValues(_3Lcom_google_gwt_dom_client_Style$Visibility_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Visibility, [VISIBLE_0, HIDDEN_0]);
}

function $$init_134(){
}

function Style$Visibility_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_134();
}

function valueOf_6(name_0){
  $clinit_Style$Visibility();
  return valueOf(($clinit_Style$Visibility$Map() , $MAP_5), name_0);
}

function values_6(){
  $clinit_Style$Visibility();
  return $VALUES_5;
}

defineSeed(174, 134, makeCastMap([Q$Style$HasCssName, Q$Style$Visibility, Q$Serializable, Q$Comparable, Q$Enum]));
var $VALUES_5, HIDDEN_0, VISIBLE_0;
function $$init_135(){
}

function Style$Visibility$1_0(enum$name, enum$ordinal){
  Style$Visibility_0.call(this, enum$name, enum$ordinal);
  $$init_135();
}

defineSeed(175, 174, makeCastMap([Q$Style$HasCssName, Q$Style$Visibility, Q$Serializable, Q$Comparable, Q$Enum]), Style$Visibility$1_0);
_.getCssName = function getCssName_18(){
  return 'visible';
}
;
function $$init_136(){
}

function Style$Visibility$2_0(enum$name, enum$ordinal){
  Style$Visibility_0.call(this, enum$name, enum$ordinal);
  $$init_136();
}

defineSeed(176, 174, makeCastMap([Q$Style$HasCssName, Q$Style$Visibility, Q$Serializable, Q$Comparable, Q$Enum]), Style$Visibility$2_0);
_.getCssName = function getCssName_19(){
  return 'hidden';
}
;
function $clinit_Style$Visibility$Map(){
  $clinit_Style$Visibility$Map = nullMethod;
  $MAP_5 = createValueOfMap(($clinit_Style$Visibility() , $VALUES_5));
}

var $MAP_5;
function $clinit_StyleInjector(){
  $clinit_StyleInjector = nullMethod;
  toInject = $cast(createArray());
  toInjectAtEnd = $cast(createArray());
  toInjectAtStart = $cast(createArray());
  flusher = new StyleInjector$1_0;
}

function flush(which){
  $clinit_StyleInjector();
  var css, maybeReturn, toReturn;
  toReturn = null;
  if ($length_0(toInjectAtStart) != 0) {
    css = $join(toInjectAtStart, '');
    maybeReturn = $injectStyleSheetAtStart(($clinit_StyleInjector$StyleInjectorImpl() , IMPL), css);
    jsEquals(toInjectAtStart, which) && (toReturn = maybeReturn);
    $setLength(toInjectAtStart, 0);
  }
  if ($length_0(toInject) != 0) {
    css = $join(toInject, '');
    maybeReturn = $injectStyleSheet(($clinit_StyleInjector$StyleInjectorImpl() , IMPL), css);
    jsEquals(toInject, which) && (toReturn = maybeReturn);
    $setLength(toInject, 0);
  }
  if ($length_0(toInjectAtEnd) != 0) {
    css = $join(toInjectAtEnd, '');
    maybeReturn = $injectStyleSheetAtEnd(($clinit_StyleInjector$StyleInjectorImpl() , IMPL), css);
    jsEquals(toInjectAtEnd, which) && (toReturn = maybeReturn);
    $setLength(toInjectAtEnd, 0);
  }
  needsInjection = false;
  return toReturn;
}

function inject(css){
  $clinit_StyleInjector();
  inject_0(css, false);
}

function inject_0(css, immediate){
  $push_0(toInject, css);
  inject_1(immediate);
}

function inject_1(immediate){
  immediate?flush(null):schedule();
}

function schedule(){
  if (!needsInjection) {
    needsInjection = true;
    get_1().scheduleFinally(flusher);
  }
}

var flusher, needsInjection = false, toInject, toInjectAtEnd, toInjectAtStart;
function $$init_137(){
}

function StyleInjector$1_0(){
  Object_1.call(this);
  $$init_137();
}

defineSeed(179, 1, {}, StyleInjector$1_0);
_.execute_1 = function execute_3(){
  ($clinit_StyleInjector() , needsInjection) && flush(null);
}
;
function $clinit_StyleInjector$StyleInjectorImpl(){
  $clinit_StyleInjector$StyleInjectorImpl = nullMethod;
  IMPL = new StyleInjector$StyleInjectorImpl_0;
}

function $$init_138(){
}

function $createElement_1(contents){
  var style;
  style = $createStyleElement(get_2());
  $setPropertyString(style, 'language', 'text/css');
  $setContents(style, contents);
  return style;
}

function $getHead(this$static){
  var elt;
  if (isNull_1(this$static.head)) {
    elt = $getItem($getElementsByTagName(get_2(), 'head'), 0);
    if (isNull_1(elt)) {
      debugger;
      throw makeAssertionError_Object('The host HTML page does not have a <head> element which is required by StyleInjector');
    }
    this$static.head = as_1(elt);
  }
  return this$static.head;
}

function $injectStyleSheet(this$static, contents){
  var style;
  style = $createElement_1(contents);
  $appendChild($getHead(this$static), style);
  return style;
}

function $injectStyleSheetAtEnd(this$static, contents){
  return $injectStyleSheet(this$static, contents);
}

function $injectStyleSheetAtStart(this$static, contents){
  var style;
  style = $createElement_1(contents);
  $insertBefore($getHead(this$static), style, $getFirstChild(this$static.head));
  return style;
}

function $setContents(style, contents){
  $setInnerText(style, contents);
}

function StyleInjector$StyleInjectorImpl_0(){
  Object_1.call(this);
  $$init_138();
}

defineSeed(180, 1, {}, StyleInjector$StyleInjectorImpl_0);
var IMPL;
function $$init_139(){
}

function $getSource(this$static){
  return this$static.source;
}

function $setSource(this$static, source){
  this$static.source = source;
}

function Event_1(){
  Object_1.call(this);
  $$init_139();
}

defineSeed(184, 1, {});
_.toString$ = function toString_5(){
  return 'An event type';
}
;
function $$init_140(){
}

function $assertLive(this$static){
  if (this$static.dead) {
    debugger;
    throw makeAssertionError_Object('This event has already finished being processed by its original handler manager, so you can no longer access it');
  }
}

function $getSource_0(this$static){
  $assertLive(this$static);
  return $getSource(this$static);
}

function $isLive(this$static){
  return !this$static.dead;
}

function $kill(this$static){
  this$static.dead = true;
  $setSource(this$static, null);
}

function $overrideSource(this$static, source){
  $setSource(this$static, source);
}

function $revive(this$static){
  this$static.dead = false;
  $setSource(this$static, null);
}

function GwtEvent_0(){
  Event_1.call(this);
  $$init_140();
}

defineSeed(183, 184, {});
_.dispatch = function dispatch(handler){
  this.dispatch_0(dynamicCast(handler, Q$EventHandler));
}
;
_.getAssociatedType = function getAssociatedType(){
  return this.getAssociatedType_0();
}
;
_.revive = function revive(){
  $revive(this);
}
;
_.dead = false;
function $$init_141(){
}

function $getNativeEvent(this$static){
  $assertLive(this$static);
  return this$static.nativeEvent;
}

function $getRelativeElement(this$static){
  $assertLive(this$static);
  return this$static.relativeElem;
}

function $preventDefault_0(this$static){
  $assertLive(this$static);
  $preventDefault(this$static.nativeEvent);
}

function $setNativeEvent(this$static, nativeEvent){
  this$static.nativeEvent = nativeEvent;
}

function $setRelativeElement(this$static, relativeElem){
  this$static.relativeElem = relativeElem;
}

function $stopPropagation_0(this$static){
  $assertLive(this$static);
  $stopPropagation(this$static.nativeEvent);
}

function DomEvent_0(){
  GwtEvent_0.call(this);
  $$init_141();
}

function fireNativeEvent(nativeEvent, handlerSource, relativeElem){
  var currentNative, currentRelativeElem, type_0, type$iterator, types;
  if (isNull_1(nativeEvent)) {
    debugger;
    throw makeAssertionError_Object('nativeEvent must not be null');
  }
  if (isNotNull(registered)) {
    types = dynamicCast($unsafeGet(registered, $getType(nativeEvent)), Q$List);
    if (isNotNull(types)) {
      for (type$iterator = types.iterator(); type$iterator.hasNext();) {
        type_0 = dynamicCast(type$iterator.next_0(), Q$DomEvent$Type);
        currentNative = type_0.flyweight.nativeEvent;
        currentRelativeElem = type_0.flyweight.relativeElem;
        $setNativeEvent(type_0.flyweight, nativeEvent);
        $setRelativeElement(type_0.flyweight, relativeElem);
        handlerSource.fireEvent(type_0.flyweight);
        $setNativeEvent(type_0.flyweight, currentNative);
        $setRelativeElement(type_0.flyweight, currentRelativeElem);
      }
    }
  }
}

function init(){
  registered = new PrivateMap_0;
}

defineSeed(182, 183, {});
_.getAssociatedType_0 = function getAssociatedType_0(){
  return this.getAssociatedType_1();
}
;
var registered;
function $clinit_BlurEvent(){
  $clinit_BlurEvent = nullMethod;
  TYPE = new DomEvent$Type_0('blur', new BlurEvent_0);
}

function $$init_142(){
}

function $dispatch(this$static, handler){
  handler.onBlur(this$static);
}

function BlurEvent_0(){
  DomEvent_0.call(this);
  $$init_142();
}

function getType_8(){
  $clinit_BlurEvent();
  return TYPE;
}

defineSeed(181, 182, {}, BlurEvent_0);
_.dispatch_0 = function dispatch_0(handler){
  $dispatch(this, dynamicCast(handler, Q$BlurHandler));
}
;
_.getAssociatedType_1 = function getAssociatedType_1(){
  return TYPE;
}
;
var TYPE;
function $clinit_ChangeEvent(){
  $clinit_ChangeEvent = nullMethod;
  TYPE_0 = new DomEvent$Type_0('change', new ChangeEvent_0);
}

function $$init_143(){
}

function $dispatch_0(this$static, handler){
  handler.onChange(this$static);
}

function ChangeEvent_0(){
  DomEvent_0.call(this);
  $$init_143();
}

function getType_9(){
  $clinit_ChangeEvent();
  return TYPE_0;
}

defineSeed(185, 182, {}, ChangeEvent_0);
_.dispatch_0 = function dispatch_1(handler){
  $dispatch_0(this, dynamicCast(handler, Q$ChangeHandler));
}
;
_.getAssociatedType_1 = function getAssociatedType_2(){
  return TYPE_0;
}
;
var TYPE_0;
function $$init_144(){
}

function HumanInputEvent_0(){
  DomEvent_0.call(this);
  $$init_144();
}

defineSeed(188, 182, {});
function $$init_145(){
}

function $getClientX_0(this$static){
  return $getClientX($getNativeEvent(this$static));
}

function $getClientY_0(this$static){
  return $getClientY($getNativeEvent(this$static));
}

function $getRelativeX(this$static, target){
  var e;
  e = $getNativeEvent(this$static);
  return $getClientX(e) - $getAbsoluteLeft(target) + $getScrollLeft(target) + $getScrollLeft_1($getOwnerDocument(target));
}

function $getRelativeY(this$static, target){
  var e;
  e = $getNativeEvent(this$static);
  return $getClientY(e) - $getAbsoluteTop(target) + $getScrollTop(target) + $getScrollTop_0($getOwnerDocument(target));
}

function $getX(this$static){
  var relativeElem;
  relativeElem = $getRelativeElement(this$static);
  if (isNotNull(relativeElem)) {
    return $getRelativeX(this$static, relativeElem);
  }
  return $getClientX_0(this$static);
}

function $getY(this$static){
  var relativeElem;
  relativeElem = $getRelativeElement(this$static);
  if (isNotNull(relativeElem)) {
    return $getRelativeY(this$static, relativeElem);
  }
  return $getClientY_0(this$static);
}

function MouseEvent_1(){
  HumanInputEvent_0.call(this);
  $$init_145();
}

defineSeed(187, 188, {});
function $clinit_ClickEvent(){
  $clinit_ClickEvent = nullMethod;
  TYPE_1 = new DomEvent$Type_0('click', new ClickEvent_0);
}

function $$init_146(){
}

function $dispatch_1(this$static, handler){
  handler.onClick(this$static);
}

function ClickEvent_0(){
  MouseEvent_1.call(this);
  $$init_146();
}

function getType_10(){
  $clinit_ClickEvent();
  return TYPE_1;
}

defineSeed(186, 187, {}, ClickEvent_0);
_.dispatch_0 = function dispatch_2(handler){
  $dispatch_1(this, dynamicCast(handler, Q$ClickHandler));
}
;
_.getAssociatedType_1 = function getAssociatedType_3(){
  return TYPE_1;
}
;
var TYPE_1;
function $$init_147(){
}

function Event$Type_0(){
  Object_1.call(this);
  $$init_147();
  this.index_0 = ++nextHashCode;
}

defineSeed(191, 1, {});
_.hashCode$ = function hashCode_2(){
  return this.index_0;
}
;
_.toString$ = function toString_6(){
  return 'Event type';
}
;
_.index_0 = 0;
var nextHashCode = 0;
function $$init_148(){
}

function GwtEvent$Type_0(){
  Event$Type_0.call(this);
  $$init_148();
}

defineSeed(190, 191, {}, GwtEvent$Type_0);
function $$init_149(){
}

function $getName(this$static){
  return this$static.name_0;
}

function DomEvent$Type_0(eventName, flyweight){
  var types;
  GwtEvent$Type_0.call(this);
  $$init_149();
  this.flyweight = flyweight;
  isNull_1(registered) && init();
  types = dynamicCast($unsafeGet(registered, eventName), Q$List);
  if (isNull_1(types)) {
    types = new ArrayList_0;
    $unsafePut(registered, eventName, types);
  }
  types.add_0(this);
  this.name_0 = eventName;
}

defineSeed(189, 190, makeCastMap([Q$DomEvent$Type]), DomEvent$Type_0);
function $$init_150(){
}

function DragDropEventBase_0(){
  DomEvent_0.call(this);
  $$init_150();
}

function isSupported(){
  isNull_1(impl_1) && (impl_1 = new DragDropEventBase$DragSupportDetector_0);
  return $isSupported(impl_1);
}

defineSeed(192, 182, {});
var impl_1;
function $$init_151(this$static){
  this$static.isSupported = $detectDragSupport();
}

function $detectDragSupport(){
  var elem = document.createElement('div');
  elem.setAttribute('ondragstart', 'return;');
  return typeof elem.ondragstart == 'function';
}

function $isSupported(this$static){
  return this$static.isSupported;
}

function DragDropEventBase$DragSupportDetector_0(){
  Object_1.call(this);
  $$init_151(this);
}

defineSeed(193, 1, {}, DragDropEventBase$DragSupportDetector_0);
_.isSupported = false;
function $clinit_DragLeaveEvent(){
  $clinit_DragLeaveEvent = nullMethod;
  TYPE_2 = new DomEvent$Type_0('dragleave', new DragLeaveEvent_0);
}

function $$init_152(){
}

function $dispatch_2(this$static, handler){
  handler.onDragLeave(this$static);
}

function DragLeaveEvent_0(){
  DragDropEventBase_0.call(this);
  $$init_152();
}

function getType_11(){
  $clinit_DragLeaveEvent();
  return TYPE_2;
}

defineSeed(194, 192, {}, DragLeaveEvent_0);
_.dispatch_0 = function dispatch_3(handler){
  $dispatch_2(this, dynamicCast(handler, Q$DragLeaveHandler));
}
;
_.getAssociatedType_1 = function getAssociatedType_4(){
  return TYPE_2;
}
;
var TYPE_2;
function $clinit_DragOverEvent(){
  $clinit_DragOverEvent = nullMethod;
  TYPE_3 = new DomEvent$Type_0('dragover', new DragOverEvent_0);
}

function $$init_153(){
}

function $dispatch_3(this$static, handler){
  handler.onDragOver(this$static);
}

function DragOverEvent_0(){
  DragDropEventBase_0.call(this);
  $$init_153();
}

function getType_12(){
  $clinit_DragOverEvent();
  return TYPE_3;
}

defineSeed(195, 192, {}, DragOverEvent_0);
_.dispatch_0 = function dispatch_4(handler){
  $dispatch_3(this, dynamicCast(handler, Q$DragOverHandler));
}
;
_.getAssociatedType_1 = function getAssociatedType_5(){
  return TYPE_3;
}
;
var TYPE_3;
function $clinit_DropEvent(){
  $clinit_DropEvent = nullMethod;
  TYPE_4 = new DomEvent$Type_0('drop', new DropEvent_0);
}

function $$init_154(){
}

function $dispatch_4(this$static, handler){
  handler.onDrop(this$static);
}

function DropEvent_0(){
  DragDropEventBase_0.call(this);
  $$init_154();
}

function getType_13(){
  $clinit_DropEvent();
  return TYPE_4;
}

defineSeed(196, 192, {}, DropEvent_0);
_.dispatch_0 = function dispatch_5(handler){
  $dispatch_4(this, dynamicCast(handler, Q$DropHandler));
}
;
_.getAssociatedType_1 = function getAssociatedType_6(){
  return TYPE_4;
}
;
var TYPE_4;
function $$init_155(){
}

function KeyEvent_1(){
  DomEvent_0.call(this);
  $$init_155();
}

defineSeed(198, 182, {});
function $$init_156(){
}

function KeyCodeEvent_0(){
  KeyEvent_1.call(this);
  $$init_156();
}

defineSeed(197, 198, {});
function maybeSwapArrowKeysForRtl(code_0, isRtl){
  isRtl && (code_0 == 39?(code_0 = 37):code_0 == 37 && (code_0 = 39));
  return code_0;
}

function $clinit_KeyDownEvent(){
  $clinit_KeyDownEvent = nullMethod;
  TYPE_5 = new DomEvent$Type_0('keydown', new KeyDownEvent_0);
}

function $$init_157(){
}

function $dispatch_5(this$static, handler){
  handler.onKeyDown(this$static);
}

function KeyDownEvent_0(){
  KeyCodeEvent_0.call(this);
  $$init_157();
}

function getType_14(){
  $clinit_KeyDownEvent();
  return TYPE_5;
}

defineSeed(200, 197, {}, KeyDownEvent_0);
_.dispatch_0 = function dispatch_6(handler){
  $dispatch_5(this, dynamicCast(handler, Q$KeyDownHandler));
}
;
_.getAssociatedType_1 = function getAssociatedType_7(){
  return TYPE_5;
}
;
var TYPE_5;
function $clinit_KeyPressEvent(){
  $clinit_KeyPressEvent = nullMethod;
  TYPE_6 = new DomEvent$Type_0('keypress', new KeyPressEvent_0);
}

function $$init_158(){
}

function $dispatch_6(this$static, handler){
  handler.onKeyPress(this$static);
}

function KeyPressEvent_0(){
  KeyEvent_1.call(this);
  $$init_158();
}

function getType_15(){
  $clinit_KeyPressEvent();
  return TYPE_6;
}

defineSeed(201, 198, {}, KeyPressEvent_0);
_.dispatch_0 = function dispatch_7(handler){
  $dispatch_6(this, dynamicCast(handler, Q$KeyPressHandler));
}
;
_.getAssociatedType_1 = function getAssociatedType_8(){
  return TYPE_6;
}
;
var TYPE_6;
function $clinit_KeyUpEvent(){
  $clinit_KeyUpEvent = nullMethod;
  TYPE_7 = new DomEvent$Type_0('keyup', new KeyUpEvent_0);
}

function $$init_159(){
}

function $dispatch_7(this$static, handler){
  handler.onKeyUp(this$static);
}

function KeyUpEvent_0(){
  KeyCodeEvent_0.call(this);
  $$init_159();
}

function getType_16(){
  $clinit_KeyUpEvent();
  return TYPE_7;
}

defineSeed(202, 197, {}, KeyUpEvent_0);
_.dispatch_0 = function dispatch_8(handler){
  $dispatch_7(this, dynamicCast(handler, Q$KeyUpHandler));
}
;
_.getAssociatedType_1 = function getAssociatedType_9(){
  return TYPE_7;
}
;
var TYPE_7;
function $clinit_MouseDownEvent(){
  $clinit_MouseDownEvent = nullMethod;
  TYPE_8 = new DomEvent$Type_0('mousedown', new MouseDownEvent_0);
}

function $$init_160(){
}

function $dispatch_8(this$static, handler){
  handler.onMouseDown(this$static);
}

function MouseDownEvent_0(){
  MouseEvent_1.call(this);
  $$init_160();
}

function getType_17(){
  $clinit_MouseDownEvent();
  return TYPE_8;
}

defineSeed(203, 187, {}, MouseDownEvent_0);
_.dispatch_0 = function dispatch_9(handler){
  $dispatch_8(this, dynamicCast(handler, Q$MouseDownHandler));
}
;
_.getAssociatedType_1 = function getAssociatedType_10(){
  return TYPE_8;
}
;
var TYPE_8;
function $clinit_MouseMoveEvent(){
  $clinit_MouseMoveEvent = nullMethod;
  TYPE_9 = new DomEvent$Type_0('mousemove', new MouseMoveEvent_0);
}

function $$init_161(){
}

function $dispatch_9(this$static, handler){
  handler.onMouseMove(this$static);
}

function MouseMoveEvent_0(){
  MouseEvent_1.call(this);
  $$init_161();
}

function getType_18(){
  $clinit_MouseMoveEvent();
  return TYPE_9;
}

defineSeed(204, 187, {}, MouseMoveEvent_0);
_.dispatch_0 = function dispatch_10(handler){
  $dispatch_9(this, dynamicCast(handler, Q$MouseMoveHandler));
}
;
_.getAssociatedType_1 = function getAssociatedType_11(){
  return TYPE_9;
}
;
var TYPE_9;
function $clinit_MouseOutEvent(){
  $clinit_MouseOutEvent = nullMethod;
  TYPE_10 = new DomEvent$Type_0('mouseout', new MouseOutEvent_0);
}

function $$init_162(){
}

function $dispatch_10(this$static, handler){
  handler.onMouseOut(this$static);
}

function MouseOutEvent_0(){
  MouseEvent_1.call(this);
  $$init_162();
}

function getType_19(){
  $clinit_MouseOutEvent();
  return TYPE_10;
}

defineSeed(205, 187, {}, MouseOutEvent_0);
_.dispatch_0 = function dispatch_11(handler){
  $dispatch_10(this, dynamicCast(handler, Q$MouseOutHandler));
}
;
_.getAssociatedType_1 = function getAssociatedType_12(){
  return TYPE_10;
}
;
var TYPE_10;
function $clinit_MouseOverEvent(){
  $clinit_MouseOverEvent = nullMethod;
  TYPE_11 = new DomEvent$Type_0('mouseover', new MouseOverEvent_0);
}

function $$init_163(){
}

function $dispatch_11(this$static, handler){
  handler.onMouseOver(this$static);
}

function MouseOverEvent_0(){
  MouseEvent_1.call(this);
  $$init_163();
}

function getType_20(){
  $clinit_MouseOverEvent();
  return TYPE_11;
}

defineSeed(206, 187, {}, MouseOverEvent_0);
_.dispatch_0 = function dispatch_12(handler){
  $dispatch_11(this, dynamicCast(handler, Q$MouseOverHandler));
}
;
_.getAssociatedType_1 = function getAssociatedType_13(){
  return TYPE_11;
}
;
var TYPE_11;
function $clinit_MouseUpEvent(){
  $clinit_MouseUpEvent = nullMethod;
  TYPE_12 = new DomEvent$Type_0('mouseup', new MouseUpEvent_0);
}

function $$init_164(){
}

function $dispatch_12(this$static, handler){
  handler.onMouseUp(this$static);
}

function MouseUpEvent_0(){
  MouseEvent_1.call(this);
  $$init_164();
}

function getType_21(){
  $clinit_MouseUpEvent();
  return TYPE_12;
}

defineSeed(207, 187, {}, MouseUpEvent_0);
_.dispatch_0 = function dispatch_13(handler){
  $dispatch_12(this, dynamicCast(handler, Q$MouseUpHandler));
}
;
_.getAssociatedType_1 = function getAssociatedType_14(){
  return TYPE_12;
}
;
var TYPE_12;
function $$init_165(){
}

function $unsafeGet(this$static, key){
  return $unsafeGet_0(this$static.map_0, key);
}

function $unsafePut(this$static, key, value_0){
  $unsafePut_0(this$static.map_0, key, value_0);
}

function PrivateMap_0(){
  Object_1.call(this);
  $$init_165();
  this.map_0 = $cast(create_2());
}

defineSeed(208, 1, {}, PrivateMap_0);
function $unsafeGet_0(this$static, key){
  return this$static[key];
}

function $unsafePut_0(this$static, key, value_0){
  this$static[key] = value_0;
}

function create_2(){
  return $cast(createObject());
}

function $$init_166(){
}

function $dispatch_13(this$static, handler){
  handler.onAttachOrDetach(this$static);
}

function $isAttached(this$static){
  return this$static.attached;
}

function AttachEvent_0(attached){
  GwtEvent_0.call(this);
  $$init_166();
  this.attached = attached;
}

function fire_0(source, attached){
  var event_0;
  if (isNotNull(TYPE_13)) {
    event_0 = new AttachEvent_0(attached);
    source.fireEvent(event_0);
  }
}

function getType_22(){
  isNull_1(TYPE_13) && (TYPE_13 = new GwtEvent$Type_0);
  return TYPE_13;
}

defineSeed(210, 183, {}, AttachEvent_0);
_.dispatch_0 = function dispatch_14(handler){
  $dispatch_13(this, dynamicCast(handler, Q$AttachEvent$Handler));
}
;
_.getAssociatedType_0 = function getAssociatedType_15(){
  return TYPE_13;
}
;
_.attached = false;
var TYPE_13;
function $$init_167(){
}

function $dispatch_14(this$static, handler){
  handler.onClose(this$static);
}

function $isAutoClosed(this$static){
  return this$static.autoClosed;
}

function CloseEvent_1(target, autoClosed){
  GwtEvent_0.call(this);
  $$init_167();
  this.autoClosed = autoClosed;
  this , target;
}

function fire_1(source, target){
  fire_2(source, target, false);
}

function fire_2(source, target, autoClosed){
  var event_0;
  if (isNotNull(TYPE_14)) {
    event_0 = new CloseEvent_1(target, autoClosed);
    source.fireEvent(event_0);
  }
}

function getType_23(){
  return isNotNull(TYPE_14)?TYPE_14:(TYPE_14 = new GwtEvent$Type_0);
}

defineSeed(211, 183, {}, CloseEvent_1);
_.dispatch_0 = function dispatch_15(handler){
  $dispatch_14(this, dynamicCast(handler, Q$CloseHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_16(){
  return TYPE_14;
}
;
_.autoClosed = false;
var TYPE_14;
function $$init_168(){
}

function $dispatch_15(){
  null.nullMethod();
}

function OpenEvent_0(target){
  GwtEvent_0.call(this);
  $$init_168();
  this , target;
}

function fire_3(source, target){
  var event_0;
  if (isNotNull(TYPE_15)) {
    event_0 = new OpenEvent_0(target);
    source.fireEvent(event_0);
  }
}

function getType_24(){
  isNull_1(TYPE_15) && (TYPE_15 = new GwtEvent$Type_0);
  return TYPE_15;
}

defineSeed(212, 183, {}, OpenEvent_0);
_.dispatch_0 = function dispatch_16(handler){
  $dispatch_15(dynamicCast(handler, Q$OpenHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_17(){
  return TYPE_15;
}
;
var TYPE_15;
function $$init_169(){
}

function $dispatch_16(this$static, handler){
  handler.onResize(this$static);
}

function $getWidth(this$static){
  return this$static.width_0;
}

function ResizeEvent_0(width_0, height){
  GwtEvent_0.call(this);
  $$init_169();
  this.width_0 = width_0;
  this , height;
}

function fire_4(source, width_0, height){
  var event_0;
  if (isNotNull(TYPE_16)) {
    event_0 = new ResizeEvent_0(width_0, height);
    source.fireEvent(event_0);
  }
}

function getType_25(){
  isNull_1(TYPE_16) && (TYPE_16 = new GwtEvent$Type_0);
  return TYPE_16;
}

defineSeed(213, 183, {}, ResizeEvent_0);
_.dispatch_0 = function dispatch_17(handler){
  $dispatch_16(this, dynamicCast(handler, Q$ResizeHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_18(){
  return TYPE_16;
}
;
_.width_0 = 0;
var TYPE_16;
function $$init_170(){
}

function $dispatch_17(){
  null.nullMethod();
}

function SelectionEvent_0(selectedItem){
  GwtEvent_0.call(this);
  $$init_170();
  this , selectedItem;
}

function fire_5(source, selectedItem){
  var event_0;
  if (isNotNull(TYPE_17)) {
    event_0 = new SelectionEvent_0(selectedItem);
    source.fireEvent(event_0);
  }
}

defineSeed(214, 183, {}, SelectionEvent_0);
_.dispatch_0 = function dispatch_18(handler){
  $dispatch_17(dynamicCast(handler, Q$SelectionHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_19(){
  return TYPE_17;
}
;
var TYPE_17;
function $$init_171(){
}

function $dispatch_18(this$static, handler){
  handler.onValueChange(this$static);
}

function $getValue(this$static){
  return this$static.value_0;
}

function ValueChangeEvent_0(value_0){
  GwtEvent_0.call(this);
  $$init_171();
  this.value_0 = value_0;
}

function fire_6(source, value_0){
  var event_0;
  if (isNotNull(TYPE_18)) {
    event_0 = new ValueChangeEvent_0(value_0);
    source.fireEvent(event_0);
  }
}

function fireIfNotEqual(source, oldValue, newValue){
  var event_0;
  if (shouldFire(oldValue, newValue)) {
    event_0 = new ValueChangeEvent_0(newValue);
    source.fireEvent(event_0);
  }
}

function getType_26(){
  isNull_1(TYPE_18) && (TYPE_18 = new GwtEvent$Type_0);
  return TYPE_18;
}

function shouldFire(oldValue, newValue){
  return isNotNull(TYPE_18) && maskUndefined(oldValue) !== maskUndefined(newValue) && (jsEquals(oldValue, null) || !equals__devirtual$(oldValue, newValue));
}

defineSeed(215, 183, {}, ValueChangeEvent_0);
_.dispatch_0 = function dispatch_19(handler){
  $dispatch_18(this, dynamicCast(handler, Q$ValueChangeHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_20(){
  return TYPE_18;
}
;
var TYPE_18;
function $$init_172(){
}

function $addHandler(this$static, type_0, handler){
  return new LegacyHandlerWrapper_0($addHandler_0(this$static.eventBus, type_0, handler));
}

function $fireEvent(this$static, event_0){
  var e, oldSource;
  $isLive(event_0) || event_0.revive();
  oldSource = $getSource_0(event_0);
  $overrideSource(event_0, this$static.source);
  try {
    $fireEvent_0(this$static.eventBus, event_0);
  }
   catch ($e0) {
    $e0 = wrap($e0);
    if (instanceOf($e0, Q$UmbrellaException)) {
      e = $e0;
      throw new UmbrellaException_2($getCauses(e));
    }
     else 
      throw unwrap($e0);
  }
   finally {
    jsEquals(oldSource, null)?$kill(event_0):$overrideSource(event_0, oldSource);
  }
}

function $isEventHandled(this$static, e){
  return $isEventHandled_1(this$static.eventBus, e);
}

function HandlerManager_0(source){
  HandlerManager_1.call(this, source, false);
}

function HandlerManager_1(source, fireInReverseOrder){
  Object_1.call(this);
  $$init_172();
  this.eventBus = new HandlerManager$Bus_0(fireInReverseOrder);
  this.source = source;
}

defineSeed(216, 1, makeCastMap([Q$HasHandlers]), HandlerManager_0, HandlerManager_1);
_.fireEvent = function fireEvent(event_0){
  $fireEvent(this, event_0);
}
;
function $$init_173(){
}

function EventBus_0(){
  Object_1.call(this);
  $$init_173();
}

function dispatchEvent_1(event_0, handler){
  event_0.dispatch(handler);
}

function setSourceOfEvent(event_0, source){
  $setSource(event_0, source);
}

defineSeed(219, 1, {});
function $$init_174(this$static){
  this$static.map_0 = new HashMap_0;
}

function $addHandler_0(this$static, type_0, handler){
  return $doAdd(this$static, type_0, null, handler);
}

function $defer(this$static, command){
  isNull_1(this$static.deferredDeltas) && (this$static.deferredDeltas = new ArrayList_0);
  this$static.deferredDeltas.add_0(command);
}

function $doAdd(this$static, type_0, source, handler){
  if (isNull_1(type_0)) {
    throw new NullPointerException_1('Cannot add a handler with a null type');
  }
  if (jsEquals(handler, null)) {
    throw new NullPointerException_1('Cannot add a null handler');
  }
  this$static.firingDepth > 0?$enqueueAdd(this$static, type_0, source, handler):$doAddNow(this$static, type_0, source, handler);
  return new SimpleEventBus$1_0(this$static, type_0, source, handler);
}

function $doAddNow(this$static, type_0, source, handler){
  var l_0;
  l_0 = $ensureHandlerList(this$static, type_0, source);
  l_0.add_0(handler);
}

function $doFire(this$static, event_0, source){
  var causes, e, handler, handlers, it;
  if (isNull_1(event_0)) {
    throw new NullPointerException_1('Cannot fire null event');
  }
  try {
    ++this$static.firingDepth;
    jsNotEquals(source, null) && setSourceOfEvent(event_0, source);
    handlers = $getDispatchList(this$static, event_0.getAssociatedType(), source);
    causes = null;
    it = this$static.isReverseOrder?handlers.listIterator_0(handlers.size_1()):handlers.listIterator();
    while (this$static.isReverseOrder?it.hasPrevious():it.hasNext()) {
      handler = this$static.isReverseOrder?it.previous():it.next_0();
      try {
        dispatchEvent_1(event_0, handler);
      }
       catch ($e0) {
        $e0 = wrap($e0);
        if (instanceOf($e0, Q$Throwable)) {
          e = $e0;
          isNull_1(causes) && (causes = new HashSet_0);
          causes.add_0(e);
        }
         else 
          throw unwrap($e0);
      }
    }
    if (isNotNull(causes)) {
      throw new UmbrellaException_1(causes);
    }
  }
   finally {
    --this$static.firingDepth;
    this$static.firingDepth == 0 && $handleQueuedAddsAndRemoves(this$static);
  }
}

function $doRemove(this$static, type_0, source, handler){
  this$static.firingDepth > 0?$enqueueRemove(this$static, type_0, source, handler):$doRemoveNow(this$static, type_0, source, handler);
}

function $doRemoveNow(this$static, type_0, source, handler){
  var l_0, removed;
  l_0 = $getHandlerList(this$static, type_0, source);
  removed = l_0.remove(handler);
  removed && l_0.isEmpty() && $prune(this$static, type_0, source);
}

function $enqueueAdd(this$static, type_0, source, handler){
  $defer(this$static, new SimpleEventBus$2_0(this$static, type_0, source, handler));
}

function $enqueueRemove(this$static, type_0, source, handler){
  $defer(this$static, new SimpleEventBus$3_0(this$static, type_0, source, handler));
}

function $ensureHandlerList(this$static, type_0, source){
  var handlers, sourceMap;
  sourceMap = dynamicCast(this$static.map_0.get_2(type_0), Q$Map);
  if (isNull_1(sourceMap)) {
    sourceMap = new HashMap_0;
    this$static.map_0.put(type_0, sourceMap);
  }
  handlers = dynamicCast(sourceMap.get_2(source), Q$List);
  if (isNull_1(handlers)) {
    handlers = new ArrayList_0;
    sourceMap.put(source, handlers);
  }
  return handlers;
}

function $fireEvent_0(this$static, event_0){
  $doFire(this$static, event_0, null);
}

function $getDispatchList(this$static, type_0, source){
  var directHandlers, globalHandlers, rtn;
  directHandlers = $getHandlerList(this$static, type_0, source);
  if (jsEquals(source, null)) {
    return directHandlers;
  }
  globalHandlers = $getHandlerList(this$static, type_0, null);
  rtn = new ArrayList_1(directHandlers);
  rtn.addAll(globalHandlers);
  return rtn;
}

function $getHandlerList(this$static, type_0, source){
  var handlers, sourceMap;
  sourceMap = dynamicCast(this$static.map_0.get_2(type_0), Q$Map);
  if (isNull_1(sourceMap)) {
    return emptyList();
  }
  handlers = dynamicCast(sourceMap.get_2(source), Q$List);
  if (isNull_1(handlers)) {
    return emptyList();
  }
  return handlers;
}

function $handleQueuedAddsAndRemoves(this$static){
  var c, c$iterator;
  if (isNotNull(this$static.deferredDeltas)) {
    try {
      for (c$iterator = this$static.deferredDeltas.iterator(); c$iterator.hasNext();) {
        c = dynamicCast(c$iterator.next_0(), Q$SimpleEventBus$Command);
        c.execute_1();
      }
    }
     finally {
      this$static.deferredDeltas = null;
    }
  }
}

function $isEventHandled_0(this$static, eventKey){
  return this$static.map_0.containsKey(eventKey);
}

function $prune(this$static, type_0, source){
  var pruned, sourceMap;
  sourceMap = dynamicCast(this$static.map_0.get_2(type_0), Q$Map);
  pruned = dynamicCast(sourceMap.remove_3(source), Q$List);
  if (isNull_1(pruned)) {
    debugger;
    throw makeAssertionError_Object("Can't prune what wasn't there");
  }
  if (!pruned.isEmpty()) {
    debugger;
    throw makeAssertionError_Object('Pruned unempty list!');
  }
  sourceMap.isEmpty() && this$static.map_0.remove_3(type_0);
}

function SimpleEventBus_0(fireInReverseOrder){
  EventBus_0.call(this);
  $$init_174(this);
  this.isReverseOrder = fireInReverseOrder;
}

defineSeed(218, 219, {});
_.doRemove = function doRemove(type_0, source, handler){
  $doRemove(this, type_0, source, handler);
}
;
_.firingDepth = 0;
_.isReverseOrder = false;
function $$init_175(){
}

function $isEventHandled_1(this$static, eventKey){
  return $isEventHandled_0(this$static, eventKey);
}

function HandlerManager$Bus_0(fireInReverseOrder){
  SimpleEventBus_0.call(this, fireInReverseOrder);
  $$init_175();
}

defineSeed(217, 218, {}, HandlerManager$Bus_0);
_.doRemove = function doRemove_0(type_0, source, handler){
  $doRemove(this, type_0, source, handler);
}
;
function $$init_176(){
}

function LegacyHandlerWrapper_0(real){
  Object_1.call(this);
  $$init_176();
  this.real = real;
}

defineSeed(220, 1, {}, LegacyHandlerWrapper_0);
_.removeHandler = function removeHandler(){
  this.real.removeHandler();
}
;
function $$init_177(){
}

function $getCauses(this$static){
  return this$static.causes;
}

function UmbrellaException_1(causes){
  RuntimeException_2.call(this, makeMessage(causes), makeCause(causes));
  $$init_177();
  this.causes = causes;
}

function makeCause(causes){
  var iterator;
  iterator = causes.iterator();
  if (!iterator.hasNext()) {
    return null;
  }
  return dynamicCast(iterator.next_0(), Q$Throwable);
}

function makeMessage(causes){
  var b, count, first, t, t$iterator;
  count = causes.size_1();
  if (count == 0) {
    return null;
  }
  b = new StringBuilder_1(count == 1?'Exception caught: ':count + ' exceptions caught: ');
  first = true;
  for (t$iterator = causes.iterator(); t$iterator.hasNext();) {
    t = dynamicCast(t$iterator.next_0(), Q$Throwable);
    first?(first = false):$append_3(b, '; ');
    $append_3(b, t.getMessage());
  }
  return $toString_2(b);
}

defineSeed(222, 85, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), UmbrellaException_1);
function $$init_178(){
}

function UmbrellaException_2(causes){
  UmbrellaException_1.call(this, causes);
  $$init_178();
}

defineSeed(221, 222, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), UmbrellaException_2);
function $$init_179(){
}

function $cancel_1(this$static){
  var xmlHttp;
  if (isNotNull(this$static.xmlHttpRequest)) {
    xmlHttp = this$static.xmlHttpRequest;
    this$static.xmlHttpRequest = null;
    $clearOnReadyStateChange(xmlHttp);
    $abort(xmlHttp);
    $cancelTimer(this$static);
  }
}

function $cancelTimer(this$static){
  this$static.timeoutMillis > 0 && clearTimeout_0(this$static.timerId);
}

function $fireOnResponseReceived(this$static, callback){
  var errorMsg, exception, response, xhr;
  if (isNull_1(this$static.xmlHttpRequest)) {
    return;
  }
  $cancelTimer(this$static);
  xhr = this$static.xmlHttpRequest;
  this$static.xmlHttpRequest = null;
  errorMsg = $getBrowserSpecificFailure(xhr);
  if (jsNotEquals(errorMsg, null)) {
    exception = new RuntimeException_1(errorMsg);
    callback.onError(this$static, exception);
  }
   else {
    response = createResponse(xhr);
    callback.onResponseReceived(this$static, response);
  }
}

function $getBrowserSpecificFailure(xhr){
  try {
    if (xhr.status === undefined) {
      return 'XmlHttpRequest.status == undefined, please see Safari bug ' + 'http://bugs.webkit.org/show_bug.cgi?id=3810 for more details';
    }
    return null;
  }
   catch (e) {
    return 'Unable to read XmlHttpRequest.status; likely causes are a ' + 'networking error or bad cross-domain request. Please see ' + 'https://bugzilla.mozilla.org/show_bug.cgi?id=238559 for more ' + 'details';
  }
}

function Request_0(xmlHttpRequest, timeoutMillis, callback){
  Object_1.call(this);
  $$init_179();
  if (isNull_1(xmlHttpRequest)) {
    throw new NullPointerException_0;
  }
  if (isNull_1(callback)) {
    throw new NullPointerException_0;
  }
  if (timeoutMillis < 0) {
    throw new IllegalArgumentException_0;
  }
  this.timeoutMillis = timeoutMillis;
  this.xmlHttpRequest = xmlHttpRequest;
  timeoutMillis > 0?(this.timerId = createTimeout(this, callback, timeoutMillis)):(this.timerId = 0);
}

function createResponse(xmlHttpRequest){
  return $createResponse((get_3() , xmlHttpRequest));
}

function createTimeout(request, callback, timeoutMillis){
  return setTimeout_0($entry(function(){
    request.fireOnTimeout(callback);
  }
  ), timeoutMillis);
}

defineSeed(223, 1, {}, Request_0);
_.fireOnTimeout = function fireOnTimeout(callback){
  if (isNull_1(this.xmlHttpRequest)) {
    return;
  }
  $cancel_1(this);
  callback.onError(this, new RequestTimeoutException_0(this, this.timeoutMillis));
}
;
_.timeoutMillis = 0;
_.timerId = 0;
function $clinit_Request$ImplHolder(){
  $clinit_Request$ImplHolder = nullMethod;
  impl_2 = new Request$RequestImpl_0;
}

function get_3(){
  $clinit_Request$ImplHolder();
  return impl_2;
}

var impl_2;
function $$init_180(){
}

function $createResponse(xmlHttpRequest){
  return new ResponseImpl_0(xmlHttpRequest);
}

function Request$RequestImpl_0(){
  Object_1.call(this);
  $$init_180();
}

defineSeed(225, 1, {}, Request$RequestImpl_0);
function $clinit_RequestBuilder(){
  $clinit_RequestBuilder = nullMethod;
  new RequestBuilder$Method_0('DELETE');
  GET = new RequestBuilder$Method_0('GET');
  new RequestBuilder$Method_0('HEAD');
  new RequestBuilder$Method_0('POST');
  new RequestBuilder$Method_0('PUT');
}

function $$init_181(){
}

function $doSend(this$static, requestData, callback){
  var e, request, requestPermissionException, xmlHttpRequest;
  xmlHttpRequest = create_8();
  try {
    jsNotEquals(this$static.user, null) && jsNotEquals(this$static.password, null)?$open_1(xmlHttpRequest, this$static.httpMethod, this$static.url_0, this$static.user, this$static.password):jsNotEquals(this$static.user, null)?$open_0(xmlHttpRequest, this$static.httpMethod, this$static.url_0, this$static.user):$open(xmlHttpRequest, this$static.httpMethod, this$static.url_0);
  }
   catch ($e0) {
    $e0 = wrap($e0);
    if (instanceOf($e0, Q$JavaScriptException)) {
      e = $e0;
      requestPermissionException = new RequestPermissionException_0(this$static.url_0);
      requestPermissionException.initCause(new RequestException_0(e.getMessage()));
      throw requestPermissionException;
    }
     else 
      throw unwrap($e0);
  }
  $setHeaders(this$static, xmlHttpRequest);
  this$static.includeCredentials && $setWithCredentials(xmlHttpRequest, true);
  request = new Request_0(xmlHttpRequest, this$static.timeoutMillis, callback);
  $setOnReadyStateChange(xmlHttpRequest, new RequestBuilder$1_0(this$static, request, callback));
  try {
    $send_0(xmlHttpRequest, requestData);
  }
   catch ($e1) {
    $e1 = wrap($e1);
    if (instanceOf($e1, Q$JavaScriptException)) {
      e = $e1;
      throw new RequestException_0(e.getMessage());
    }
     else 
      throw unwrap($e1);
  }
  return request;
}

function $send(this$static){
  throwIfNull('callback', this$static.callback);
  return $doSend(this$static, this$static.requestData, this$static.callback);
}

function $setCallback(this$static, callback){
  throwIfNull('callback', callback);
  this$static.callback = callback;
}

function $setHeader(this$static, header, value_0){
  throwIfEmptyOrNull('header', header);
  throwIfEmptyOrNull('value', value_0);
  isNull_1(this$static.headers) && (this$static.headers = new HashMap_0);
  this$static.headers.put(header, value_0);
}

function $setHeaders(this$static, xmlHttpRequest){
  var e, header, header$iterator;
  if (isNotNull(this$static.headers) && this$static.headers.size_1() > 0) {
    for (header$iterator = this$static.headers.entrySet_0().iterator(); header$iterator.hasNext();) {
      header = dynamicCast(header$iterator.next_0(), Q$Map$Entry);
      try {
        $setRequestHeader(xmlHttpRequest, dynamicCast(header.getKey(), Q$String), dynamicCast(header.getValue(), Q$String));
      }
       catch ($e0) {
        $e0 = wrap($e0);
        if (instanceOf($e0, Q$JavaScriptException)) {
          e = $e0;
          throw new RequestException_0(e.getMessage());
        }
         else 
          throw unwrap($e0);
      }
    }
  }
   else {
    $setRequestHeader(xmlHttpRequest, 'Content-Type', 'text/plain; charset=utf-8');
  }
}

function RequestBuilder_0(httpMethod, url_0){
  $clinit_RequestBuilder();
  RequestBuilder_1.call(this, isNull_1(httpMethod)?null:$toString_0(httpMethod), url_0);
}

function RequestBuilder_1(httpMethod, url_0){
  Object_1.call(this);
  $$init_181();
  throwIfEmptyOrNull('httpMethod', httpMethod);
  throwIfEmptyOrNull('url', url_0);
  this.httpMethod = httpMethod;
  this.url_0 = url_0;
}

defineSeed(226, 1, {}, RequestBuilder_0);
_.includeCredentials = false;
_.timeoutMillis = 0;
var GET;
function $$init_182(){
}

function RequestBuilder$1_0(this$0, val$request, val$callback){
  this , this$0;
  this.val$request = val$request;
  this.val$callback = val$callback;
  Object_1.call(this);
  $$init_182();
}

defineSeed(227, 1, {}, RequestBuilder$1_0);
_.onReadyStateChange = function onReadyStateChange(xhr){
  if ($getReadyState(xhr) == 4) {
    $clearOnReadyStateChange(xhr);
    $fireOnResponseReceived(this.val$request, this.val$callback);
  }
}
;
function $$init_183(){
}

function $toString_0(this$static){
  return this$static.name_0;
}

function RequestBuilder$Method_0(name_0){
  Object_1.call(this);
  $$init_183();
  this.name_0 = name_0;
}

defineSeed(228, 1, {}, RequestBuilder$Method_0);
_.toString$ = function toString_7(){
  return $toString_0(this);
}
;
function $$init_184(){
}

function RequestException_0(message){
  Exception_1.call(this, message);
  $$init_184();
}

defineSeed(229, 86, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), RequestException_0);
function $$init_185(){
}

function RequestPermissionException_0(url_0){
  RequestException_0.call(this, 'The URL ' + url_0 + ' is invalid or violates the same-origin security restriction');
  $$init_185();
  this , url_0;
}

defineSeed(230, 229, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), RequestPermissionException_0);
function $$init_186(){
}

function RequestTimeoutException_0(request, timeoutMillis){
  RequestException_0.call(this, formatMessage(timeoutMillis));
  $$init_186();
  this , request;
  this , timeoutMillis;
}

function formatMessage(timeoutMillis){
  return 'A request timeout has expired after ' + toString_24(timeoutMillis) + ' ms';
}

defineSeed(231, 229, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), RequestTimeoutException_0);
function $$init_187(){
}

function Response_0(){
  Object_1.call(this);
  $$init_187();
}

defineSeed(232, 1, {});
function $$init_188(){
}

function $isResponseReady(this$static){
  return $getReadyState(this$static.xmlHttpRequest) == 4;
}

function ResponseImpl_0(xmlHttpRequest){
  Response_0.call(this);
  $$init_188();
  this.xmlHttpRequest = xmlHttpRequest;
  if (!$isResponseReady(this)) {
    debugger;
    throw makeAssertionError();
  }
}

defineSeed(233, 232, {}, ResponseImpl_0);
_.getStatusCode = function getStatusCode(){
  return $getStatus(this.xmlHttpRequest);
}
;
_.getText = function getText(){
  return $getResponseText(this.xmlHttpRequest);
}
;
function throwIfEmptyOrNull(name_0, value_0){
  if (jsEquals(name_0, null)) {
    debugger;
    throw makeAssertionError();
  }
  if ($length_1($trim(name_0)) == 0) {
    debugger;
    throw makeAssertionError();
  }
  throwIfNull(name_0, value_0);
  if (0 == $length_1($trim(value_0))) {
    throw new IllegalArgumentException_1(name_0 + ' cannot be empty');
  }
}

function throwIfNull(name_0, value_0){
  if (jsEquals(null, value_0)) {
    throw new NullPointerException_1(name_0 + ' cannot be null');
  }
}

function decodeQueryString(encodedURLComponent){
  throwIfNull('encodedURLComponent', encodedURLComponent);
  return decodeQueryStringImpl(encodedURLComponent);
}

function decodeQueryStringImpl(encodedURLComponent){
  var regexp = /\+/g;
  return decodeURIComponent(encodedURLComponent.replace(regexp, '%20'));
}

function encodePathSegment(decodedURLComponent){
  throwIfNull('decodedURLComponent', decodedURLComponent);
  return encodePathSegmentImpl(decodedURLComponent);
}

function encodePathSegmentImpl(decodedURLComponent){
  return encodeURIComponent(decodedURLComponent);
}

function $$init_189(){
}

function $refreshDirection(this$static){
  var dir_0;
  if (isNotNull(this$static.directionEstimator)) {
    dir_0 = this$static.directionEstimator.estimateDirection(this$static.target_0.getText());
    jsNotEquals(dir_0, this$static.target_0.getDirection()) && this$static.target_0.setDirection(dir_0);
  }
}

function $setDirectionEstimator(this$static, directionEstimator){
  this$static.directionEstimator = directionEstimator;
  if (isNull_1(directionEstimator) != isNull_1(this$static.handlerRegistration)) {
    if (isNull_1(directionEstimator)) {
      this$static.handlerRegistration.removeHandler();
      this$static.handlerRegistration = null;
    }
     else {
      this$static.handlerRegistration = this$static.target_0.addKeyUpHandler(this$static);
    }
  }
  $refreshDirection(this$static);
}

function AutoDirectionHandler_0(target, directionEstimator){
  Object_1.call(this);
  $$init_189();
  this.target_0 = target;
  this.handlerRegistration = null;
  $setDirectionEstimator(this, directionEstimator);
}

function addTo(target, directionEstimator){
  var autoDirHandler;
  autoDirHandler = new AutoDirectionHandler_0(target, directionEstimator);
  return autoDirHandler;
}

function addTo_0(target, enabled){
  return addTo(target, enabled?get_5():null);
}

defineSeed(236, 1, makeCastMap([Q$KeyUpHandler, Q$EventHandler]), AutoDirectionHandler_0);
_.onKeyUp = function onKeyUp(event_0){
  $refreshDirection(this);
}
;
function $clinit_BidiPolicy(){
  $clinit_BidiPolicy = nullMethod;
  new BidiPolicy$BidiPolicyImpl_0;
}

function isBidiEnabled(){
  $clinit_BidiPolicy();
  return $isBidiEnabled();
}

function $$init_190(){
}

function $isBidiEnabled(){
  return hasAnyRTL();
}

function BidiPolicy$BidiPolicyImpl_0(){
  Object_1.call(this);
  $$init_190();
}

defineSeed(238, 1, {}, BidiPolicy$BidiPolicyImpl_0);
function getDirectionOnElement(elem){
  var dirPropertyValue;
  dirPropertyValue = $getPropertyString(elem, 'dir');
  if ($equalsIgnoreCase('rtl', dirPropertyValue)) {
    return $clinit_HasDirection$Direction() , RTL;
  }
   else if ($equalsIgnoreCase('ltr', dirPropertyValue)) {
    return $clinit_HasDirection$Direction() , LTR;
  }
  return $clinit_HasDirection$Direction() , DEFAULT;
}

function setDirectionOnElement(elem, direction){
  switch ($ordinal(direction)) {
    case 0:
      {
        $setPropertyString(elem, 'dir', 'rtl');
        break;
      }

    case 1:
      {
        $setPropertyString(elem, 'dir', 'ltr');
        break;
      }

    case 2:
      {
        jsNotEquals(getDirectionOnElement(elem), ($clinit_HasDirection$Direction() , DEFAULT)) && $setPropertyString(elem, 'dir', '');
        break;
      }

  }
}

function $clinit_HasDirection$Direction(){
  $clinit_HasDirection$Direction = nullMethod;
  RTL = new HasDirection$Direction_0('RTL', 0);
  LTR = new HasDirection$Direction_0('LTR', 1);
  DEFAULT = new HasDirection$Direction_0('DEFAULT', 2);
  $VALUES_6 = initValues(_3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit, makeCastMap([Q$Serializable]), Q$HasDirection$Direction, [RTL, LTR, DEFAULT]);
}

function $$init_191(){
}

function HasDirection$Direction_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_191();
}

function valueOf_7(name_0){
  $clinit_HasDirection$Direction();
  return valueOf(($clinit_HasDirection$Direction$Map() , $MAP_6), name_0);
}

function values_7(){
  $clinit_HasDirection$Direction();
  return $VALUES_6;
}

defineSeed(240, 134, makeCastMap([Q$HasDirection$Direction, Q$Serializable, Q$Comparable, Q$Enum]), HasDirection$Direction_0);
var $VALUES_6, DEFAULT, LTR, RTL;
function $clinit_HasDirection$Direction$Map(){
  $clinit_HasDirection$Direction$Map = nullMethod;
  $MAP_6 = createValueOfMap(($clinit_HasDirection$Direction() , $VALUES_6));
}

var $MAP_6;
function $clinit_LocaleInfo(){
  $clinit_LocaleInfo = nullMethod;
  instance = new LocaleInfo_0(new LocaleInfoImpl__0, new CldrImpl_0);
}

function $$init_192(){
}

function $getLocaleName(this$static){
  return this$static.infoImpl.getLocaleName();
}

function $isRTL_0(){
  return $isRTL_1();
}

function LocaleInfo_0(impl, cldr){
  Object_1.call(this);
  $$init_192();
  this.infoImpl = impl;
  this , cldr;
}

function getCurrentLocale(){
  $clinit_LocaleInfo();
  return instance;
}

function hasAnyRTL(){
  $clinit_LocaleInfo();
  return instance.infoImpl.hasAnyRTL();
}

defineSeed(242, 1, {}, LocaleInfo_0);
var instance;
function $$init_193(){
}

function $isRTL_1(){
  return false;
}

function CldrImpl_0(){
  Object_1.call(this);
  $$init_193();
}

defineSeed(243, 1, {}, CldrImpl_0);
function $$init_194(){
}

function LocaleInfoImpl_0(){
  Object_1.call(this);
  $$init_194();
}

defineSeed(244, 1, {});
_.getLocaleName = function getLocaleName(){
  return null;
}
;
_.hasAnyRTL = function hasAnyRTL_0(){
  return false;
}
;
function $$init_195(){
}

function LocaleInfoImpl_shared_0(){
  LocaleInfoImpl_0.call(this);
  $$init_195();
}

defineSeed(246, 244, {});
_.hasAnyRTL = function hasAnyRTL_1(){
  return false;
}
;
function $$init_196(){
}

function LocaleInfoImpl__0(){
  LocaleInfoImpl_shared_0.call(this);
  $$init_196();
}

defineSeed(245, 246, {}, LocaleInfoImpl__0);
_.getLocaleName = function getLocaleName_0(){
  return 'default';
}
;
function $$init_197(){
}

function $dirResetIfNeeded(this$static, str, dir_0, isHtml, dirReset){
  return dirReset && (jsEquals(this$static.contextDir, ($clinit_HasDirection$Direction() , LTR)) && (jsEquals(dir_0, ($clinit_HasDirection$Direction() , RTL)) || $endsWithRtl_0((get_4() , str), isHtml)) || jsEquals(this$static.contextDir, ($clinit_HasDirection$Direction() , RTL)) && (jsEquals(dir_0, ($clinit_HasDirection$Direction() , LTR)) || $endsWithLtr_0((get_4() , str), isHtml)))?jsEquals(this$static.contextDir, ($clinit_HasDirection$Direction() , LTR))?($clinit_BidiFormatterBase$Format() , LRM_STRING):($clinit_BidiFormatterBase$Format() , RLM_STRING):'';
}

function $spanWrapWithKnownDirBase(this$static, dir_0, str, isHtml, dirReset){
  var dirCondition, origStr, result;
  dirCondition = jsNotEquals(dir_0, ($clinit_HasDirection$Direction() , DEFAULT)) && jsNotEquals(dir_0, this$static.contextDir);
  origStr = str;
  isHtml || (str = htmlEscape(str));
  result = new StringBuilder_0;
  if (this$static.alwaysSpan || dirCondition) {
    $append_3(result, '<span');
    if (dirCondition) {
      $append_3(result, ' ');
      $append_3(result, jsEquals(dir_0, ($clinit_HasDirection$Direction() , RTL))?'dir=rtl':'dir=ltr');
    }
    $append_3(result, '>' + str + '<\/span>');
  }
   else {
    $append_3(result, str);
  }
  $append_3(result, $dirResetIfNeeded(this$static, origStr, dir_0, isHtml, dirReset));
  return $toString_2(result);
}

function $unicodeWrapWithKnownDirBase(this$static, dir_0, str, isHtml, dirReset){
  var result;
  result = new StringBuilder_0;
  if (jsNotEquals(dir_0, ($clinit_HasDirection$Direction() , DEFAULT)) && jsNotEquals(dir_0, this$static.contextDir)) {
    $append_2(result, jsEquals(dir_0, ($clinit_HasDirection$Direction() , RTL))?8235:8234);
    $append_3(result, str);
    $append_2(result, 8236);
  }
   else {
    $append_3(result, str);
  }
  $append_3(result, $dirResetIfNeeded(this$static, str, dir_0, isHtml, dirReset));
  return $toString_2(result);
}

function BidiFormatterBase_0(contextDir, alwaysSpan){
  Object_1.call(this);
  $$init_197();
  this.contextDir = contextDir;
  this.alwaysSpan = alwaysSpan;
}

defineSeed(248, 1, makeCastMap([Q$BidiFormatterBase]));
_.alwaysSpan = false;
function $clinit_BidiFormatter(){
  $clinit_BidiFormatter = nullMethod;
  new BidiFormatter$Factory_0;
}

function $$init_198(){
}

function $spanWrapWithKnownDir(this$static, dir_0, str, isHtml){
  return $spanWrapWithKnownDir_0(this$static, dir_0, str, isHtml, true);
}

function $spanWrapWithKnownDir_0(this$static, dir_0, str, isHtml, dirReset){
  return $spanWrapWithKnownDirBase(this$static, dir_0, str, isHtml, dirReset);
}

function $unicodeWrapWithKnownDir(this$static, dir_0, str, isHtml, dirReset){
  return $unicodeWrapWithKnownDirBase(this$static, dir_0, str, isHtml, dirReset);
}

function BidiFormatter_0(contextDir, alwaysSpan){
  BidiFormatterBase_0.call(this, contextDir, alwaysSpan);
  $$init_198();
}

function getInstance(rtlContext, alwaysSpan){
  return new BidiFormatter_0(rtlContext?($clinit_HasDirection$Direction() , RTL):($clinit_HasDirection$Direction() , LTR), alwaysSpan);
}

function getInstanceForCurrentLocale(){
  $clinit_BidiFormatter();
  return getInstanceForCurrentLocale_0(false);
}

function getInstanceForCurrentLocale_0(alwaysSpan){
  $clinit_BidiFormatter();
  return getInstance($isRTL_0(getCurrentLocale()), alwaysSpan);
}

defineSeed(247, 248, makeCastMap([Q$BidiFormatterBase]), BidiFormatter_0);
function $$init_199(){
}

function BidiFormatterBase$Factory_0(){
  Object_1.call(this);
  $$init_199();
  this , initDim(_3Lcom_google_gwt_i18n_shared_BidiFormatterBase_2_classLit, makeCastMap([Q$Serializable]), Q$BidiFormatterBase, 6, 0);
}

defineSeed(250, 1, {});
function $$init_200(){
}

function BidiFormatter$Factory_0(){
  BidiFormatterBase$Factory_0.call(this);
  $$init_200();
}

defineSeed(249, 250, {}, BidiFormatter$Factory_0);
function $clinit_BidiFormatterBase$Format(){
  $clinit_BidiFormatterBase$Format = nullMethod;
  'left';
  8234;
  8206;
  LRM_STRING = toString_19(8206);
  8236;
  'right';
  8235;
  8207;
  RLM_STRING = toString_19(8207);
}

var LRM_STRING, RLM_STRING;
function $clinit_BidiUtils(){
  $clinit_BidiUtils = nullMethod;
  compile('^[^' + RTL_CHARS + ']*[' + LTR_CHARS + ']');
  FIRST_STRONG_IS_RTL_RE = compile('^[^' + LTR_CHARS + ']*[' + RTL_CHARS + ']');
  HAS_ANY_LTR_RE = compile('[' + LTR_CHARS + ']');
  compile('[' + RTL_CHARS + ']');
  HAS_NUMERALS_RE = compile('\\d');
  SKIP_HTML_RE = compile_0('<[^>]*>|&[^;]+;', 'g');
  INSTANCE_1 = new BidiUtils_0;
  IS_REQUIRED_LTR_RE = compile('^http://.*');
  LAST_STRONG_IS_LTR_RE = compile('[' + LTR_CHARS + '][^' + RTL_CHARS + ']*$');
  LAST_STRONG_IS_RTL_RE = compile('[' + RTL_CHARS + '][^' + LTR_CHARS + ']*$');
  0.4000000059604645;
  WORD_SEPARATOR_RE = compile('\\s+');
}

function $$init_201(){
}

function $endsWithLtr(str){
  return $test(LAST_STRONG_IS_LTR_RE, str);
}

function $endsWithLtr_0(str, isHtml){
  return $endsWithLtr($stripHtmlIfNeeded(str, isHtml));
}

function $endsWithRtl(str){
  return $test(LAST_STRONG_IS_RTL_RE, str);
}

function $endsWithRtl_0(str, isHtml){
  return $endsWithRtl($stripHtmlIfNeeded(str, isHtml));
}

function $estimateDirection(str){
  var hasWeaklyLtr, i, rtlCount, token, tokens, total;
  rtlCount = 0;
  total = 0;
  hasWeaklyLtr = false;
  tokens = $split(WORD_SEPARATOR_RE, str);
  for (i = 0; i < $length_0(tokens); i++) {
    token = $get_0(tokens, i);
    if ($startsWithRtl(token)) {
      ++rtlCount;
      ++total;
    }
     else 
      $test(IS_REQUIRED_LTR_RE, token)?(hasWeaklyLtr = true):$hasAnyLtr(token)?++total:$test(HAS_NUMERALS_RE, token) && (hasWeaklyLtr = true);
  }
  return total == 0?hasWeaklyLtr?($clinit_HasDirection$Direction() , LTR):($clinit_HasDirection$Direction() , DEFAULT):rtlCount / total > 0.4000000059604645?($clinit_HasDirection$Direction() , RTL):($clinit_HasDirection$Direction() , LTR);
}

function $hasAnyLtr(str){
  return $test(HAS_ANY_LTR_RE, str);
}

function $startsWithRtl(str){
  return $test(FIRST_STRONG_IS_RTL_RE, str);
}

function $stripHtmlIfNeeded(str, isStripNeeded){
  return isStripNeeded?$replace(SKIP_HTML_RE, str, ' '):str;
}

function BidiUtils_0(){
  Object_1.call(this);
  $$init_201();
}

function get_4(){
  $clinit_BidiUtils();
  return INSTANCE_1;
}

defineSeed(252, 1, {}, BidiUtils_0);
var FIRST_STRONG_IS_RTL_RE, HAS_ANY_LTR_RE, HAS_NUMERALS_RE, INSTANCE_1, IS_REQUIRED_LTR_RE, LAST_STRONG_IS_LTR_RE, LAST_STRONG_IS_RTL_RE, LTR_CHARS = 'A-Za-z\xC0-\xD6\xD8-\xF6\xF8-\u02B8\u0300-\u0590\u0800-\u1FFF\u2C00-\uFB1C\uFDFE-\uFE6F\uFEFD-\uFFFF', RTL_CHARS = '\u0591-\u07FF\uFB1D-\uFDFD\uFE70-\uFEFC', SKIP_HTML_RE, WORD_SEPARATOR_RE;
function $$init_202(){
}

function $estimateDirection_0(this$static, str, isHtml){
  return this$static.estimateDirection($stripHtmlIfNeeded((get_4() , str), isHtml));
}

function DirectionEstimator_0(){
  Object_1.call(this);
  $$init_202();
}

defineSeed(253, 1, {});
function $clinit_WordCountDirectionEstimator(){
  $clinit_WordCountDirectionEstimator = nullMethod;
  instance_0 = new WordCountDirectionEstimator_0;
}

function $$init_203(){
}

function WordCountDirectionEstimator_0(){
  DirectionEstimator_0.call(this);
  $$init_203();
}

function get_5(){
  $clinit_WordCountDirectionEstimator();
  return instance_0;
}

defineSeed(254, 253, {}, WordCountDirectionEstimator_0);
_.estimateDirection = function estimateDirection(str){
  return $estimateDirection((get_4() , str));
}
;
var instance_0;
function $$init_204(){
}

function JSONValue_0(){
  Object_1.call(this);
  $$init_204();
}

defineSeed(256, 1, {});
_.isNull = function isNull(){
  return null;
}
;
_.isObject = function isObject(){
  return null;
}
;
_.isString = function isString(){
  return null;
}
;
function $$init_205(){
}

function $get_1(this$static, index_0){
  var v = this$static.jsArray[index_0];
  var func = ($clinit_JSONParser() , typeMap)[typeof v];
  return func?func(v):throwUnknownTypeException(typeof v);
}

function $size(this$static){
  return this$static.jsArray.length;
}

function JSONArray_0(arr){
  JSONValue_0.call(this);
  $$init_205();
  this.jsArray = arr;
}

defineSeed(255, 256, makeCastMap([Q$JSONArray]), JSONArray_0);
_.equals$ = function equals_1(other){
  if (!instanceOf(other, Q$JSONArray)) {
    return false;
  }
  return $equals_0(this.jsArray, dynamicCast(other, Q$JSONArray).jsArray);
}
;
_.hashCode$ = function hashCode_3(){
  return $hashCode_0(this.jsArray);
}
;
_.toString$ = function toString_8(){
  var c, i, sb;
  sb = new StringBuffer_0;
  $append_1(sb, '[');
  for (i = 0 , c = $size(this); i < c; i++) {
    i > 0 && $append_1(sb, ',');
    $append_0(sb, $get_1(this, i));
  }
  $append_1(sb, ']');
  return $toString_1(sb);
}
;
function $clinit_JSONBoolean(){
  $clinit_JSONBoolean = nullMethod;
  FALSE = new JSONBoolean_0(false);
  TRUE = new JSONBoolean_0(true);
}

function $$init_206(){
}

function JSONBoolean_0(value_0){
  JSONValue_0.call(this);
  $$init_206();
  this.value_0 = value_0;
}

function getInstance_0(b){
  $clinit_JSONBoolean();
  return b?TRUE:FALSE;
}

defineSeed(257, 256, {}, JSONBoolean_0);
_.toString$ = function toString_9(){
  return toString_18(this.value_0);
}
;
_.value_0 = false;
var FALSE, TRUE;
function $$init_207(){
}

function JSONException_0(message){
  RuntimeException_1.call(this, message);
  $$init_207();
}

function JSONException_1(cause){
  RuntimeException_3.call(this, cause);
  $$init_207();
}

defineSeed(258, 85, makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), JSONException_0, JSONException_1);
function $clinit_JSONNull(){
  $clinit_JSONNull = nullMethod;
  instance_1 = new JSONNull_0;
}

function $$init_208(){
}

function JSONNull_0(){
  JSONValue_0.call(this);
  $$init_208();
}

function getInstance_1(){
  $clinit_JSONNull();
  return instance_1;
}

defineSeed(259, 256, {}, JSONNull_0);
_.isNull = function isNull_0(){
  if (jsNotEquals(this, instance_1)) {
    return null;
  }
  return this;
}
;
_.toString$ = function toString_10(){
  return 'null';
}
;
var instance_1;
function $$init_209(){
}

function JSONNumber_0(value_0){
  JSONValue_0.call(this);
  $$init_209();
  this.value_0 = value_0;
}

defineSeed(260, 256, makeCastMap([Q$JSONNumber]), JSONNumber_0);
_.equals$ = function equals_2(other){
  if (!instanceOf(other, Q$JSONNumber)) {
    return false;
  }
  return this.value_0 == dynamicCast(other, Q$JSONNumber).value_0;
}
;
_.hashCode$ = function hashCode_4(){
  return $hashCode_1(valueOf_11(this.value_0));
}
;
_.toString$ = function toString_11(){
  return this.value_0 + '';
}
;
_.value_0 = 0;
function $$init_210(){
}

function $computeKeys(this$static){
  return $computeKeys0(this$static, initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, 0, 0));
}

function $computeKeys0(this$static, result){
  var jsObject = this$static.jsObject;
  var i = 0;
  for (var key in jsObject) {
    if (jsObject.hasOwnProperty(key)) {
      result[i++] = key;
    }
  }
  return result;
}

function $containsKey(this$static, key){
  return key in this$static.jsObject;
}

function $get_2(this$static, key){
  if (jsEquals(key, null)) {
    throw new NullPointerException_0;
  }
  return $get0(this$static, key);
}

function $get0(this$static, key){
  var jsObject = this$static.jsObject;
  var v;
  key = String(key);
  if (jsObject.hasOwnProperty(key)) {
    v = jsObject[key];
  }
  var func = ($clinit_JSONParser() , typeMap)[typeof v];
  var ret = func?func(v):throwUnknownTypeException(typeof v);
  return ret;
}

function $keySet(this$static){
  var keys_0;
  keys_0 = $computeKeys(this$static);
  return new JSONObject$1_0(this$static, keys_0);
}

function JSONObject_0(jsValue){
  JSONValue_0.call(this);
  $$init_210();
  this.jsObject = jsValue;
}

defineSeed(261, 256, makeCastMap([Q$JSONObject]), JSONObject_0);
_.equals$ = function equals_3(other){
  if (!instanceOf(other, Q$JSONObject)) {
    return false;
  }
  return $equals_0(this.jsObject, dynamicCast(other, Q$JSONObject).jsObject);
}
;
_.hashCode$ = function hashCode_5(){
  return $hashCode_0(this.jsObject);
}
;
_.isObject = function isObject_0(){
  return this;
}
;
_.toString$ = function toString_12(){
  var first, key, key$array, key$index, key$max, keys_0, sb;
  sb = new StringBuffer_0;
  $append_1(sb, '{');
  first = true;
  keys_0 = $computeKeys(this);
  for (key$array = keys_0 , key$index = 0 , key$max = key$array.length; key$index < key$max; ++key$index) {
    key = key$array[key$index];
    first?(first = false):$append_1(sb, ', ');
    $append_1(sb, escapeValue(key));
    $append_1(sb, ':');
    $append_0(sb, $get_2(this, key));
  }
  $append_1(sb, '}');
  return $toString_1(sb);
}
;
function $$init_211(){
}

function $advanceToFind(iter, o){
  var t;
  while (iter.hasNext()) {
    t = iter.next_0();
    if (jsEquals(o, null)?jsEquals(t, null):equals__devirtual$(o, t)) {
      return iter;
    }
  }
  return null;
}

function AbstractCollection_0(){
  Object_1.call(this);
  $$init_211();
}

defineSeed(264, 1, {});
_.add_0 = function add_1(o){
  throw new UnsupportedOperationException_1('Add not supported on this collection');
}
;
_.addAll = function addAll(c){
  var changed, iter;
  iter = c.iterator();
  changed = false;
  while (iter.hasNext()) {
    this.add_0(iter.next_0()) && (changed = true);
  }
  return changed;
}
;
_.clear_0 = function clear_0(){
  var iter;
  iter = this.iterator();
  while (iter.hasNext()) {
    iter.next_0();
    iter.remove_1();
  }
}
;
_.contains_0 = function contains(o){
  var iter;
  iter = $advanceToFind(this.iterator(), o);
  return isNotNull(iter);
}
;
_.isEmpty = function isEmpty(){
  return this.size_1() == 0;
}
;
_.remove = function remove_0(o){
  var iter;
  iter = $advanceToFind(this.iterator(), o);
  if (isNotNull(iter)) {
    iter.remove_1();
    return true;
  }
   else {
    return false;
  }
}
;
_.toArray = function toArray(){
  return this.toArray_0(initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable]), Q$Object, this.size_1(), 0));
}
;
_.toArray_0 = function toArray_0(a){
  var i, it, result, size_0;
  size_0 = this.size_1();
  a.length < size_0 && (a = createFrom(a, size_0));
  result = a;
  it = this.iterator();
  for (i = 0; i < size_0; ++i) {
    setCheck(result, i, it.next_0());
  }
  a.length > size_0 && setCheck(a, size_0, null);
  return a;
}
;
_.toString$ = function toString_13(){
  var comma, iter, sb, value_0;
  sb = new StringBuffer_0;
  comma = null;
  $append_1(sb, '[');
  iter = this.iterator();
  while (iter.hasNext()) {
    jsNotEquals(comma, null)?$append_1(sb, comma):(comma = ', ');
    value_0 = iter.next_0();
    $append_1(sb, value_0 === this?'(this Collection)':valueOf_16(value_0));
  }
  $append_1(sb, ']');
  return $toString_1(sb);
}
;
function $$init_212(){
}

function AbstractSet_0(){
  AbstractCollection_0.call(this);
  $$init_212();
}

defineSeed(263, 264, makeCastMap([Q$Set]));
_.equals$ = function equals_4(o){
  var iter, other, otherItem;
  if (o === this) {
    return true;
  }
  if (!instanceOf(o, Q$Set)) {
    return false;
  }
  other = dynamicCast(o, Q$Set);
  if (other.size_1() != this.size_1()) {
    return false;
  }
  for (iter = other.iterator(); iter.hasNext();) {
    otherItem = iter.next_0();
    if (!this.contains_0(otherItem)) {
      return false;
    }
  }
  return true;
}
;
_.hashCode$ = function hashCode_6(){
  var hashCode, iter, next;
  hashCode = 0;
  for (iter = this.iterator(); iter.hasNext();) {
    next = iter.next_0();
    if (jsNotEquals(next, null)) {
      hashCode += hashCode__devirtual$(next);
      hashCode = ~~hashCode;
    }
  }
  return hashCode;
}
;
function $$init_213(){
}

function JSONObject$1_0(this$0, val$keys){
  this.this$0 = this$0;
  this.val$keys = val$keys;
  AbstractSet_0.call(this);
  $$init_213();
}

defineSeed(262, 263, makeCastMap([Q$Set]), JSONObject$1_0);
_.contains_0 = function contains_0(o){
  return instanceOf(o, Q$String) && $containsKey(this.this$0, dynamicCast(o, Q$String));
}
;
_.iterator = function iterator_0(){
  return asList(this.val$keys).iterator();
}
;
_.size_1 = function size_1(){
  return this.val$keys.length;
}
;
function $clinit_JSONParser(){
  $clinit_JSONParser = nullMethod;
  typeMap = initTypeMap();
}

function createBoolean(v){
  return getInstance_0(v);
}

function createNumber(v){
  return new JSONNumber_0(v);
}

function createObject_0(o){
  if (!o) {
    return getInstance_1();
  }
  var v = o.valueOf?o.valueOf():o;
  if (v !== o) {
    var func = typeMap[typeof v];
    return func?func(v):throwUnknownTypeException(typeof v);
  }
   else if (o instanceof Array || o instanceof $wnd.Array) {
    return new JSONArray_0(o);
  }
   else {
    return new JSONObject_0(o);
  }
}

function createString(v){
  return new JSONString_0(v);
}

function createUndefined(){
  return null;
}

function evaluate(json, strict){
  var v;
  if (strict && ($clinit_JsonUtils() , hasJsonParse)) {
    try {
      v = JSON.parse(json);
    }
     catch (e) {
      return throwJSONException('Error parsing JSON: ' + e);
    }
  }
   else {
    if (strict) {
      if (!safeToEval(json)) {
        return throwJSONException('Illegal character in JSON string');
      }
    }
    json = escapeJsonForEval(json);
    try {
      v = eval('(' + json + ')');
    }
     catch (e) {
      return throwJSONException('Error parsing JSON: ' + e);
    }
  }
  var func = typeMap[typeof v];
  return func?func(v):throwUnknownTypeException(typeof v);
}

function initTypeMap(){
  return {'boolean':createBoolean, number:createNumber, string:createString, object:createObject_0, 'function':createObject_0, undefined:createUndefined};
}

function parse_0(jsonString, strict){
  var ex;
  if (jsEquals(jsonString, null)) {
    throw new NullPointerException_0;
  }
  if ($length_1(jsonString) == 0) {
    throw new IllegalArgumentException_1('empty argument');
  }
  try {
    return evaluate(jsonString, strict);
  }
   catch ($e0) {
    $e0 = wrap($e0);
    if (instanceOf($e0, Q$JavaScriptException)) {
      ex = $e0;
      throw new JSONException_1(ex);
    }
     else 
      throw unwrap($e0);
  }
}

function parseStrict(jsonString){
  $clinit_JSONParser();
  return parse_0(jsonString, true);
}

function throwJSONException(message){
  throw new JSONException_0(message);
}

function throwUnknownTypeException(typeString){
  $clinit_JSONParser();
  throw new JSONException_0("Unexpected typeof result '" + typeString + "'; please report this bug to the GWT team");
}

var typeMap;
function $$init_214(){
}

function $stringValue(this$static){
  return this$static.value_0;
}

function JSONString_0(value_0){
  JSONValue_0.call(this);
  $$init_214();
  if (jsEquals(value_0, null)) {
    throw new NullPointerException_0;
  }
  this.value_0 = value_0;
}

defineSeed(266, 256, makeCastMap([Q$JSONString]), JSONString_0);
_.equals$ = function equals_5(other){
  if (!instanceOf(other, Q$JSONString)) {
    return false;
  }
  return $equals_2(this.value_0, dynamicCast(other, Q$JSONString).value_0);
}
;
_.hashCode$ = function hashCode_7(){
  return $hashCode_2(this.value_0);
}
;
_.isString = function isString_0(){
  return this;
}
;
_.toString$ = function toString_14(){
  return escapeValue(this.value_0);
}
;
function $$init_215(this$static){
}

function Array_0(){
  Object_1.call(this);
  $$init_215(this);
}

function arraySlice(array, fromIndex, toIndex){
  return array.slice(fromIndex, toIndex);
}

function asArray(array){
  return array;
}

function asArrayType(array){
  return array;
}

function clone(array){
  return cloneSubrange(array, 0, array.length);
}

function cloneSubrange(array, fromIndex, toIndex){
  var a, result;
  a = asArrayType(array);
  result = arraySlice(a, fromIndex, toIndex);
  initValues(a.___clazz$, getCastableTypeMap(a), a.queryId$, result);
  return asArray(result);
}

function createFrom(array, length_0){
  var a, result;
  a = asArrayType(array);
  result = createFromSeed(0, length_0);
  initValues(a.___clazz$, getCastableTypeMap(a), a.queryId$, result);
  return asArray(result);
}

function createFromSeed(seedType, length_0){
  var array = new Array(length_0);
  if (seedType == 3) {
    for (var i = 0; i < length_0; ++i) {
      array[i] = {l:0, m:0, h:0};
    }
  }
   else if (seedType > 0 && seedType < 3) {
    var value_0 = seedType == 1?0:false;
    for (var i = 0; i < length_0; ++i) {
      array[i] = value_0;
    }
  }
  return array;
}

function initDim(arrayClass, castableTypeMap, queryId, length_0, seedType){
  var result;
  result = createFromSeed(seedType, length_0);
  initValues(arrayClass, castableTypeMap, queryId, result);
  return result;
}

function initValues(arrayClass, castableTypeMap, queryId, array){
  wrapArray(array);
  setClass(array, arrayClass);
  setCastableTypeMap(array, castableTypeMap);
  array.queryId$ = queryId;
  return array;
}

function set_2(array, index_0, value_0){
  return array[index_0] = value_0;
}

function setCheck(array, index_0, value_0){
  if (jsNotEquals(value_0, null)) {
    if (array.queryId$ > 0 && !canCastUnsafe(value_0, array.queryId$)) {
      throw new ArrayStoreException_0;
    }
     else if (array.queryId$ == -1 && isJavaObject(value_0)) {
      throw new ArrayStoreException_0;
    }
     else if (array.queryId$ < -1 && !isJavaScriptObject(value_0) && !canCastUnsafe(value_0, -array.queryId$)) {
      throw new ArrayStoreException_0;
    }
  }
  return set_2(array, index_0, value_0);
}

function setClass(o, clazz){
  o.___clazz$ = clazz;
}

defineSeed(267, 1, {}, Array_0);
_.queryId$ = 0;
function $clinit_Array$ExpandoWrapper(){
  $clinit_Array$ExpandoWrapper = nullMethod;
  expandoNames_0 = makeEmptyJsArray();
  expandoValues_0 = makeEmptyJsArray();
  initExpandos(new Array_0, expandoNames_0, expandoValues_0);
}

function initExpandos(protoType, expandoNames, expandoValues){
  var i = 0, value_0;
  for (var name_0 in protoType) {
    if (value_0 = protoType[name_0]) {
      expandoNames[i] = name_0;
      expandoValues[i] = value_0;
      ++i;
    }
  }
}

function makeEmptyJsArray(){
  return [];
}

function wrapArray(array){
  $clinit_Array$ExpandoWrapper();
  wrapArray_0(array, expandoNames_0, expandoValues_0);
}

function wrapArray_0(array, expandoNames, expandoValues){
  for (var i = 0, c = expandoNames.length; i < c; ++i) {
    array[expandoNames[i]] = expandoValues[i];
  }
}

var expandoNames_0, expandoValues_0;
function canCast(src_0, dstId){
  return src_0.castableTypeMap$ && !!src_0.castableTypeMap$[dstId];
}

function canCastUnsafe(src_0, dstId){
  return src_0.castableTypeMap$ && src_0.castableTypeMap$[dstId];
}

function dynamicCast(src_0, dstId){
  if (jsNotEquals(src_0, null) && !canCastUnsafe(src_0, dstId)) {
    throw new ClassCastException_0;
  }
  return src_0;
}

function dynamicCastJso(src_0){
  if (jsNotEquals(src_0, null) && isJavaObject(src_0)) {
    throw new ClassCastException_0;
  }
  return src_0;
}

function getNullMethod(){
  return nullMethod;
}

function instanceOf(src_0, dstId){
  return jsNotEquals(src_0, null) && canCast(src_0, dstId);
}

function instanceOfJso(src_0){
  return jsNotEquals(src_0, null) && isJavaScriptObject(src_0);
}

function isJavaObject(src_0){
  return isNonStringJavaObject(src_0) || isJavaString(src_0);
}

function isJavaScriptObject(src_0){
  return !isNonStringJavaObject(src_0) && !isJavaString(src_0);
}

function isJavaString(src_0){
  return canCast(src_0, 1);
}

function isNonStringJavaObject(src_0){
  return jsEquals(getTypeMarker(src_0), getNullMethod());
}

function isNotNull(src_0){
  return !!src_0;
}

function isNull_1(src_0){
  return !src_0;
}

function jsEquals(a, b){
  return a == b;
}

function jsNotEquals(a, b){
  return a != b;
}

function maskUndefined(src_0){
  return src_0 == null?null:src_0;
}

function narrow_char(x_0){
  return x_0 & 65535;
}

function narrow_int(x_0){
  return ~~x_0;
}

function round_int(x_0){
  return ~~Math.max(Math.min(x_0, 2147483647), -2147483648);
}

function init_0(){
  isStatsAvailable() && onModuleStart('com.google.gwt.useragent.client.UserAgentAsserter');
  $onModuleLoad_1(new UserAgentAsserter_0);
  isStatsAvailable() && onModuleStart('com.google.gwt.user.client.DocumentModeAsserter');
  $onModuleLoad_0(new DocumentModeAsserter_0);
  isStatsAvailable() && onModuleStart('com.google.gwt.logging.client.LogConfiguration');
  $onModuleLoad(new LogConfiguration_0);
  isStatsAvailable() && onModuleStart('org.cruxframework.crux.core.client.Crux');
  $onModuleLoad_3(new Crux_0);
  isStatsAvailable() && onModuleStart('org.cruxframework.crux.tools.codeserver.client.CodeServerNotifier');
  $onModuleLoad_4(new CodeServerNotifier_0);
}

function getCachableJavaScriptException(e_0){
  var jse = e_0.__gwt$exception;
  if (!jse) {
    jse = new JavaScriptException_0(e_0);
    try {
      e_0.__gwt$exception = jse;
    }
     catch (e) {
    }
  }
  return jse;
}

function makeAssertionError(){
  return new AssertionError_0;
}

function makeAssertionError_Object(message){
  return new AssertionError_1(message);
}

function unwrap(e){
  var jse;
  if (instanceOf(e, Q$JavaScriptException)) {
    jse = dynamicCast(e, Q$JavaScriptException);
    if ($isThrownSet(jse)) {
      return $getThrown(jse);
    }
  }
  return e;
}

function wrap(e){
  if (instanceOf(e, Q$Throwable)) {
    return e;
  }
  return jsEquals(e, null)?new JavaScriptException_0(null):getCachableJavaScriptException(e);
}

function $clinit_LongLibBase(){
  $clinit_LongLibBase = nullMethod;
  new LongLibBase$LongEmul_0;
  22;
  44;
  20;
  4194303;
  1048575;
  false;
  19;
  524288;
  32768;
  65536;
  4194304;
  2147483648;
  4294967296;
  17592186044416;
  9223372036854775807;
}

function create_3(){
  return create0(0, 0, 0);
}

function create_4(value_0){
  var a0, a1, a2;
  a0 = value_0 & 4194303;
  a1 = ~~value_0 >> 22 & 4194303;
  a2 = value_0 < 0?1048575:0;
  return create0(a0, a1, a2);
}

function create_5(a0, a1, a2){
  $clinit_LongLibBase();
  return create0(a0, a1, a2);
}

function create_6(a){
  return create0(getL(a), getM(a), getH(a));
}

function create0(l_0, m_0, h_0){
  return {l:l_0, m:m_0, h:h_0};
}

function divMod(a, b, computeRemainder){
  var aIsCopy, aIsMinValue, aIsNegative, bpower, c, negative;
  if (isZero(b)) {
    throw new ArithmeticException_0('divide by zero');
  }
  if (isZero(a)) {
    computeRemainder && (remainder = create_3());
    return create_3();
  }
  if (isMinValue(b)) {
    return divModByMinValue(a, computeRemainder);
  }
  negative = false;
  if (isNegative(b)) {
    b = neg(b);
    negative = !negative;
  }
  bpower = powerOfTwo(b);
  aIsNegative = false;
  aIsMinValue = false;
  aIsCopy = false;
  if (isMinValue(a)) {
    aIsMinValue = true;
    aIsNegative = true;
    if (bpower == -1) {
      a = create_6(($clinit_LongLib$Const() , MAX_VALUE));
      aIsCopy = true;
      negative = !negative;
    }
     else {
      c = shr(a, bpower);
      negative && negate(c);
      computeRemainder && (remainder = create_3());
      return c;
    }
  }
   else if (isNegative(a)) {
    aIsNegative = true;
    a = neg(a);
    aIsCopy = true;
    negative = !negative;
  }
  if (bpower != -1) {
    return divModByShift(a, bpower, negative, aIsNegative, computeRemainder);
  }
  if (lt(a, b)) {
    computeRemainder && (aIsNegative?(remainder = neg(a)):(remainder = create_6(a)));
    return create_3();
  }
  return divModHelper(aIsCopy?a:create_6(a), b, negative, aIsNegative, aIsMinValue, computeRemainder);
}

function divModByMinValue(a, computeRemainder){
  if (isMinValue(a)) {
    computeRemainder && (remainder = create_3());
    return create_6(($clinit_LongLib$Const() , ONE));
  }
  computeRemainder && (remainder = create_6(a));
  return create_3();
}

function divModByShift(a, bpower, negative, aIsNegative, computeRemainder){
  var c;
  c = shr(a, bpower);
  negative && negate(c);
  if (computeRemainder) {
    a = maskRight(a, bpower);
    aIsNegative?(remainder = neg(a)):(remainder = create_6(a));
  }
  return c;
}

function divModHelper(a, b, negative, aIsNegative, aIsMinValue, computeRemainder){
  var bshift, gte, quotient, shift_0;
  shift_0 = numberOfLeadingZeros(b) - numberOfLeadingZeros(a);
  bshift = shl(b, shift_0);
  quotient = create_3();
  while (shift_0 >= 0) {
    gte = trialSubtract(a, bshift);
    if (gte) {
      setBit(quotient, shift_0);
      if (isZero(a)) {
        break;
      }
    }
    toShru1(bshift);
    --shift_0;
  }
  negative && negate(quotient);
  if (computeRemainder) {
    if (aIsNegative) {
      remainder = neg(a);
      aIsMinValue && (remainder = sub_0(remainder, ($clinit_LongLib$Const() , ONE)));
    }
     else {
      remainder = create_6(a);
    }
  }
  return quotient;
}

function getH(a){
  return getHNative(a);
}

function getHNative(a){
  return a.h;
}

function getL(a){
  return getLNative(a);
}

function getLNative(a){
  return a.l;
}

function getM(a){
  return getMNative(a);
}

function getMNative(a){
  return a.m;
}

function isMinValue(a){
  return getH(a) == 524288 && getM(a) == 0 && getL(a) == 0;
}

function isNegative(a){
  return sign(a) != 0;
}

function isZero(a){
  return getL(a) == 0 && getM(a) == 0 && getH(a) == 0;
}

function maskRight(a, bits){
  var b0, b1, b2;
  if (bits <= 22) {
    b0 = getL(a) & (1 << bits) - 1;
    b1 = b2 = 0;
  }
   else if (bits <= 44) {
    b0 = getL(a);
    b1 = getM(a) & (1 << bits - 22) - 1;
    b2 = 0;
  }
   else {
    b0 = getL(a);
    b1 = getM(a);
    b2 = getH(a) & (1 << bits - 44) - 1;
  }
  return create_5(b0, b1, b2);
}

function negate(a){
  var neg0, neg1, neg2;
  neg0 = ~getL(a) + 1 & 4194303;
  neg1 = ~getM(a) + (neg0 == 0?1:0) & 4194303;
  neg2 = ~getH(a) + (neg0 == 0 && neg1 == 0?1:0) & 1048575;
  setL(a, neg0);
  setM(a, neg1);
  setH(a, neg2);
}

function numberOfLeadingZeros(a){
  var b1, b2;
  b2 = numberOfLeadingZeros_0(getH(a));
  if (b2 == 32) {
    b1 = numberOfLeadingZeros_0(getM(a));
    return b1 == 32?numberOfLeadingZeros_0(getL(a)) + 32:b1 + 20 - 10;
  }
   else {
    return b2 - 12;
  }
}

function powerOfTwo(a){
  var h_0, l_0, m_0;
  l_0 = getL(a);
  if ((l_0 & l_0 - 1) != 0) {
    return -1;
  }
  m_0 = getM(a);
  if ((m_0 & m_0 - 1) != 0) {
    return -1;
  }
  h_0 = getH(a);
  if ((h_0 & h_0 - 1) != 0) {
    return -1;
  }
  if (h_0 == 0 && m_0 == 0 && l_0 == 0) {
    return -1;
  }
  if (h_0 == 0 && m_0 == 0 && l_0 != 0) {
    return numberOfTrailingZeros(l_0);
  }
  if (h_0 == 0 && m_0 != 0 && l_0 == 0) {
    return numberOfTrailingZeros(m_0) + 22;
  }
  if (h_0 != 0 && m_0 == 0 && l_0 == 0) {
    return numberOfTrailingZeros(h_0) + 44;
  }
  return -1;
}

function setBit(a, bit){
  bit < 22?setBitL(a, bit):bit < 44?setBitM(a, bit - 22):setBitH(a, bit - 44);
}

function setBitH(a, bit){
  a.h |= 1 << bit;
}

function setBitL(a, bit){
  a.l |= 1 << bit;
}

function setBitM(a, bit){
  a.m |= 1 << bit;
}

function setH(a, x_0){
  a.h = x_0;
}

function setL(a, x_0){
  a.l = x_0;
}

function setM(a, x_0){
  a.m = x_0;
}

function sign(a){
  return ~~getH(a) >> 19;
}

function toDoubleHelper(a){
  return getL(a) + getM(a) * 4194304 + getH(a) * 17592186044416;
}

function toShru1(a){
  var a0, a1, a2;
  a1 = getM(a);
  a2 = getH(a);
  a0 = getL(a);
  setH(a, ~~a2 >>> 1);
  setM(a, ~~a1 >>> 1 | (a2 & 1) << 21);
  setL(a, ~~a0 >>> 1 | (a1 & 1) << 21);
}

function trialSubtract(a, b){
  var sum0, sum1, sum2;
  sum2 = getH(a) - getH(b);
  if (sum2 < 0) {
    return false;
  }
  sum0 = getL(a) - getL(b);
  sum1 = getM(a) - getM(b) + (~~sum0 >> 22);
  sum2 += ~~sum1 >> 22;
  if (sum2 < 0) {
    return false;
  }
  setL(a, sum0 & 4194303);
  setM(a, sum1 & 4194303);
  setH(a, sum2 & 1048575);
  return true;
}

var remainder;
function div_0(a, b){
  $clinit_LongLibBase();
  return divMod(a, b, false);
}

function eq(a, b){
  $clinit_LongLibBase();
  return getL(a) == getL(b) && getM(a) == getM(b) && getH(a) == getH(b);
}

function fromDouble(value_0){
  $clinit_LongLibBase();
  var a0, a1, a2, negative, result;
  if (isNaN_0(value_0)) {
    return $clinit_LongLib$Const() , ZERO;
  }
  if (value_0 < -9223372036854775808) {
    return $clinit_LongLib$Const() , MIN_VALUE;
  }
  if (value_0 >= 9223372036854775807) {
    return $clinit_LongLib$Const() , MAX_VALUE;
  }
  negative = false;
  if (value_0 < 0) {
    negative = true;
    value_0 = -value_0;
  }
  a2 = 0;
  if (value_0 >= 17592186044416) {
    a2 = round_int(value_0 / 17592186044416);
    value_0 -= a2 * 17592186044416;
  }
  a1 = 0;
  if (value_0 >= 4194304) {
    a1 = round_int(value_0 / 4194304);
    value_0 -= a1 * 4194304;
  }
  a0 = round_int(value_0);
  result = create_5(a0, a1, a2);
  negative && negate(result);
  return result;
}

function fromInt(value_0){
  $clinit_LongLibBase();
  var rebase, result;
  if (value_0 > -129 && value_0 < 128) {
    rebase = value_0 + 128;
    jsEquals(boxedValues, null) && (boxedValues = initDim(_3Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit, makeCastMap([Q$Serializable]), Q$LongLibBase$LongEmul, 256, 0));
    result = boxedValues[rebase];
    isNull_1(result) && (result = boxedValues[rebase] = create_4(value_0));
    return result;
  }
  return create_4(value_0);
}

function gt(a, b){
  $clinit_LongLibBase();
  var signa, signb;
  signa = ~~getH(a) >> 19;
  signb = ~~getH(b) >> 19;
  return signa == 0?signb != 0 || getH(a) > getH(b) || getH(a) == getH(b) && getM(a) > getM(b) || getH(a) == getH(b) && getM(a) == getM(b) && getL(a) > getL(b):!(signb == 0 || getH(a) < getH(b) || getH(a) == getH(b) && getM(a) < getM(b) || getH(a) == getH(b) && getM(a) == getM(b) && getL(a) <= getL(b));
}

function gte_0(a, b){
  var signa, signb;
  signa = ~~getH(a) >> 19;
  signb = ~~getH(b) >> 19;
  return signa == 0?signb != 0 || getH(a) > getH(b) || getH(a) == getH(b) && getM(a) > getM(b) || getH(a) == getH(b) && getM(a) == getM(b) && getL(a) >= getL(b):!(signb == 0 || getH(a) < getH(b) || getH(a) == getH(b) && getM(a) < getM(b) || getH(a) == getH(b) && getM(a) == getM(b) && getL(a) < getL(b));
}

function lt(a, b){
  $clinit_LongLibBase();
  return !gte_0(a, b);
}

function mul(a, b){
  $clinit_LongLibBase();
  var a0, a1, a2, a3, a4, b0, b1, b2, b3, b4, c0, c00, c01, c1, c10, c11, c12, c13, c2, c22, c23, c24, p0, p1, p2, p3, p4;
  a0 = getL(a) & 8191;
  a1 = ~~getL(a) >> 13 | (getM(a) & 15) << 9;
  a2 = ~~getM(a) >> 4 & 8191;
  a3 = ~~getM(a) >> 17 | (getH(a) & 255) << 5;
  a4 = ~~(getH(a) & 1048320) >> 8;
  b0 = getL(b) & 8191;
  b1 = ~~getL(b) >> 13 | (getM(b) & 15) << 9;
  b2 = ~~getM(b) >> 4 & 8191;
  b3 = ~~getM(b) >> 17 | (getH(b) & 255) << 5;
  b4 = ~~(getH(b) & 1048320) >> 8;
  p0 = a0 * b0;
  p1 = a1 * b0;
  p2 = a2 * b0;
  p3 = a3 * b0;
  p4 = a4 * b0;
  if (b1 != 0) {
    p1 += a0 * b1;
    p2 += a1 * b1;
    p3 += a2 * b1;
    p4 += a3 * b1;
  }
  if (b2 != 0) {
    p2 += a0 * b2;
    p3 += a1 * b2;
    p4 += a2 * b2;
  }
  if (b3 != 0) {
    p3 += a0 * b3;
    p4 += a1 * b3;
  }
  b4 != 0 && (p4 += a0 * b4);
  c00 = p0 & 4194303;
  c01 = (p1 & 511) << 13;
  c0 = c00 + c01;
  c10 = ~~p0 >> 22;
  c11 = ~~p1 >> 9;
  c12 = (p2 & 262143) << 4;
  c13 = (p3 & 31) << 17;
  c1 = c10 + c11 + c12 + c13;
  c22 = ~~p2 >> 18;
  c23 = ~~p3 >> 5;
  c24 = (p4 & 4095) << 8;
  c2 = c22 + c23 + c24;
  c1 += ~~c0 >> 22;
  c0 &= 4194303;
  c2 += ~~c1 >> 22;
  c1 &= 4194303;
  c2 &= 1048575;
  return create_5(c0, c1, c2);
}

function neg(a){
  $clinit_LongLibBase();
  var neg0, neg1, neg2;
  neg0 = ~getL(a) + 1 & 4194303;
  neg1 = ~getM(a) + (neg0 == 0?1:0) & 4194303;
  neg2 = ~getH(a) + (neg0 == 0 && neg1 == 0?1:0) & 1048575;
  return create_5(neg0, neg1, neg2);
}

function shl(a, n){
  var res0, res1, res2;
  n &= 63;
  if (n < 22) {
    res0 = getL(a) << n;
    res1 = getM(a) << n | ~~getL(a) >> 22 - n;
    res2 = getH(a) << n | ~~getM(a) >> 22 - n;
  }
   else if (n < 44) {
    res0 = 0;
    res1 = getL(a) << n - 22;
    res2 = getM(a) << n - 22 | ~~getL(a) >> 44 - n;
  }
   else {
    res0 = 0;
    res1 = 0;
    res2 = getL(a) << n - 44;
  }
  return create_5(res0 & 4194303, res1 & 4194303, res2 & 1048575);
}

function shr(a, n){
  var a2, negative, res0, res1, res2;
  n &= 63;
  a2 = getH(a);
  negative = (a2 & 524288) != 0;
  negative && (a2 |= -1048576);
  if (n < 22) {
    res2 = ~~a2 >> n;
    res1 = ~~getM(a) >> n | a2 << 22 - n;
    res0 = ~~getL(a) >> n | getM(a) << 22 - n;
  }
   else if (n < 44) {
    res2 = negative?1048575:0;
    res1 = ~~a2 >> n - 22;
    res0 = ~~getM(a) >> n - 22 | a2 << 44 - n;
  }
   else {
    res2 = negative?1048575:0;
    res1 = negative?4194303:0;
    res0 = ~~a2 >> n - 44;
  }
  return create_5(res0 & 4194303, res1 & 4194303, res2 & 1048575);
}

function shru(a, n){
  $clinit_LongLibBase();
  var a2, res0, res1, res2;
  n &= 63;
  a2 = getH(a) & 1048575;
  if (n < 22) {
    res2 = ~~a2 >>> n;
    res1 = ~~getM(a) >> n | a2 << 22 - n;
    res0 = ~~getL(a) >> n | getM(a) << 22 - n;
  }
   else if (n < 44) {
    res2 = 0;
    res1 = ~~a2 >>> n - 22;
    res0 = ~~getM(a) >> n - 22 | getH(a) << 44 - n;
  }
   else {
    res2 = 0;
    res1 = 0;
    res0 = ~~a2 >>> n - 44;
  }
  return create_5(res0 & 4194303, res1 & 4194303, res2 & 1048575);
}

function sub_0(a, b){
  $clinit_LongLibBase();
  var sum0, sum1, sum2;
  sum0 = getL(a) - getL(b);
  sum1 = getM(a) - getM(b) + (~~sum0 >> 22);
  sum2 = getH(a) - getH(b) + (~~sum1 >> 22);
  return create_5(sum0 & 4194303, sum1 & 4194303, sum2 & 1048575);
}

function toDouble(a){
  $clinit_LongLibBase();
  if (eq(a, ($clinit_LongLib$Const() , MIN_VALUE))) {
    return -9223372036854775808;
  }
  if (lt(a, ($clinit_LongLib$Const() , ZERO))) {
    return -toDoubleHelper(neg(a));
  }
  return toDoubleHelper(a);
}

function toInt(a){
  $clinit_LongLibBase();
  return getL(a) | getM(a) << 22;
}

function xor(a, b){
  $clinit_LongLibBase();
  return create_5(getL(a) ^ getL(b), getM(a) ^ getM(b), getH(a) ^ getH(b));
}

var boxedValues;
function $clinit_LongLib$Const(){
  $clinit_LongLib$Const = nullMethod;
  MAX_VALUE = create_5(4194303, 4194303, 524287);
  MIN_VALUE = create_5(0, 0, 524288);
  ONE = fromInt(1);
  fromInt(2);
  ZERO = fromInt(0);
}

var MAX_VALUE, MIN_VALUE, ONE, ZERO;
function $$init_216(){
}

function LongLibBase$LongEmul_0(){
  Object_1.call(this);
  $$init_216();
}

defineSeed(276, 1, makeCastMap([Q$LongLibBase$LongEmul]), LongLibBase$LongEmul_0);
function isStatsAvailable(){
  return !!$stats;
}

function onModuleStart(mainClassName){
  return $stats({moduleName:$moduleName, sessionId:$sessionId, subSystem:'startup', evtGroup:'moduleStartup', millis:(new Date).getTime(), type:'onModuleLoadStart', className:mainClassName});
}

function getCastableTypeMap(o){
  return o.castableTypeMap$;
}

function getTypeMarker(o){
  return o.typeMarker$;
}

function setCastableTypeMap(o, castableTypeMap){
  o.castableTypeMap$ = castableTypeMap;
}

function $$init_218(){
}

function $getFormatter(this$static){
  return this$static.formatter;
}

function $getLevel(this$static){
  if (isNotNull(this$static.level)) {
    return this$static.level;
  }
  return $clinit_Level() , ALL;
}

function $isLoggable(this$static, record){
  return $getLevel(this$static).intValue() <= $getLevel_1(record).intValue();
}

function $setFormatter(this$static, newFormatter){
  this$static.formatter = newFormatter;
}

function $setLevel(this$static, newLevel){
  this$static.level = newLevel;
}

function Handler_0(){
  Object_1.call(this);
  $$init_218();
}

defineSeed(281, 1, makeCastMap([Q$Handler]));
function $$init_219(){
}

function $error_0(message){
  window.console.error(message);
}

function $info(message){
  window.console.info(message);
}

function $isSupported_0(){
  return window.console != null && window.console.firebug == null;
}

function $log_0(message){
  window.console.log(message);
}

function $warn(message){
  window.console.warn(message);
}

function ConsoleLogHandler_0(){
  Handler_0.call(this);
  $$init_219();
  $setFormatter(this, new TextLogFormatter_0(true));
  $setLevel(this, ($clinit_Level() , ALL));
}

defineSeed(280, 281, makeCastMap([Q$Handler]), ConsoleLogHandler_0);
_.publish = function publish(record){
  var msg, val;
  if (!$isSupported_0() || !$isLoggable(this, record)) {
    return;
  }
  msg = $getFormatter(this).format(record);
  val = $getLevel_1(record).intValue();
  val >= ($clinit_Level() , SEVERE).intValue()?$error_0(msg):val >= ($clinit_Level() , WARNING).intValue()?$warn(msg):val >= ($clinit_Level() , INFO).intValue()?$info(msg):$log_0(msg);
}
;
function $$init_220(){
}

function DefaultLevel$Fine_0(){
  Object_1.call(this);
  $$init_220();
}

defineSeed(282, 1, {}, DefaultLevel$Fine_0);
_.getLevel = function getLevel(){
  return $clinit_Level() , FINE;
}
;
function $$init_221(){
}

function $isSupported_1(){
  return false;
}

function DevelopmentModeLogHandler_0(){
  Handler_0.call(this);
  $$init_221();
  $setFormatter(this, new TextLogFormatter_0(false));
  $setLevel(this, ($clinit_Level() , ALL));
}

defineSeed(283, 281, makeCastMap([Q$Handler]), DevelopmentModeLogHandler_0);
_.publish = function publish_0(record){
  var msg;
  if (!$isSupported_1() || !$isLoggable(this, record)) {
    return;
  }
  msg = $getFormatter(this).format(record);
  log_2(msg, $getThrown_0(record));
}
;
function $$init_222(){
}

function HasWidgetsLogHandler_0(container){
  Handler_0.call(this);
  $$init_222();
  this.widgetContainer = container;
  $setFormatter(this, new HtmlLogFormatter_0(true));
  $setLevel(this, ($clinit_Level() , ALL));
}

defineSeed(284, 281, makeCastMap([Q$Handler]), HasWidgetsLogHandler_0);
_.publish = function publish_1(record){
  var formatter, msg;
  if (!$isLoggable(this, record)) {
    return;
  }
  formatter = $getFormatter(this);
  msg = formatter.format(record);
  instanceOf(formatter, Q$HtmlLogFormatter)?this.widgetContainer.add_1(new HTML_1(msg)):this.widgetContainer.add_1(new Label_2(msg));
}
;
function $$init_223(){
}

function Formatter_0(){
  Object_1.call(this);
  $$init_223();
}

defineSeed(287, 1, {});
function $$init_224(){
}

function $getRecordInfo(event_0, newline){
  var date, s;
  date = new Date_2($getMillis(event_0));
  s = new StringBuilder_0;
  $append_3(s, $toString_3(date));
  $append_3(s, ' ');
  $append_3(s, $getLoggerName(event_0));
  $append_3(s, newline);
  $append_3(s, $getLevel_1(event_0).getName());
  $append_3(s, ': ');
  return $toString_2(s);
}

function FormatterImpl_0(){
  Formatter_0.call(this);
  $$init_224();
}

defineSeed(286, 287, {});
function $$init_225(){
}

function $getColor(logLevel){
  if (logLevel == ($clinit_Level() , OFF).intValue()) {
    return '#000';
  }
  if (logLevel >= ($clinit_Level() , SEVERE).intValue()) {
    return '#F00';
  }
  if (logLevel >= ($clinit_Level() , WARNING).intValue()) {
    return '#E56717';
  }
  if (logLevel >= ($clinit_Level() , INFO).intValue()) {
    return '#20b000';
  }
  if (logLevel >= ($clinit_Level() , CONFIG).intValue()) {
    return '#2B60DE';
  }
  if (logLevel >= ($clinit_Level() , FINE).intValue()) {
    return '#F0F';
  }
  if (logLevel >= ($clinit_Level() , FINER).intValue()) {
    return '#F0F';
  }
  if (logLevel >= ($clinit_Level() , FINEST).intValue()) {
    return '#F0F';
  }
  return '#000';
}

function $getEscaped(text_0){
  text_0 = $replaceAll(text_0, '<', '&lt;');
  text_0 = $replaceAll(text_0, '>', '&gt;');
  text_0 = $replaceAll(text_0, '\t', '&nbsp;&nbsp;&nbsp;');
  return text_0;
}

function $getHtmlPrefix(event_0){
  var prefix;
  prefix = new StringBuilder_0;
  $append_3(prefix, "<span style='color:");
  $append_3(prefix, $getColor($getLevel_1(event_0).intValue()));
  $append_3(prefix, "'>");
  $append_3(prefix, '<code>');
  return $toString_2(prefix);
}

function $getHtmlSuffix(){
  return '<\/code><\/span>';
}

function HtmlLogFormatter_0(showStackTraces){
  FormatterImpl_0.call(this);
  $$init_225();
  this.showStackTraces = showStackTraces;
}

defineSeed(285, 286, makeCastMap([Q$HtmlLogFormatter]), HtmlLogFormatter_0);
_.format = function format(event_0){
  var html;
  html = new StringBuilder_0;
  $append_3(html, $getHtmlPrefix(event_0));
  $append_3(html, $getRecordInfo(event_0, ' '));
  $append_3(html, $getEscaped($getMessage_1(event_0)));
  this.showStackTraces && isNotNull($getThrown_0(event_0)) && $printStackTrace($getThrown_0(event_0), new HtmlLogFormatter$1_0(this, html, html));
  $append_3(html, $getHtmlSuffix());
  return $toString_2(html);
}
;
_.showStackTraces = false;
function $$init_226(){
}

function OutputStream_0(){
  Object_1.call(this);
  $$init_226();
}

defineSeed(292, 1, {});
function $$init_227(){
}

function FilterOutputStream_0(){
  OutputStream_0.call(this);
  $$init_227();
}

defineSeed(291, 292, {}, FilterOutputStream_0);
function $$init_228(){
}

function PrintStream_0(){
  FilterOutputStream_0.call(this);
  $$init_228();
}

defineSeed(290, 291, {});
_.print_0 = function print_0(s){
}
;
_.println = function println(x_0){
}
;
_.println_0 = function println_0(s){
}
;
function $$init_229(){
}

function StackTracePrintStream_0(builder){
  PrintStream_0.call(this, new FilterOutputStream_0);
  $$init_229();
  this.builder = builder;
}

defineSeed(289, 290, {}, StackTracePrintStream_0);
_.append_2 = function append_1(text_0){
  $append_3(this.builder, text_0);
}
;
_.newLine = function newLine(){
  $append_3(this.builder, '\n');
}
;
_.print_0 = function print_1(str){
  this.append_2(str);
}
;
_.println = function println_1(obj){
  this.append_2(valueOf_16(obj));
  this.newLine();
}
;
_.println_0 = function println_2(str){
  this.append_2(str);
  this.newLine();
}
;
function $$init_230(){
}

function HtmlLogFormatter$1_0(this$0, $anonymous0, val$html){
  this , this$0;
  this.val$html = val$html;
  StackTracePrintStream_0.call(this, $anonymous0);
  $$init_230();
}

defineSeed(288, 289, {}, HtmlLogFormatter$1_0);
_.append_2 = function append_2(str){
  $append_3(this.val$html, $getEscaped(str));
}
;
_.newLine = function newLine_0(){
  $append_3(this.val$html, '<br>');
}
;
function $clinit_LogConfiguration(){
  $clinit_LogConfiguration = nullMethod;
  impl_3 = new LogConfiguration$LogConfigurationImplRegular_0;
}

function $$init_231(){
}

function $onModuleLoad(this$static){
  var log_0;
  impl_3.configureClientSideLogging();
  if (impl_3.loggingIsEnabled()) {
    if (isNull_1(getUncaughtExceptionHandler())) {
      log_0 = getLogger($getName_2(Lcom_google_gwt_logging_client_LogConfiguration_2_classLit));
      setUncaughtExceptionHandler(new LogConfiguration$1_0(this$static, log_0));
    }
  }
}

function LogConfiguration_0(){
  $clinit_LogConfiguration();
  Object_1.call(this);
  $$init_231();
}

function loggingIsEnabled(){
  $clinit_LogConfiguration();
  if (isNull_1(impl_3)) {
    return true;
  }
  return impl_3.loggingIsEnabled();
}

defineSeed(293, 1, {}, LogConfiguration_0);
var impl_3;
function $$init_232(){
}

function LogConfiguration$1_0(this$0, val$log){
  this , this$0;
  this.val$log = val$log;
  Object_1.call(this);
  $$init_232();
}

defineSeed(294, 1, {}, LogConfiguration$1_0);
_.onUncaughtException = function onUncaughtException(e){
  $log_5(this.val$log, ($clinit_Level() , SEVERE), e.getMessage(), e);
}
;
function $$init_233(){
}

function $addHandlerIfNotNull(l_0, h_0){
  instanceOf(h_0, Q$NullLogHandler) || $addHandler_1(l_0, h_0);
}

function $parseLevel(s){
  if (jsEquals(s, null)) {
    return null;
  }
  if ($equals_2(s, ($clinit_Level() , OFF).getName())) {
    return $clinit_Level() , OFF;
  }
   else if ($equals_2(s, ($clinit_Level() , SEVERE).getName())) {
    return $clinit_Level() , SEVERE;
  }
   else if ($equals_2(s, ($clinit_Level() , WARNING).getName())) {
    return $clinit_Level() , WARNING;
  }
   else if ($equals_2(s, ($clinit_Level() , INFO).getName())) {
    return $clinit_Level() , INFO;
  }
   else if ($equals_2(s, ($clinit_Level() , CONFIG).getName())) {
    return $clinit_Level() , CONFIG;
  }
   else if ($equals_2(s, ($clinit_Level() , FINE).getName())) {
    return $clinit_Level() , FINE;
  }
   else if ($equals_2(s, ($clinit_Level() , FINER).getName())) {
    return $clinit_Level() , FINER;
  }
   else if ($equals_2(s, ($clinit_Level() , FINEST).getName())) {
    return $clinit_Level() , FINEST;
  }
   else if ($equals_2(s, ($clinit_Level() , ALL).getName())) {
    return $clinit_Level() , ALL;
  }
  return null;
}

function $setDefaultHandlers(l_0){
  var console_0, dev, firebug, loggingWidget, remote, system;
  console_0 = new ConsoleLogHandler_0;
  $addHandlerIfNotNull(l_0, console_0);
  dev = new DevelopmentModeLogHandler_0;
  $addHandlerIfNotNull(l_0, dev);
  firebug = new NullLogHandler_0;
  $addHandlerIfNotNull(l_0, firebug);
  system = new NullLogHandler_0;
  $addHandlerIfNotNull(l_0, system);
  remote = new NullLogHandler_0;
  $addHandlerIfNotNull(l_0, remote);
  loggingWidget = new NullLoggingPopup_0;
  instanceOf(loggingWidget, Q$NullLoggingPopup) || $addHandlerIfNotNull(l_0, new HasWidgetsLogHandler_0(loggingWidget));
}

function $setLevels(l_0){
  var defaultLevel, paramLevel;
  paramLevel = $parseLevel(getParameter('logLevel'));
  if (isNotNull(paramLevel)) {
    $setLevel_0(l_0, paramLevel);
  }
   else {
    defaultLevel = new DefaultLevel$Fine_0;
    $setLevel_0(l_0, defaultLevel.getLevel());
  }
}

function LogConfiguration$LogConfigurationImplRegular_0(){
  Object_1.call(this);
  $$init_233();
}

defineSeed(295, 1, {}, LogConfiguration$LogConfigurationImplRegular_0);
_.configureClientSideLogging = function configureClientSideLogging(){
  if (!isClient()) {
    debugger;
    throw makeAssertionError();
  }
  this.root = getLogger('');
  $setUseParentHandlers(this.root, false);
  $setLevels(this.root);
  $setDefaultHandlers(this.root);
}
;
_.loggingIsEnabled = function loggingIsEnabled_0(){
  return true;
}
;
function $$init_234(){
}

function NullLogHandler_0(){
  Handler_0.call(this);
  $$init_234();
}

defineSeed(296, 281, makeCastMap([Q$NullLogHandler, Q$Handler]), NullLogHandler_0);
_.publish = function publish_2(record){
}
;
function $$init_235(){
}

function NullLoggingPopup_0(){
  Object_1.call(this);
  $$init_235();
}

defineSeed(297, 1, makeCastMap([Q$NullLoggingPopup]), NullLoggingPopup_0);
_.add_1 = function add_2(w){
}
;
_.iterator = function iterator_1(){
  return null;
}
;
_.remove_0 = function remove_1(w){
  return false;
}
;
function $$init_236(){
}

function TextLogFormatter_0(showStackTraces){
  FormatterImpl_0.call(this);
  $$init_236();
  this.showStackTraces = showStackTraces;
}

defineSeed(298, 286, {}, TextLogFormatter_0);
_.format = function format_0(event_0){
  var message;
  message = new StringBuilder_0;
  $append_3(message, $getRecordInfo(event_0, '\n'));
  $append_3(message, $getMessage_1(event_0));
  this.showStackTraces && isNotNull($getThrown_0(event_0)) && $printStackTrace($getThrown_0(event_0), new StackTracePrintStream_0(message));
  return $toString_2(message);
}
;
_.showStackTraces = false;
function $$init_237(){
}

function LevelImplRegular_0(){
  Object_1.call(this);
  $$init_237();
}

defineSeed(299, 1, {}, LevelImplRegular_0);
function $$init_238(this$static){
}

function $getEffectiveLevel(this$static){
  var effectiveLevel, logger;
  if (isNotNull(this$static.level)) {
    return this$static.level;
  }
  logger = $getParent(this$static);
  while (isNotNull(logger)) {
    effectiveLevel = $getLevel_0(logger);
    if (isNotNull(effectiveLevel)) {
      return effectiveLevel;
    }
    logger = $getParent_0(logger);
  }
  return $clinit_Level() , INFO;
}

function $getHandlers(this$static){
  return dynamicCast(this$static.handlers.toArray_0(initDim(_3Ljava_util_logging_Handler_2_classLit, makeCastMap([Q$Serializable, Q$Handler_$1]), Q$Handler, this$static.handlers.size_1(), 0)), Q$Handler_$1);
}

function $getName_0(this$static){
  return this$static.name_0;
}

function $getParent(this$static){
  return this$static.parent_0;
}

function $getUseParentHandlers(this$static){
  return this$static.useParentHandlers;
}

function $isLoggable_0(this$static, messageLevel){
  return $getEffectiveLevel(this$static).intValue() <= messageLevel.intValue();
}

function $log_1(this$static, level, msg){
  $log_2(this$static, level, msg, null);
}

function $log_2(this$static, level, msg, thrown){
  var record;
  if ($isLoggable_0(this$static, level)) {
    record = new LogRecord_0(level, msg);
    $setThrown(record, thrown);
    $setLoggerName(record, $getName_0(this$static));
    $log_3(this$static, record);
  }
}

function $log_3(this$static, record){
  var handler, handler$array, handler$array0, handler$index, handler$index0, handler$max, handler$max0, logger;
  if ($isLoggable_0(this$static, $getLevel_1(record))) {
    for (handler$array0 = $getHandlers(this$static) , handler$index0 = 0 , handler$max0 = handler$array0.length; handler$index0 < handler$max0; ++handler$index0) {
      handler = handler$array0[handler$index0];
      handler.publish(record);
    }
    logger = $getUseParentHandlers(this$static)?$getParent(this$static):null;
    while (isNotNull(logger)) {
      for (handler$array = $getHandlers_0(logger) , handler$index = 0 , handler$max = handler$array.length; handler$index < handler$max; ++handler$index) {
        handler = handler$array[handler$index];
        handler.publish(record);
      }
      logger = $getUseParentHandlers_0(logger)?$getParent_0(logger):null;
    }
  }
}

function LoggerImplRegular_0(){
  Object_1.call(this);
  $$init_238(this);
  this.useParentHandlers = true;
  this.handlers = new ArrayList_0;
}

defineSeed(300, 1, {}, LoggerImplRegular_0);
_.addHandler = function addHandler(handler){
  this.handlers.add_0(handler);
}
;
_.getHandlers = function getHandlers(){
  return $getHandlers(this);
}
;
_.getLevel = function getLevel_0(){
  return this.level;
}
;
_.getLoggerHelper = function getLoggerHelper(name_0){
  var logger, manager, newLogger;
  manager = getLogManager();
  logger = $getLogger(manager, name_0);
  if (isNull_1(logger)) {
    newLogger = new LoggerWithExposedConstructor_0(name_0);
    $addLogger(manager, newLogger);
    return newLogger;
  }
  return logger;
}
;
_.getName = function getName(){
  return $getName_0(this);
}
;
_.getParent = function getParent(){
  return $getParent(this);
}
;
_.getUseParentHandlers = function getUseParentHandlers(){
  return $getUseParentHandlers(this);
}
;
_.info_0 = function info(msg){
  $log_1(this, ($clinit_Level() , INFO), msg);
}
;
_.log_1 = function log_7(level, msg){
  $log_1(this, level, msg);
}
;
_.log_2 = function log_8(level, msg, thrown){
  $log_2(this, level, msg, thrown);
}
;
_.setLevel = function setLevel(newLevel){
  this.level = newLevel;
}
;
_.setName = function setName(newName){
  this.name_0 = newName;
}
;
_.setParent = function setParent(newParent){
  isNotNull(newParent) && (this.parent_0 = newParent);
}
;
_.setUseParentHandlers = function setUseParentHandlers(newUseParentHandlers){
  this.useParentHandlers = newUseParentHandlers;
}
;
_.level = null;
_.useParentHandlers = false;
function $clinit_Logger(){
  $clinit_Logger = nullMethod;
  staticImpl = new LoggerImplRegular_0;
}

function $$init_239(){
}

function $addHandler_1(this$static, handler){
  this$static.impl.addHandler(handler);
}

function $getHandlers_0(this$static){
  return this$static.impl.getHandlers();
}

function $getLevel_0(this$static){
  return this$static.impl.getLevel();
}

function $getName_1(this$static){
  return this$static.impl.getName();
}

function $getParent_0(this$static){
  return this$static.impl.getParent();
}

function $getUseParentHandlers_0(this$static){
  return this$static.impl.getUseParentHandlers();
}

function $info_0(this$static, msg){
  this$static.impl.info_0(msg);
}

function $log_4(this$static, level, msg){
  this$static.impl.log_1(level, msg);
}

function $log_5(this$static, level, msg, thrown){
  this$static.impl.log_2(level, msg, thrown);
}

function $setLevel_0(this$static, newLevel){
  this$static.impl.setLevel(newLevel);
}

function $setParent(this$static, newParent){
  this$static.impl.setParent(newParent);
}

function $setUseParentHandlers(this$static, newUseParentHandlers){
  this$static.impl.setUseParentHandlers(newUseParentHandlers);
}

function Logger_0(name_0){
  $clinit_Logger();
  Object_1.call(this);
  $$init_239();
  this.impl = new LoggerImplRegular_0;
  this.impl.setName(name_0);
}

function getLogger(name_0){
  $clinit_Logger();
  return staticImpl.getLoggerHelper(name_0);
}

defineSeed(302, 1, makeCastMap([Q$Logger]), Logger_0);
var staticImpl;
function $$init_240(){
}

function LoggerWithExposedConstructor_0(name_0){
  $clinit_Logger();
  Logger_0.call(this, name_0);
  $$init_240();
}

defineSeed(301, 302, makeCastMap([Q$Logger]), LoggerWithExposedConstructor_0);
function $replace(this$static, input_0, replacement){
  return input_0.replace(this$static, replacement);
}

function $split(this$static, input_0){
  return input_0.split(this$static);
}

function $test(this$static, input_0){
  return this$static.test(input_0);
}

function compile(pattern){
  return new RegExp(pattern);
}

function compile_0(pattern, flags){
  return new RegExp(pattern, flags);
}

function $$init_241(){
}

function DataResourcePrototype_0(name_0, uri_0){
  Object_1.call(this);
  $$init_241();
  this , name_0;
  this.uri_0 = uri_0;
}

defineSeed(305, 1, {}, DataResourcePrototype_0);
_.getSafeUri = function getSafeUri(){
  return this.uri_0;
}
;
function $$init_242(){
}

function ImageResourcePrototype_0(name_0, url_0, left, top_0, width_0, height, animated, lossy){
  Object_1.call(this);
  $$init_242();
  this , name_0;
  this.left_0 = left;
  this.top_0 = top_0;
  this.height_0 = height;
  this.width_0 = width_0;
  this.url_0 = url_0;
  this , animated;
  this , lossy;
}

defineSeed(306, 1, {});
_.getHeight = function getHeight(){
  return this.height_0;
}
;
_.getLeft = function getLeft(){
  return this.left_0;
}
;
_.getSafeUri = function getSafeUri_0(){
  return this.url_0;
}
;
_.getTop = function getTop(){
  return this.top_0;
}
;
_.getWidth = function getWidth(){
  return this.width_0;
}
;
_.height_0 = 0;
_.left_0 = 0;
_.top_0 = 0;
_.width_0 = 0;
function $$init_243(){
}

function ImageResourcePrototype$Bundle_0(name_0, url_0, left, top_0, width_0, height, animated, lossy){
  ImageResourcePrototype_0.call(this, name_0, url_0, left, top_0, width_0, height, animated, lossy);
  $$init_243();
}

defineSeed(307, 306, {}, ImageResourcePrototype$Bundle_0);
function $$init_244(this$static){
  this$static.sb = new StringBuilder_0;
}

function $append(this$static, styles){
  $append_3(this$static.sb, styles.asString());
  return this$static;
}

function $height(this$static, value_0, unit){
  return $append(this$static, forHeight(value_0, unit));
}

function $toSafeStyles(this$static){
  return new SafeStylesString_0($toString_2(this$static.sb));
}

function $trustedNameAndValue(this$static, name_0, value_0){
  return $append(this$static, fromTrustedNameAndValue_0(name_0, value_0));
}

function $width(this$static, value_0, unit){
  return $append(this$static, forWidth(value_0, unit));
}

function SafeStylesBuilder_0(){
  Object_1.call(this);
  $$init_244(this);
}

defineSeed(308, 1, {}, SafeStylesBuilder_0);
function maybeCheckValidStyleName(){
}

function maybeCheckValidStyleValue(){
}

function $$init_245(){
}

function SafeStylesString_0(css){
  Object_1.call(this);
  $$init_245();
  verifySafeStylesConstraints(css);
  this.css = css;
}

defineSeed(310, 1, makeCastMap([Q$SafeStyles, Q$Serializable]), SafeStylesString_0);
_.asString = function asString(){
  return this.css;
}
;
_.equals$ = function equals_6(obj){
  if (!instanceOf(obj, Q$SafeStyles)) {
    return false;
  }
  return $equals_2(this.css, dynamicCast(obj, Q$SafeStyles).asString());
}
;
_.hashCode$ = function hashCode_8(){
  return $hashCode_2(this.css);
}
;
function forHeight(value_0, unit){
  return fromTrustedNameAndValue('height', value_0, unit);
}

function forWidth(value_0, unit){
  return fromTrustedNameAndValue('width', value_0, unit);
}

function fromTrustedNameAndValue(name_0, value_0, unit){
  maybeCheckValidStyleName();
  return new SafeStylesString_0(name_0 + ':' + value_0 + unit.getType() + ';');
}

function fromTrustedNameAndValue_0(name_0, value_0){
  maybeCheckValidStyleName();
  maybeCheckValidStyleValue();
  return fromTrustedString(name_0 + ':' + value_0 + ';');
}

function fromTrustedString(s){
  return new SafeStylesString_0(s);
}

function verifySafeStylesConstraints(styles){
  if (jsEquals(styles, null)) {
    throw new NullPointerException_1('css is null');
  }
  if (!($length_1($trim(styles)) == 0 || $endsWith(styles, ';'))) {
    debugger;
    throw makeAssertionError_Object("Invalid CSS Property: '" + styles + "'. CSS properties must be an empty string or end with a semi-colon (;).");
  }
  if (!(!$contains_0(styles, '<') && !$contains_0(styles, '>'))) {
    debugger;
    throw makeAssertionError_Object("Invalid CSS Property: '" + styles + "'. CSS should not contain brackets (< or >).");
  }
}

function $$init_246(){
}

function OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(html){
  Object_1.call(this);
  $$init_246();
  if (jsEquals(html, null)) {
    throw new NullPointerException_1('html is null');
  }
  this.html = html;
}

defineSeed(312, 1, makeCastMap([Q$SafeHtml, Q$Serializable]), OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0);
_.asString = function asString_0(){
  return this.html;
}
;
_.equals$ = function equals_7(obj){
  if (!instanceOf(obj, Q$SafeHtml)) {
    return false;
  }
  return $equals_2(this.html, dynamicCast(obj, Q$SafeHtml).asString());
}
;
_.hashCode$ = function hashCode_9(){
  return $hashCode_2(this.html);
}
;
function $$init_247(this$static){
  this$static.sb = new StringBuilder_0;
}

function $appendEscaped(this$static, text_0){
  $append_3(this$static.sb, htmlEscape(text_0));
  return this$static;
}

function $toSafeHtml(this$static){
  return new SafeHtmlString_0($toString_2(this$static.sb));
}

function SafeHtmlBuilder_0(){
  Object_1.call(this);
  $$init_247(this);
}

defineSeed(313, 1, {}, SafeHtmlBuilder_0);
function $$init_248(){
}

function $asString(this$static){
  return this$static.html;
}

function SafeHtmlString_0(html){
  Object_1.call(this);
  $$init_248();
  if (jsEquals(html, null)) {
    throw new NullPointerException_1('html is null');
  }
  this.html = html;
}

defineSeed(314, 1, makeCastMap([Q$SafeHtml, Q$Serializable]), SafeHtmlString_0);
_.asString = function asString_1(){
  return $asString(this);
}
;
_.equals$ = function equals_8(obj){
  if (!instanceOf(obj, Q$SafeHtml)) {
    return false;
  }
  return $equals_2(this.html, dynamicCast(obj, Q$SafeHtml).asString());
}
;
_.hashCode$ = function hashCode_10(){
  return $hashCode_2(this.html);
}
;
_.toString$ = function toString_15(){
  return 'safe: "' + $asString(this) + '"';
}
;
function $clinit_SafeHtmlUtils(){
  $clinit_SafeHtmlUtils = nullMethod;
  '[a-z]+|#[0-9]+|#x[0-9a-fA-F]+';
  new SafeHtmlString_0('');
  AMP_RE = compile_0('&', 'g');
  GT_RE = compile_0('>', 'g');
  LT_RE = compile_0('<', 'g');
  SQUOT_RE = compile_0("'", 'g');
  QUOT_RE = compile_0('"', 'g');
}

function htmlEscape(s){
  $clinit_SafeHtmlUtils();
  $indexOf_3(s, '&') != -1 && (s = $replace(AMP_RE, s, '&amp;'));
  $indexOf_3(s, '<') != -1 && (s = $replace(LT_RE, s, '&lt;'));
  $indexOf_3(s, '>') != -1 && (s = $replace(GT_RE, s, '&gt;'));
  $indexOf_3(s, '"') != -1 && (s = $replace(QUOT_RE, s, '&quot;'));
  $indexOf_3(s, "'") != -1 && (s = $replace(SQUOT_RE, s, '&#39;'));
  return s;
}

var AMP_RE, GT_RE, LT_RE, QUOT_RE, SQUOT_RE;
function maybeCheckValidUri(){
}

function $$init_249(){
}

function SafeUriString_0(uri_0){
  Object_1.call(this);
  $$init_249();
  if (jsEquals(uri_0, null)) {
    throw new NullPointerException_1('uri is null');
  }
  this.uri_0 = uri_0;
}

defineSeed(317, 1, makeCastMap([Q$SafeUri]), SafeUriString_0);
_.asString = function asString_2(){
  return this.uri_0;
}
;
_.equals$ = function equals_9(obj){
  if (!instanceOf(obj, Q$SafeUri)) {
    return false;
  }
  return $equals_2(this.uri_0, dynamicCast(obj, Q$SafeUri).asString());
}
;
_.hashCode$ = function hashCode_11(){
  return $hashCode_2(this.uri_0);
}
;
function $clinit_UriUtils(){
  $clinit_UriUtils = nullMethod;
  ";/?:@&=+$,-_.!~*'()#[]";
  isScript_0()?compile_0('%5B', 'g'):null;
  isScript_0()?compile_0('%5D', 'g'):null;
}

function fromTrustedString_0(s){
  $clinit_UriUtils();
  maybeCheckValidUri();
  return new SafeUriString_0(s);
}

function unsafeCastFromUntrustedString(s){
  $clinit_UriUtils();
  return new SafeUriString_0(s);
}

function $$init_250(){
}

function AbstractRenderer_0(){
  Object_1.call(this);
  $$init_250();
}

defineSeed(319, 1, {});
function $$init_251(){
}

function $parse(object){
  return object.toString$();
}

function PassthroughParser_0(){
  Object_1.call(this);
  $$init_251();
}

function instance_2(){
  isNull_1(INSTANCE_2) && (INSTANCE_2 = new PassthroughParser_0);
  return INSTANCE_2;
}

defineSeed(320, 1, {}, PassthroughParser_0);
_.parse_0 = function parse_1(object){
  return $parse(object);
}
;
var INSTANCE_2;
function $$init_252(){
}

function $render(object){
  return object;
}

function PassthroughRenderer_0(){
  AbstractRenderer_0.call(this);
  $$init_252();
}

function instance_3(){
  isNull_1(INSTANCE_3) && (INSTANCE_3 = new PassthroughRenderer_0);
  return INSTANCE_3;
}

defineSeed(321, 319, {}, PassthroughRenderer_0);
_.render = function render_0(object){
  return $render(dynamicCast(object, Q$String));
}
;
var INSTANCE_3;
function $$init_253(){
}

function $getListener(this$static){
  return this$static.listener;
}

function BaseListenerWrapper_0(listener){
  Object_1.call(this);
  $$init_253();
  this.listener = listener;
}

defineSeed(322, 1, makeCastMap([Q$EventHandler]));
function $clinit_DOM(){
  $clinit_DOM = nullMethod;
  impl_4 = new DOMImplWebkit_2;
}

function appendChild(parent_0, child){
  $clinit_DOM();
  if (isPotential(parent_0)) {
    debugger;
    throw makeAssertionError_Object('Cannot append to a PotentialElement');
  }
  $appendChild(parent_0, resolve(child));
}

function appendChild_0(parent_0, child){
  $clinit_DOM();
  appendChild(parent_0, child);
}

function asOld(elem){
  $clinit_DOM();
  return elem;
}

function createDiv(){
  $clinit_DOM();
  return $cast($createDivElement(get_2()));
}

function createElement(tagName){
  $clinit_DOM();
  return $cast($createElement_0(get_2(), tagName));
}

function createIFrame_0(){
  $clinit_DOM();
  return $cast($createIFrameElement(get_2()));
}

function createTBody(){
  $clinit_DOM();
  return $cast($createTBodyElement(get_2()));
}

function createTD(){
  $clinit_DOM();
  return $cast($createTDElement(get_2()));
}

function createTR(){
  $clinit_DOM();
  return $cast($createTRElement(get_2()));
}

function createTable(){
  $clinit_DOM();
  return $cast($createTableElement(get_2()));
}

function createUniqueId(){
  $clinit_DOM();
  return $createUniqueId(get_2());
}

function dispatchEvent_2(evt, elem){
  $clinit_DOM();
  var eventListener;
  eventListener = getEventListener(elem);
  if (isNull_1(eventListener)) {
    return false;
  }
  dispatchEvent_3(evt, elem, eventListener);
  return true;
}

function dispatchEvent_3(evt, elem, listener){
  $clinit_DOM();
  var prevCurrentEvent;
  prevCurrentEvent = currentEvent;
  currentEvent = evt;
  dispatchEventImpl(evt, elem, listener);
  currentEvent = prevCurrentEvent;
}

function dispatchEventImpl(evt, elem, listener){
  jsEquals(elem, sCaptureElem) && (eventGetType(evt) == 8192 && (sCaptureElem = null));
  listener.onBrowserEvent(evt);
}

function eventGetTarget_1(evt){
  $clinit_DOM();
  return $cast($getEventTarget(evt));
}

function eventGetType(evt){
  $clinit_DOM();
  return $eventGetTypeInt(evt);
}

function getCaptureElement(){
  $clinit_DOM();
  return asOld(sCaptureElem);
}

function getChild(parent_0, index_0){
  $clinit_DOM();
  return asOld(impl_4.getChild(parent_0, index_0));
}

function getChildCount(parent_0){
  $clinit_DOM();
  return impl_4.getChildCount(parent_0);
}

function getElementById(id_0){
  $clinit_DOM();
  return asOld($getElementById(get_2(), id_0));
}

function getEventListener(elem){
  $clinit_DOM();
  return getEventListener_1(elem);
}

function getEventsSunk(elem){
  $clinit_DOM();
  return $getEventsSunk(elem);
}

function getFirstChild(elem){
  $clinit_DOM();
  return asOld($getFirstChildElement(elem));
}

function getParent_0(elem){
  $clinit_DOM();
  return asOld($getParentElement(elem));
}

function getParent_1(elem){
  $clinit_DOM();
  return getParent_0(elem);
}

function insertChild(parent_0, child, index_0){
  $clinit_DOM();
  if (isPotential(parent_0)) {
    debugger;
    throw makeAssertionError_Object('Cannot insert into a PotentialElement');
  }
  impl_4.insertChild(parent_0, $cast(resolve(child)), index_0);
}

function insertChild_0(parent_0, child, index_0){
  $clinit_DOM();
  insertChild(parent_0, child, index_0);
}

function maybeInitializeEventSystem(){
  $clinit_DOM();
  $maybeInitializeEventSystem(impl_4);
}

function previewEvent(evt){
  $clinit_DOM();
  var ret;
  ret = fireNativePreviewEvent(evt);
  if (!ret && isNotNull(evt)) {
    $stopPropagation(evt);
    $preventDefault(evt);
  }
  return ret;
}

function releaseCapture(elem){
  $clinit_DOM();
  isNotNull(sCaptureElem) && jsEquals(elem, sCaptureElem) && (sCaptureElem = null);
  impl_4.releaseCapture(elem);
}

function setCapture(elem){
  $clinit_DOM();
  sCaptureElem = elem;
  impl_4.setCapture(elem);
}

function setEventListener(elem, listener){
  $clinit_DOM();
  setEventListener_0(elem, listener);
}

function sinkBitlessEvent(elem, eventTypeName){
  $clinit_DOM();
  impl_4.sinkBitlessEvent(elem, eventTypeName);
}

function sinkEvents(elem, eventBits){
  $clinit_DOM();
  impl_4.sinkEvents(elem, eventBits);
}

var currentEvent = null, impl_4, sCaptureElem;
function $$init_254(){
}

function $onModuleLoad_0(){
  var allowedModes, currentMode, i, impl, message, severity;
  impl = new DocumentModeAsserter_DocumentModeProperty_0;
  severity = impl.getDocumentModeSeverity();
  if (jsEquals(severity, ($clinit_DocumentModeAsserter$Severity() , IGNORE))) {
    return;
  }
  currentMode = $getCompatMode(get_2());
  allowedModes = impl.getAllowedDocumentModes();
  for (i = 0; i < allowedModes.length; i++) {
    if ($equals_2(allowedModes[i], currentMode)) {
      return;
    }
  }
  allowedModes.length == 1 && $equals_2('CSS1Compat', allowedModes[0]) && $equals_2('BackCompat', currentMode)?(message = "GWT no longer supports Quirks Mode (document.compatMode=' BackCompat').<br>Make sure your application's host HTML page has a Standards Mode (document.compatMode=' CSS1Compat') doctype,<br>e.g. by using &lt;!doctype html&gt; at the start of your application's HTML page.<br><br>To continue using this unsupported rendering mode and risk layout problems, suppress this message by adding<br>the following line to your*.gwt.xml module file:<br>&nbsp;&nbsp;&lt;extend-configuration-property name=\"document.compatMode\" value=\"" + currentMode + '"/&gt;'):(message = "Your *.gwt.xml module configuration prohibits the use of the current doucment rendering mode (document.compatMode=' " + currentMode + "').<br>Modify your application's host HTML page doctype, or update your custom " + "'document.compatMode' configuration property settings.");
  if (jsEquals(severity, ($clinit_DocumentModeAsserter$Severity() , ERROR))) {
    throw new RuntimeException_1(message);
  }
  log_1(message);
}

function DocumentModeAsserter_0(){
  Object_1.call(this);
  $$init_254();
}

defineSeed(324, 1, {}, DocumentModeAsserter_0);
function $clinit_DocumentModeAsserter$Severity(){
  $clinit_DocumentModeAsserter$Severity = nullMethod;
  ERROR = new DocumentModeAsserter$Severity_0('ERROR', 0);
  IGNORE = new DocumentModeAsserter$Severity_0('IGNORE', 1);
  WARN = new DocumentModeAsserter$Severity_0('WARN', 2);
  $VALUES_7 = initValues(_3Lcom_google_gwt_user_client_DocumentModeAsserter$Severity_2_classLit, makeCastMap([Q$Serializable]), Q$DocumentModeAsserter$Severity, [ERROR, IGNORE, WARN]);
}

function $$init_255(){
}

function DocumentModeAsserter$Severity_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_255();
}

function valueOf_8(name_0){
  $clinit_DocumentModeAsserter$Severity();
  return valueOf(($clinit_DocumentModeAsserter$Severity$Map() , $MAP_7), name_0);
}

function values_8(){
  $clinit_DocumentModeAsserter$Severity();
  return $VALUES_7;
}

defineSeed(325, 134, makeCastMap([Q$DocumentModeAsserter$Severity, Q$Serializable, Q$Comparable, Q$Enum]), DocumentModeAsserter$Severity_0);
var $VALUES_7, ERROR, IGNORE, WARN;
function $clinit_DocumentModeAsserter$Severity$Map(){
  $clinit_DocumentModeAsserter$Severity$Map = nullMethod;
  $MAP_7 = createValueOfMap(($clinit_DocumentModeAsserter$Severity() , $VALUES_7));
}

var $MAP_7;
function $$init_256(){
}

function DocumentModeAsserter_DocumentModeProperty_0(){
  Object_1.call(this);
  $$init_256();
}

defineSeed(327, 1, {}, DocumentModeAsserter_DocumentModeProperty_0);
_.getAllowedDocumentModes = function getAllowedDocumentModes(){
  return initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['CSS1Compat']);
}
;
_.getDocumentModeSeverity = function getDocumentModeSeverity(){
  return $clinit_DocumentModeAsserter$Severity() , WARN;
}
;
function $getTarget_0(this$static){
  return $cast($getEventTarget(this$static));
}

function $getTypeInt(this$static){
  return eventGetType(this$static);
}

function addNativePreviewHandler(handler){
  if (isNull_1(handler)) {
    debugger;
    throw makeAssertionError_Object('Cannot add a null handler');
  }
  maybeInitializeEventSystem();
  getType_27();
  if (isNull_1(handlers_0)) {
    handlers_0 = new HandlerManager_1(null, true);
    singleton = new Event$NativePreviewEvent_0;
  }
  return $addHandler(handlers_0, TYPE_19, handler);
}

function as_2(event_0){
  return event_0;
}

function fireNativePreviewEvent(nativeEvent){
  return fire_7(handlers_0, nativeEvent);
}

function getEventListener_0(elem){
  return getEventListener(elem);
}

function getTypeInt(typeName){
  return $eventGetTypeInt_0(($clinit_DOM() , impl_4 , typeName));
}

function sinkEvents_0(elem, eventBits){
  sinkEvents(elem, eventBits);
}

var handlers_0;
function $$init_257(this$static){
}

function $cancel_2(this$static){
  this$static.isCanceled = true;
}

function $consume(this$static){
  this$static.isConsumed = true;
}

function $dispatch_19(this$static, handler){
  handler.onPreviewNativeEvent(this$static);
  singleton.isFirstHandler = false;
}

function $getNativeEvent_0(this$static){
  return this$static.nativeEvent;
}

function $getTypeInt_0(this$static){
  return $getTypeInt(as_2($getNativeEvent_0(this$static)));
}

function $isCanceled(this$static){
  return this$static.isCanceled;
}

function $isConsumed(this$static){
  return this$static.isConsumed;
}

function $isFirstHandler(this$static){
  return this$static.isFirstHandler;
}

function $revive_0(this$static){
  $revive(this$static);
  this$static.isCanceled = false;
  this$static.isConsumed = false;
  this$static.isFirstHandler = true;
  this$static.nativeEvent = null;
}

function $setNativeEvent_0(this$static, nativeEvent){
  this$static.nativeEvent = nativeEvent;
}

function Event$NativePreviewEvent_0(){
  GwtEvent_0.call(this);
  $$init_257(this);
}

function fire_7(handlers, nativeEvent){
  var lastIsCanceled, lastIsConsumed, lastIsFirstHandler, lastNativeEvent, ret;
  if (isNotNull(TYPE_19) && isNotNull(handlers) && $isEventHandled(handlers, TYPE_19)) {
    lastIsCanceled = singleton.isCanceled;
    lastIsConsumed = singleton.isConsumed;
    lastIsFirstHandler = singleton.isFirstHandler;
    lastNativeEvent = singleton.nativeEvent;
    $revive_0(singleton);
    $setNativeEvent_0(singleton, nativeEvent);
    $fireEvent(handlers, singleton);
    ret = !($isCanceled(singleton) && !$isConsumed(singleton));
    singleton.isCanceled = lastIsCanceled;
    singleton.isConsumed = lastIsConsumed;
    singleton.isFirstHandler = lastIsFirstHandler;
    singleton.nativeEvent = lastNativeEvent;
    return ret;
  }
  return true;
}

function getType_27(){
  isNull_1(TYPE_19) && (TYPE_19 = new GwtEvent$Type_0);
  return TYPE_19;
}

defineSeed(330, 183, {}, Event$NativePreviewEvent_0);
_.dispatch_0 = function dispatch_20(handler){
  $dispatch_19(this, dynamicCast(handler, Q$Event$NativePreviewHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_21(){
  return TYPE_19;
}
;
_.revive = function revive_0(){
  $revive_0(this);
}
;
_.isCanceled = false;
_.isConsumed = false;
_.isFirstHandler = false;
var TYPE_19, singleton;
function $clinit_History(){
  $clinit_History = nullMethod;
  impl_5 = new HistoryImplSafari_0;
  if (impl_5.init()) {
    scheduleDispose(new History$1_0);
  }
   else {
    impl_5 = null;
    log_1("Unable to initialize the history subsystem; did you include the history frame in your host page? Try <iframe src=\"javascript:''\" id='__gwt_historyFrame' style='position:absolute;width:0;height:0;border:0'><\/iframe>");
  }
}

function addValueChangeHandler(handler){
  $clinit_History();
  return isNotNull(impl_5)?$addValueChangeHandler(impl_5, handler):null;
}

function fireCurrentHistoryState(){
  $clinit_History();
  var token;
  if (isNotNull(impl_5)) {
    token = getToken();
    $fireHistoryChangedImpl(impl_5, token);
  }
}

function getToken(){
  return isNotNull(impl_5)?getToken_0():'';
}

function newItem(historyToken){
  $clinit_History();
  newItem_0(historyToken, true);
}

function newItem_0(historyToken, issueEvent){
  isNotNull(impl_5) && $newItem(impl_5, historyToken, issueEvent);
}

var impl_5;
function $$init_258(){
}

function History$1_0(){
  Object_1.call(this);
  $$init_258();
}

defineSeed(332, 1, {}, History$1_0);
_.dispose = function dispose_0(){
  $dispose_0(($clinit_History() , impl_5));
}
;
function $clinit_Window(){
  $clinit_Window = nullMethod;
  impl_6 = new WindowImpl_0;
}

function addCloseHandler(handler){
  $clinit_Window();
  maybeInitializeCloseHandlers();
  return addHandler_0(getType_23(), handler);
}

function addHandler_0(type_0, handler){
  return $addHandler(getHandlers_0(), type_0, handler);
}

function addResizeHandler(handler){
  $clinit_Window();
  maybeInitializeCloseHandlers();
  maybeInitializeResizeHandlers();
  return addHandler_0(getType_25(), handler);
}

function addWindowClosingHandler(handler){
  $clinit_Window();
  maybeInitializeCloseHandlers();
  return addHandler_0(getType_28(), handler);
}

function alert_0(msg){
  $clinit_Window();
  $wnd.alert(msg);
}

function fireEvent_0(event_0){
  isNotNull(handlers_1) && $fireEvent(handlers_1, event_0);
}

function getClientHeight(){
  $clinit_Window();
  return $getClientHeight_0(get_2());
}

function getClientWidth(){
  $clinit_Window();
  return $getClientWidth_0(get_2());
}

function getHandlers_0(){
  isNull_1(handlers_1) && (handlers_1 = new Window$WindowHandlers_0);
  return handlers_1;
}

function getScrollLeft_3(){
  $clinit_Window();
  return $getScrollLeft_1(get_2());
}

function getScrollTop_1(){
  $clinit_Window();
  return $getScrollTop_0(get_2());
}

function maybeInitializeCloseHandlers(){
  if (isClient() && !closeHandlersInitialized) {
    $initWindowCloseHandler(impl_6);
    scheduleDispose(new Window$1_0);
    closeHandlersInitialized = true;
  }
}

function maybeInitializeResizeHandlers(){
  if (isClient() && !resizeHandlersInitialized) {
    $initWindowResizeHandler(impl_6);
    scheduleDispose(new Window$2_0);
    resizeHandlersInitialized = true;
  }
}

function onClosed(){
  $clinit_Window();
  closeHandlersInitialized && fire_1(getHandlers_0(), null);
}

function onClosing(){
  $clinit_Window();
  var event_0;
  if (closeHandlersInitialized) {
    event_0 = new Window$ClosingEvent_0;
    fireEvent_0(event_0);
    return $getMessage_0();
  }
  return null;
}

function onResize(){
  $clinit_Window();
  var height, width_0;
  if (resizeHandlersInitialized) {
    width_0 = getClientWidth();
    height = getClientHeight();
    if (lastResizeWidth != width_0 || lastResizeHeight != height) {
      lastResizeWidth = width_0;
      lastResizeHeight = height;
      fire_4(getHandlers_0(), width_0, height);
    }
  }
}

function scrollTo_0(left, top_0){
  $clinit_Window();
  $wnd.scrollTo(left, top_0);
}

function setTitle(title_0){
  $clinit_Window();
  $doc.title = title_0;
}

var closeHandlersInitialized = false, handlers_1, impl_6, lastResizeHeight = 0, lastResizeWidth = 0, resizeHandlersInitialized = false;
function $$init_259(){
}

function Window$1_0(){
  Object_1.call(this);
  $$init_259();
}

defineSeed(334, 1, {}, Window$1_0);
_.dispose = function dispose_1(){
  $disposeWindowCloseHandlers(($clinit_Window() , impl_6));
}
;
function $$init_260(){
}

function Window$2_0(){
  Object_1.call(this);
  $$init_260();
}

defineSeed(335, 1, {}, Window$2_0);
_.dispose = function dispose_2(){
  $disposeWindowResizeHandlers(($clinit_Window() , impl_6));
}
;
function $clinit_Window$ClosingEvent(){
  $clinit_Window$ClosingEvent = nullMethod;
  TYPE_20 = new GwtEvent$Type_0;
}

function $$init_261(this$static){
  this$static , null;
}

function $dispatch_20(this$static, handler){
  handler.onWindowClosing(this$static);
}

function $getMessage_0(){
  return null;
}

function Window$ClosingEvent_0(){
  $clinit_Window$ClosingEvent();
  GwtEvent_0.call(this);
  $$init_261(this);
}

function getType_28(){
  $clinit_Window$ClosingEvent();
  return TYPE_20;
}

defineSeed(336, 183, {}, Window$ClosingEvent_0);
_.dispatch_0 = function dispatch_21(handler){
  $dispatch_20(this, dynamicCast(handler, Q$Window$ClosingHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_22(){
  return TYPE_20;
}
;
var TYPE_20;
function buildListParamMap(queryString){
  var entry, entry$iterator, kv, kvPair, kvPair$array, kvPair$index, kvPair$max, out, qs, values;
  out = new HashMap_0;
  if (jsNotEquals(queryString, null) && $length_1(queryString) > 1) {
    qs = $substring(queryString, 1);
    for (kvPair$array = $split_0(qs, '&') , kvPair$index = 0 , kvPair$max = kvPair$array.length; kvPair$index < kvPair$max; ++kvPair$index) {
      kvPair = kvPair$array[kvPair$index];
      kv = $split_1(kvPair, '=', 2);
      if ($length_1(kv[0]) == 0) {
        continue;
      }
      values = dynamicCast(out.get_2(kv[0]), Q$List);
      if (isNull_1(values)) {
        values = new ArrayList_0;
        out.put(kv[0], values);
      }
      values.add_0(kv.length > 1?decodeQueryString(kv[1]):'');
    }
  }
  for (entry$iterator = out.entrySet_0().iterator(); entry$iterator.hasNext();) {
    entry = dynamicCast(entry$iterator.next_0(), Q$Map$Entry);
    entry.setValue_0(unmodifiableList(dynamicCast(entry.getValue(), Q$List)));
  }
  out = unmodifiableMap(out);
  return out;
}

function ensureListParameterMap(){
  var currentQueryString;
  currentQueryString = getQueryString();
  if (isNull_1(listParamMap) || !$equals_2(cachedQueryString, currentQueryString)) {
    listParamMap = buildListParamMap(currentQueryString);
    cachedQueryString = currentQueryString;
  }
}

function getHash(){
  return $getHash(($clinit_Window() , impl_6));
}

function getHostName(){
  return $wnd.location.hostname;
}

function getParameter(name_0){
  var paramsForName;
  ensureListParameterMap();
  paramsForName = dynamicCast(listParamMap.get_2(name_0), Q$List);
  return isNull_1(paramsForName)?null:dynamicCast(paramsForName.get_1(paramsForName.size_1() - 1), Q$String);
}

function getQueryString(){
  return $getQueryString(($clinit_Window() , impl_6));
}

function reload(){
  $wnd.location.reload();
}

var cachedQueryString = '', listParamMap;
function getUserAgent(){
  return $wnd.navigator.userAgent;
}

function $$init_262(){
}

function Window$WindowHandlers_0(){
  HandlerManager_0.call(this, null);
  $$init_262();
}

defineSeed(339, 216, makeCastMap([Q$HasHandlers]), Window$WindowHandlers_0);
_.addCloseHandler = function addCloseHandler_0(handler){
  return $addHandler(this, getType_23(), handler);
}
;
function $$init_263(){
}

function $eventGetTypeInt(evt){
  return $eventGetTypeInt_0($getType(evt));
}

function $eventGetTypeInt_0(eventType){
  switch (eventType) {
    case 'blur':
      return 4096;
    case 'change':
      return 1024;
    case 'click':
      return 1;
    case 'dblclick':
      return 2;
    case 'focus':
      return 2048;
    case 'keydown':
      return 128;
    case 'keypress':
      return 256;
    case 'keyup':
      return 512;
    case 'load':
      return 32768;
    case 'losecapture':
      return 8192;
    case 'mousedown':
      return 4;
    case 'mousemove':
      return 64;
    case 'mouseout':
      return 32;
    case 'mouseover':
      return 16;
    case 'mouseup':
      return 8;
    case 'scroll':
      return 16384;
    case 'error':
      return 65536;
    case 'mousewheel':
      return 131072;
    case 'DOMMouseScroll':
      return 131072;
    case 'contextmenu':
      return 262144;
    case 'paste':
      return 524288;
    case 'touchstart':
      return 1048576;
    case 'touchmove':
      return 2097152;
    case 'touchend':
      return 4194304;
    case 'touchcancel':
      return 8388608;
    case 'gesturestart':
      return 16777216;
    case 'gesturechange':
      return 33554432;
    case 'gestureend':
      return 67108864;
    default:return -1;
  }
}

function $getEventsSunk(elem){
  return elem.__eventBits || 0;
}

function $maybeInitializeEventSystem(this$static){
  if (!eventSystemIsInitialized) {
    this$static.initEventSystem();
    scheduleDispose(new DOMImpl$1_0(this$static));
    eventSystemIsInitialized = true;
  }
}

function DOMImpl_2(){
  Object_1.call(this);
  $$init_263();
}

function addDisposableEvent(elem, event_0, handler, capture){
  elem.__gwt_disposeEvent = elem.__gwt_disposeEvent || [];
  elem.__gwt_disposeEvent.push({event:event_0, handler:handler, capture:capture});
}

function cleanupDOM(dom){
  var allElements, elem, i, listener, userElem;
  allElements = $getElementsByTagName(get_2(), '*');
  for (i = 0; i < $getLength(allElements); i++) {
    elem = $getItem(allElements, i);
    userElem = elem;
    listener = getEventListener_1(userElem);
    if (isNotNull(listener)) {
      dom.sinkEvents(userElem, 0);
      setEventListener_0(userElem, null);
    }
    maybeRemoveDisposableEvent(elem);
  }
}

function getEventListener_1(elem){
  var maybeListener = elem.__listener;
  return isMyListener(maybeListener)?maybeListener:null;
}

function isMyListener(object){
  return !instanceOfJso(object) && instanceOf(object, Q$EventListener);
}

function maybeRemoveDisposableEvent(elem){
  var diEvents = elem.__gwt_disposeEvent;
  if (diEvents) {
    for (var i = 0, l_0 = diEvents.length; i < l_0; i++) {
      var diEvent = diEvents[i];
      elem.removeEventListener(diEvent.event, diEvent.handler, diEvent.capture);
      elem.__gwt_disposeEvent = null;
    }
  }
}

function setEventListener_0(elem, listener){
  elem.__listener = listener;
}

defineSeed(340, 1, {});
var eventSystemIsInitialized = false;
function $$init_264(){
}

function DOMImpl$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_264();
}

defineSeed(341, 1, {}, DOMImpl$1_0);
_.dispose = function dispose_3(){
  this.this$0.disposeEventSystem();
  cleanupDOM(this.this$0);
}
;
function $clinit_DOMImplStandard(){
  $clinit_DOMImplStandard = nullMethod;
  bitlessEventDispatchers = getBitlessEventDispatchers();
  captureEventDispatchers = getCaptureEventDispatchers();
}

function $$init_265(){
}

function $sinkBitlessEventImpl(elem, eventTypeName){
  var dispatchMap = bitlessEventDispatchers;
  var dispatcher = dispatchMap[eventTypeName] || dispatchMap['_default_'];
  elem.addEventListener(eventTypeName, dispatcher, false);
}

function $sinkEventsImpl(elem, bits){
  var chMask = (elem.__eventBits || 0) ^ bits;
  elem.__eventBits = bits;
  if (!chMask)
    return;
  if (chMask & 1)
    elem.onclick = bits & 1?dispatchEvent_4:null;
  if (chMask & 2)
    elem.ondblclick = bits & 2?dispatchEvent_4:null;
  if (chMask & 4)
    elem.onmousedown = bits & 4?dispatchEvent_4:null;
  if (chMask & 8)
    elem.onmouseup = bits & 8?dispatchEvent_4:null;
  if (chMask & 16)
    elem.onmouseover = bits & 16?dispatchEvent_4:null;
  if (chMask & 32)
    elem.onmouseout = bits & 32?dispatchEvent_4:null;
  if (chMask & 64)
    elem.onmousemove = bits & 64?dispatchEvent_4:null;
  if (chMask & 128)
    elem.onkeydown = bits & 128?dispatchEvent_4:null;
  if (chMask & 256)
    elem.onkeypress = bits & 256?dispatchEvent_4:null;
  if (chMask & 512)
    elem.onkeyup = bits & 512?dispatchEvent_4:null;
  if (chMask & 1024)
    elem.onchange = bits & 1024?dispatchEvent_4:null;
  if (chMask & 2048)
    elem.onfocus = bits & 2048?dispatchEvent_4:null;
  if (chMask & 4096)
    elem.onblur = bits & 4096?dispatchEvent_4:null;
  if (chMask & 8192)
    elem.onlosecapture = bits & 8192?dispatchEvent_4:null;
  if (chMask & 16384)
    elem.onscroll = bits & 16384?dispatchEvent_4:null;
  if (chMask & 32768)
    elem.onload = bits & 32768?dispatchUnhandledEvent:null;
  if (chMask & 65536)
    elem.onerror = bits & 65536?dispatchEvent_4:null;
  if (chMask & 131072)
    elem.onmousewheel = bits & 131072?dispatchEvent_4:null;
  if (chMask & 262144)
    elem.oncontextmenu = bits & 262144?dispatchEvent_4:null;
  if (chMask & 524288)
    elem.onpaste = bits & 524288?dispatchEvent_4:null;
  if (chMask & 1048576)
    elem.ontouchstart = bits & 1048576?dispatchEvent_4:null;
  if (chMask & 2097152)
    elem.ontouchmove = bits & 2097152?dispatchEvent_4:null;
  if (chMask & 4194304)
    elem.ontouchend = bits & 4194304?dispatchEvent_4:null;
  if (chMask & 8388608)
    elem.ontouchcancel = bits & 8388608?dispatchEvent_4:null;
  if (chMask & 16777216)
    elem.ongesturestart = bits & 16777216?dispatchEvent_4:null;
  if (chMask & 33554432)
    elem.ongesturechange = bits & 33554432?dispatchEvent_4:null;
  if (chMask & 67108864)
    elem.ongestureend = bits & 67108864?dispatchEvent_4:null;
}

function DOMImplStandard_2(){
  DOMImpl_2.call(this);
  $$init_265();
}

function dispatchCapturedEvent(evt){
  previewEvent(evt);
}

function dispatchCapturedMouseEvent(evt){
  var cancelled;
  cancelled = !previewEvent(evt);
  if (cancelled || isNull_1(captureElem)) {
    return;
  }
  dispatchEvent_2(evt, captureElem) && $stopPropagation(evt);
}

function dispatchDragEvent(evt){
  $preventDefault(evt);
  dispatchEvent_5(evt);
}

function dispatchEvent_5(evt){
  var element;
  element = getFirstAncestorWithListener(evt);
  if (isNull_1(element)) {
    return;
  }
  dispatchEvent_3(evt, $getNodeType(element) != 1?null:element, getEventListener_1(element));
}

function dispatchUnhandledEvent_0(evt){
  var element;
  element = $cast($getCurrentEventTarget(evt));
  $setPropertyString(element, '__gwtLastUnhandledEvent', $getType(evt));
  dispatchEvent_5(evt);
}

function getBitlessEventDispatchers(){
  return {_default_:dispatchEvent_5, dragenter:dispatchDragEvent, dragover:dispatchDragEvent};
}

function getCaptureEventDispatchers(){
  return {click:dispatchCapturedMouseEvent, dblclick:dispatchCapturedMouseEvent, mousedown:dispatchCapturedMouseEvent, mouseup:dispatchCapturedMouseEvent, mousemove:dispatchCapturedMouseEvent, mouseover:dispatchCapturedMouseEvent, mouseout:dispatchCapturedMouseEvent, mousewheel:dispatchCapturedMouseEvent, keydown:dispatchCapturedEvent, keyup:dispatchCapturedEvent, keypress:dispatchCapturedEvent, touchstart:dispatchCapturedMouseEvent, touchend:dispatchCapturedMouseEvent, touchmove:dispatchCapturedMouseEvent, touchcancel:dispatchCapturedMouseEvent, gesturestart:dispatchCapturedMouseEvent, gestureend:dispatchCapturedMouseEvent, gesturechange:dispatchCapturedMouseEvent};
}

function getFirstAncestorWithListener(evt){
  var curElem;
  curElem = $cast($getCurrentEventTarget(evt));
  while (isNotNull(curElem) && isNull_1(getEventListener_1(curElem))) {
    curElem = $cast($getParentNode(curElem));
  }
  return curElem;
}

defineSeed(342, 340, {});
_.disposeEventSystem = function disposeEventSystem(){
  var foreach = foreach_0;
  foreach(captureEvents, function(e, fn){
    $wnd.removeEventListener(e, fn, true);
  }
  );
}
;
_.getChild = function getChild_0(elem, index_0){
  var count = 0, child = elem.firstChild;
  while (child) {
    if (child.nodeType == 1) {
      if (index_0 == count)
        return child;
      ++count;
    }
    child = child.nextSibling;
  }
  return null;
}
;
_.getChildCount = function getChildCount_0(elem){
  var count = 0, child = elem.firstChild;
  while (child) {
    if (child.nodeType == 1)
      ++count;
    child = child.nextSibling;
  }
  return count;
}
;
_.initEventSystem = function initEventSystem(){
  dispatchEvent_4 = $entry(dispatchEvent_5);
  dispatchUnhandledEvent = $entry(dispatchUnhandledEvent_0);
  var foreach = foreach_0;
  var bitlessEvents = bitlessEventDispatchers;
  foreach(bitlessEvents, function(e, fn){
    bitlessEvents[e] = $entry(fn);
  }
  );
  var captureEvents_0 = captureEventDispatchers;
  foreach(captureEvents_0, function(e, fn){
    captureEvents_0[e] = $entry(fn);
  }
  );
  foreach(captureEvents_0, function(e, fn){
    $wnd.addEventListener(e, fn, true);
  }
  );
}
;
_.insertChild = function insertChild_1(parent_0, toAdd, index_0){
  var count = 0, child = parent_0.firstChild, before = null;
  while (child) {
    if (child.nodeType == 1) {
      if (count == index_0) {
        before = child;
        break;
      }
      ++count;
    }
    child = child.nextSibling;
  }
  parent_0.insertBefore(toAdd, before);
}
;
_.releaseCapture = function releaseCapture_0(elem){
  $maybeInitializeEventSystem(this);
  jsEquals(captureElem, elem) && (captureElem = null);
}
;
_.setCapture = function setCapture_0(elem){
  $maybeInitializeEventSystem(this);
  captureElem = elem;
}
;
_.sinkBitlessEvent = function sinkBitlessEvent_0(elem, eventTypeName){
  $maybeInitializeEventSystem(this);
  $sinkBitlessEventImpl(elem, eventTypeName);
}
;
_.sinkEvents = function sinkEvents_1(elem, bits){
  $maybeInitializeEventSystem(this);
  $sinkEventsImpl(elem, bits);
}
;
var bitlessEventDispatchers, captureElem, captureEventDispatchers, dispatchEvent_4, dispatchUnhandledEvent;
function $$init_266(){
}

function DOMImplStandardBase_2(){
  DOMImplStandard_2.call(this);
  $$init_266();
}

defineSeed(343, 342, {});
function $$init_267(){
}

function DOMImplWebkit_2(){
  $clinit_DOMImplStandard();
  DOMImplStandardBase_2.call(this);
  $$init_267();
}

defineSeed(344, 343, {}, DOMImplWebkit_2);
function $$init_268(this$static){
  this$static.uiObjectList = new ArrayList_0;
}

function $get_3(this$static, elem){
  var index_0;
  index_0 = getIndex(elem);
  if (index_0 < 0) {
    return null;
  }
  return dynamicCast($get_4(this$static.uiObjectList, index_0), Q$UIObject);
}

function $getObjectList(this$static){
  return this$static.uiObjectList;
}

function $put(this$static, uiObject){
  var index_0;
  if (isNull_1(this$static.freeList)) {
    index_0 = $size_0(this$static.uiObjectList);
    $add_6(this$static.uiObjectList, uiObject);
  }
   else {
    index_0 = this$static.freeList.index_0;
    $set_2(this$static.uiObjectList, index_0, uiObject);
    this$static.freeList = this$static.freeList.next;
  }
  setIndex($getElement(uiObject), index_0);
}

function $removeByElement(this$static, elem){
  var index_0;
  index_0 = getIndex(elem);
  $removeImpl(this$static, elem, index_0);
}

function $removeImpl(this$static, elem, index_0){
  clearIndex(elem);
  $set_2(this$static.uiObjectList, index_0, null);
  this$static.freeList = new ElementMapperImpl$FreeNode_0(index_0, this$static.freeList);
}

function ElementMapperImpl_0(){
  Object_1.call(this);
  $$init_268(this);
}

function clearIndex(elem){
  elem['__uiObjectID'] = null;
}

function getIndex(elem){
  var index_0 = elem['__uiObjectID'];
  return index_0 == null?-1:index_0;
}

function setIndex(elem, index_0){
  elem['__uiObjectID'] = index_0;
}

defineSeed(345, 1, {}, ElementMapperImpl_0);
_.freeList = null;
function $$init_269(){
}

function ElementMapperImpl$FreeNode_0(index_0, next){
  Object_1.call(this);
  $$init_269();
  this.index_0 = index_0;
  this.next = next;
}

defineSeed(346, 1, {}, ElementMapperImpl$FreeNode_0);
_.index_0 = 0;
function foreach_0(map_0, fn){
  for (var e in map_0) {
    if (map_0.hasOwnProperty(e)) {
      fn(e, map_0[e]);
    }
  }
}

function $$init_270(this$static){
  this$static.handlers = new HandlerManager_0(null);
}

function $addValueChangeHandler(this$static, handler){
  return $addHandler(this$static.handlers, getType_26(), handler);
}

function $dispose_0(this$static){
  $wnd.onhashchange = this$static.oldHandler;
}

function $fireHistoryChangedImpl(this$static, newToken){
  fire_6(this$static, newToken);
}

function $nativeUpdateOnEvent(){
}

function $newItem(this$static, historyToken, issueEvent){
  historyToken = jsEquals(historyToken, null)?'':historyToken;
  if (!$equals_2(historyToken, getToken_0())) {
    setToken(historyToken);
    this$static.nativeUpdate(historyToken);
    issueEvent && $fireHistoryChangedImpl(this$static, historyToken);
  }
}

function HistoryImpl_0(){
  Object_1.call(this);
  $$init_270(this);
}

function getToken_0(){
  return jsEquals(token_1, null)?'':token_1;
}

function setToken(token){
  token_1 = token;
}

defineSeed(348, 1, makeCastMap([Q$HasHandlers]));
_.decodeFragment = function decodeFragment(encodedFragment){
  return decodeURI(encodedFragment.replace('%23', '#'));
}
;
_.encodeFragment = function encodeFragment(fragment){
  return encodeURI(fragment).replace('#', '%23');
}
;
_.fireEvent = function fireEvent_1(event_0){
  $fireEvent(this.handlers, event_0);
}
;
_.init = function init_1(){
  var token_0 = '';
  var hash_0 = $wnd.location.hash;
  if (hash_0.length > 0) {
    token_0 = this.decodeFragment(hash_0.substring(1));
  }
  setToken(token_0);
  var historyImpl = this;
  historyImpl.oldHandler = $wnd.onhashchange;
  $wnd.onhashchange = $entry(function(){
    var token = '', hash = $wnd.location.hash;
    if (hash.length > 0) {
      token = historyImpl.decodeFragment(hash.substring(1));
    }
    historyImpl.newItemOnEvent(token);
    var oldHandler = historyImpl.oldHandler;
    if (oldHandler) {
      oldHandler();
    }
  }
  );
  return true;
}
;
_.nativeUpdate = function nativeUpdate(historyToken){
  $wnd.location.hash = this.encodeFragment(historyToken);
}
;
_.newItemOnEvent = function newItemOnEvent(historyToken){
  historyToken = jsEquals(historyToken, null)?'':historyToken;
  if (!$equals_2(historyToken, getToken_0())) {
    setToken(historyToken);
    $nativeUpdateOnEvent();
    $fireHistoryChangedImpl(this, historyToken);
  }
}
;
var token_1 = '';
function $$init_271(){
}

function HistoryImplTimer_0(){
  HistoryImpl_0.call(this);
  $$init_271();
}

defineSeed(350, 348, makeCastMap([Q$HasHandlers]));
_.init = function init_2(){
  var token_0 = '';
  var hash_0 = $wnd.location.hash;
  if (hash_0.length > 0) {
    token_0 = this.decodeFragment(hash_0.substring(1));
  }
  setToken(token_0);
  var historyImpl = this;
  var checkHistory = $entry(function(){
    var token = '', hash = $wnd.location.hash;
    if (hash.length > 0) {
      token = historyImpl.decodeFragment(hash.substring(1));
    }
    historyImpl.newItemOnEvent(token);
  }
  );
  var checkHistoryCycle = function(){
    setTimeout_0(checkHistoryCycle, 250);
    checkHistory();
  }
  ;
  checkHistoryCycle();
  return true;
}
;
function $$init_272(){
}

function HistoryImplSafari_0(){
  HistoryImplTimer_0.call(this);
  $$init_272();
}

defineSeed(349, 350, makeCastMap([Q$HasHandlers]), HistoryImplSafari_0);
_.nativeUpdate = function nativeUpdate_0(historyToken){
  $wnd.location = $wnd.location.href.split('#')[0] + '#' + this.encodeFragment(historyToken);
}
;
function $$init_273(){
}

function $disposeWindowCloseHandlers(this$static){
  $wnd.onbeforeunload = this$static.oldOnBeforeUnload;
  $wnd.onunload = this$static.oldOnUnload;
}

function $disposeWindowResizeHandlers(this$static){
  $wnd.onresize = this$static.oldOnResize;
}

function $getHash(){
  return $wnd.location.hash;
}

function $getQueryString(){
  return $wnd.location.search;
}

function $initWindowCloseHandler(this$static){
  var oldOnBeforeUnload = this$static.oldOnBeforeUnload = $wnd.onbeforeunload;
  var oldOnUnload = this$static.oldOnUnload = $wnd.onunload;
  $wnd.onbeforeunload = function(evt){
    var ret, oldRet;
    try {
      ret = $entry(onClosing)();
    }
     finally {
      oldRet = oldOnBeforeUnload && oldOnBeforeUnload(evt);
    }
    if (ret != null) {
      return ret;
    }
    if (oldRet != null) {
      return oldRet;
    }
  }
  ;
  $wnd.onunload = $entry(function(evt){
    try {
      onClosed();
    }
     finally {
      oldOnUnload && oldOnUnload(evt);
      $wnd.onresize = null;
      $wnd.onscroll = null;
      $wnd.onbeforeunload = null;
      $wnd.onunload = null;
    }
  }
  );
}

function $initWindowResizeHandler(this$static){
  var oldOnResize = this$static.oldOnResize = $wnd.onresize;
  $wnd.onresize = $entry(function(evt){
    try {
      onResize();
    }
     finally {
      oldOnResize && oldOnResize(evt);
    }
  }
  );
}

function WindowImpl_0(){
  Object_1.call(this);
  $$init_273();
}

defineSeed(351, 1, {}, WindowImpl_0);
function $clinit_UIObject(){
  $clinit_UIObject = nullMethod;
  'gwt-debug-';
  "This UIObject's element is not set; you may be missing a call to either Composite.initWidget() or UIObject.setElement()";
  'Element may only be set once';
  new UIObject$DebugIdImpl_0;
  'Style names cannot be empty';
  'Null widget handle. If you are creating a composite, ensure that initWidget() has been called.';
}

function $$init_274(){
}

function $addStyleDependentName(this$static, styleSuffix){
  this$static.setStyleDependentName(styleSuffix, true);
}

function $addStyleName(this$static, style){
  this$static.setStyleName_0(style, true);
}

function $extractLengthValue(s){
  if (s == 'auto' || (s == 'inherit' || s == '')) {
    return 0;
  }
   else {
    var numberRegex = numberRegex_0;
    if (!numberRegex) {
      numberRegex = numberRegex_0 = /^(\s*[+-]?((\d+\.?\d*)|(\.\d+))([eE][+-]?\d+)?)(.*)$/;
    }
    s = s.replace(numberRegex, '$1');
    return parseFloat(s);
  }
}

function $getAbsoluteLeft_0(this$static){
  return $getAbsoluteLeft($getElement(this$static));
}

function $getAbsoluteTop_0(this$static){
  return $getAbsoluteTop($getElement(this$static));
}

function $getElement(this$static){
  if (isNull_1(this$static.element)) {
    debugger;
    throw makeAssertionError_Object("This UIObject's element is not set; you may be missing a call to either Composite.initWidget() or UIObject.setElement()");
  }
  return asOld(this$static.element);
}

function $getOffsetHeight_0(this$static){
  return $getPropertyInt($getElement(this$static), 'offsetHeight');
}

function $getOffsetWidth_0(this$static){
  return $getPropertyInt($getElement(this$static), 'offsetWidth');
}

function $getStylePrimaryName(this$static){
  return getStylePrimaryName(this$static.getStyleElement());
}

function $removeStyleDependentName(this$static, styleSuffix){
  this$static.setStyleDependentName(styleSuffix, false);
}

function $removeStyleName(this$static, style){
  this$static.setStyleName_0(style, false);
}

function $replaceElement(this$static, elem){
  isNotNull(this$static.element) && $replaceNode(this$static.element, elem);
  this$static.element = elem;
}

function $replaceNode(node, newNode){
  var p = node.parentNode;
  if (!p) {
    return;
  }
  p.insertBefore(newNode, node);
  p.removeChild(node);
}

function $setElement(this$static, elem){
  $setElement_0(this$static, asOld(elem));
}

function $setElement_0(this$static, elem){
  if (!(isNull_1(this$static.element) || isPotential(this$static.element))) {
    debugger;
    throw makeAssertionError_Object('Element may only be set once');
  }
  this$static.element = elem;
}

function $setHeight_0(this$static, height){
  if ($extractLengthValue($toLowerCase($trim(height))) < 0) {
    debugger;
    throw makeAssertionError_Object('CSS heights should not be negative');
  }
  $setProperty_0($getStyle($getElement(this$static)), 'height', height);
}

function $setPixelSize(this$static, width_0, height){
  width_0 >= 0 && this$static.setWidth(width_0 + 'px');
  height >= 0 && this$static.setHeight(height + 'px');
}

function $sinkBitlessEvent(this$static, eventTypeName){
  sinkBitlessEvent($getElement(this$static), eventTypeName);
}

function $sinkEvents(this$static, eventBitsToAdd){
  sinkEvents($getElement(this$static), eventBitsToAdd | getEventsSunk($getElement(this$static)));
}

function UIObject_0(){
  Object_1.call(this);
  $$init_274();
}

function getStyleName(elem){
  return $getClassName(elem);
}

function getStylePrimaryName(elem){
  var fullClassName, spaceIdx;
  fullClassName = getStyleName(elem);
  spaceIdx = $indexOf_2(fullClassName, 32);
  if (spaceIdx >= 0) {
    return $substring_0(fullClassName, 0, spaceIdx);
  }
  return fullClassName;
}

function setStyleName(elem, styleName){
  $clinit_UIObject();
  $setClassName(elem, styleName);
}

function setStyleName_0(elem, style, add_0){
  $clinit_UIObject();
  if (isNull_1(elem)) {
    throw new RuntimeException_1('Null widget handle. If you are creating a composite, ensure that initWidget() has been called.');
  }
  style = $trim(style);
  if ($length_1(style) == 0) {
    throw new IllegalArgumentException_1('Style names cannot be empty');
  }
  add_0?$addClassName(elem, style):$removeClassName(elem, style);
}

function setStylePrimaryName(elem, style){
  if (isNull_1(elem)) {
    throw new RuntimeException_1('Null widget handle. If you are creating a composite, ensure that initWidget() has been called.');
  }
  style = $trim(style);
  if ($length_1(style) == 0) {
    throw new IllegalArgumentException_1('Style names cannot be empty');
  }
  updatePrimaryAndDependentStyleNames(elem, style);
}

function setVisible(elem, visible){
  $clinit_UIObject();
  elem.style.display = visible?'':'none';
  if (visible) {
    elem.removeAttribute('aria-hidden');
  }
   else {
    elem.setAttribute('aria-hidden', 'true');
  }
}

function updatePrimaryAndDependentStyleNames(elem, newPrimaryStyle){
  var classes = elem.className.split(/\s+/);
  if (!classes) {
    return;
  }
  var oldPrimaryStyle = classes[0];
  var oldPrimaryStyleLen = oldPrimaryStyle.length;
  classes[0] = newPrimaryStyle;
  for (var i = 1, n = classes.length; i < n; i++) {
    var name_0 = classes[i];
    if (name_0.length > oldPrimaryStyleLen && (name_0.charAt(oldPrimaryStyleLen) == '-' && name_0.indexOf(oldPrimaryStyle) == 0)) {
      classes[i] = newPrimaryStyle + name_0.substring(oldPrimaryStyleLen);
    }
  }
  elem.className = classes.join(' ');
}

defineSeed(356, 1, makeCastMap([Q$HasVisibility, Q$UIObject]));
_.getAbsoluteLeft_0 = function getAbsoluteLeft_1(){
  return $getAbsoluteLeft_0(this);
}
;
_.getAbsoluteTop_0 = function getAbsoluteTop_1(){
  return $getAbsoluteTop_0(this);
}
;
_.getOffsetHeight = function getOffsetHeight(){
  return $getOffsetHeight_0(this);
}
;
_.getOffsetWidth = function getOffsetWidth(){
  return $getOffsetWidth_0(this);
}
;
_.getStyleElement = function getStyleElement(){
  return $getElement(this);
}
;
_.resolvePotentialElement = function resolvePotentialElement(){
  throw new UnsupportedOperationException_0;
}
;
_.setHeight = function setHeight(height){
  $setHeight_0(this, height);
}
;
_.setStyleDependentName = function setStyleDependentName(styleSuffix, add_0){
  this.setStyleName_0($getStylePrimaryName(this) + '-' + styleSuffix, add_0);
}
;
_.setStyleName = function setStyleName_1(style){
  setStyleName(this.getStyleElement(), style);
}
;
_.setStyleName_0 = function setStyleName_2(style, add_0){
  setStyleName_0(this.getStyleElement(), style, add_0);
}
;
_.setStylePrimaryName = function setStylePrimaryName_0(style){
  setStylePrimaryName(this.getStyleElement(), style);
}
;
_.setVisible = function setVisible_0(visible){
  setVisible($getElement(this), visible);
}
;
_.setWidth = function setWidth(width_0){
  if ($extractLengthValue($toLowerCase($trim(width_0))) < 0) {
    debugger;
    throw makeAssertionError_Object('CSS widths should not be negative');
  }
  $setProperty_0($getStyle($getElement(this)), 'width', width_0);
}
;
_.toString$ = function toString_16(){
  if (isNull_1(this.element)) {
    return '(null handle)';
  }
  return $getString($getElement(this));
}
;
var numberRegex_0;
function $$init_275(){
}

function $addAttachHandler(this$static, handler){
  return $addHandler_2(this$static, handler, getType_22());
}

function $addBitlessDomHandler(this$static, handler, type_0){
  if (isNull_1(handler)) {
    debugger;
    throw makeAssertionError_Object('handler must not be null');
  }
  if (isNull_1(type_0)) {
    debugger;
    throw makeAssertionError_Object('type must not be null');
  }
  $sinkBitlessEvent(this$static, $getName(type_0));
  return $addHandler($ensureHandlers(this$static), type_0, handler);
}

function $addDomHandler(this$static, handler, type_0){
  var typeInt;
  if (isNull_1(handler)) {
    debugger;
    throw makeAssertionError_Object('handler must not be null');
  }
  if (isNull_1(type_0)) {
    debugger;
    throw makeAssertionError_Object('type must not be null');
  }
  typeInt = getTypeInt($getName(type_0));
  typeInt == -1?$sinkBitlessEvent(this$static, $getName(type_0)):$sinkEvents_0(this$static, typeInt);
  return $addHandler($ensureHandlers(this$static), type_0, handler);
}

function $addHandler_2(this$static, handler, type_0){
  return $addHandler($ensureHandlers(this$static), type_0, handler);
}

function $createHandlerManager(this$static){
  return new HandlerManager_0(this$static);
}

function $ensureHandlers(this$static){
  return isNull_1(this$static.handlerManager)?(this$static.handlerManager = $createHandlerManager(this$static)):this$static.handlerManager;
}

function $fireEvent_1(this$static, event_0){
  isNotNull(this$static.handlerManager) && $fireEvent(this$static.handlerManager, event_0);
}

function $getParent_1(this$static){
  return this$static.parent_0;
}

function $isOrWasAttached(this$static){
  return this$static.eventsToSink == -1;
}

function $onAttach(this$static){
  var bitsToAdd;
  if (this$static.isAttached()) {
    throw new IllegalStateException_1("Should only call onAttach when the widget is detached from the browser's document");
  }
  this$static.attached = true;
  setEventListener($getElement(this$static), this$static);
  bitsToAdd = this$static.eventsToSink;
  this$static.eventsToSink = -1;
  bitsToAdd > 0 && $sinkEvents_0(this$static, bitsToAdd);
  this$static.doAttachChildren();
  this$static.onLoad();
  fire_0(this$static, true);
}

function $onBrowserEvent(this$static, event_0){
  var related;
  switch (eventGetType(event_0)) {
    case 16:
    case 32:
      related = $cast($getRelatedEventTarget(event_0));
      if (isNotNull(related) && $isOrHasChild($getElement(this$static), related)) {
        return;
      }

  }
  fireNativeEvent(event_0, this$static, $getElement(this$static));
}

function $onDetach(this$static){
  if (!this$static.isAttached()) {
    throw new IllegalStateException_1("Should only call onDetach when the widget is attached to the browser's document");
  }
  try {
    this$static.onUnload();
    fire_0(this$static, false);
  }
   finally {
    try {
      this$static.doDetachChildren();
    }
     finally {
      setEventListener($getElement(this$static), null);
      this$static.attached = false;
    }
  }
}

function $onLoad(){
}

function $onUnload(){
}

function $removeFromParent(this$static){
  if (isNull_1(this$static.parent_0)) {
    isInDetachList(this$static) && detachNow(this$static);
  }
   else if (instanceOf(this$static.parent_0, Q$HasWidgets)) {
    dynamicCast(this$static.parent_0, Q$HasWidgets).remove_0(this$static);
  }
   else if (isNotNull(this$static.parent_0)) {
    throw new IllegalStateException_1("This widget's parent does not implement HasWidgets");
  }
}

function $replaceElement_0(this$static, elem){
  this$static.isAttached() && setEventListener($getElement(this$static), null);
  $replaceElement(this$static, elem);
  this$static.isAttached() && setEventListener($getElement(this$static), this$static);
}

function $setParent_0(this$static, parent_0){
  var oldParent;
  oldParent = this$static.parent_0;
  if (isNull_1(parent_0)) {
    try {
      if (isNotNull(oldParent) && oldParent.isAttached()) {
        this$static.onDetach();
        if (this$static.isAttached()) {
          debugger;
          throw makeAssertionError_Object('Failure of ' + $getName_2(this$static.___clazz$) + ' to call super.onDetach()');
        }
      }
    }
     finally {
      this$static.parent_0 = null;
    }
  }
   else {
    if (isNotNull(oldParent)) {
      throw new IllegalStateException_1('Cannot set a new parent without first clearing the old parent');
    }
    this$static.parent_0 = parent_0;
    if (parent_0.isAttached()) {
      this$static.onAttach();
      if (!this$static.isAttached()) {
        debugger;
        throw makeAssertionError_Object('Failure of ' + $getName_2(this$static.___clazz$) + ' to call super.onAttach()');
      }
    }
  }
}

function $sinkEvents_0(this$static, eventBitsToAdd){
  $isOrWasAttached(this$static)?$sinkEvents(this$static, eventBitsToAdd):(this$static.eventsToSink |= eventBitsToAdd);
}

function Widget_0(){
  $clinit_UIObject();
  UIObject_0.call(this);
  $$init_275();
}

function asWidgetOrNull(w){
  $clinit_UIObject();
  return isNull_1(w)?null:w.asWidget();
}

defineSeed(355, 356, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));
_.asWidget = function asWidget(){
  return this;
}
;
_.doAttachChildren = function doAttachChildren(){
}
;
_.doDetachChildren = function doDetachChildren(){
}
;
_.fireEvent = function fireEvent_2(event_0){
  $fireEvent_1(this, event_0);
}
;
_.isAttached = function isAttached(){
  return this.attached;
}
;
_.onAttach = function onAttach(){
  $onAttach(this);
}
;
_.onBrowserEvent = function onBrowserEvent(event_0){
  $onBrowserEvent(this, event_0);
}
;
_.onDetach = function onDetach(){
  $onDetach(this);
}
;
_.onLoad = function onLoad(){
  $onLoad();
}
;
_.onUnload = function onUnload(){
  $onUnload();
}
;
_.attached = false;
_.eventsToSink = 0;
function $$init_276(){
}

function $adopt(this$static, child){
  if (isNotNull($getParent_1(child))) {
    debugger;
    throw makeAssertionError();
  }
  $setParent_0(child, this$static);
}

function $orphan(this$static, child){
  if (jsNotEquals($getParent_1(child), this$static)) {
    debugger;
    throw makeAssertionError();
  }
  $setParent_0(child, null);
}

function Panel_0(){
  $clinit_UIObject();
  Widget_0.call(this);
  $$init_276();
}

defineSeed(354, 355, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));
_.add_1 = function add_3(child){
  throw new UnsupportedOperationException_1('This panel does not support no-arg add()');
}
;
_.clear_0 = function clear_1(){
  var it;
  it = this.iterator();
  while (it.hasNext()) {
    it.next_0();
    it.remove_1();
  }
}
;
_.doAttachChildren = function doAttachChildren_0(){
  tryCommand(this, ($clinit_AttachDetachException() , attachCommand));
}
;
_.doDetachChildren = function doDetachChildren_0(){
  tryCommand(this, ($clinit_AttachDetachException() , detachCommand));
}
;
function $$init_277(this$static){
  this$static.children = new WidgetCollection_0(this$static);
}

function $add_0(this$static, child, container){
  $removeFromParent(child);
  $add_7($getChildren(this$static), child);
  appendChild_0(container, $getElement(child));
  $adopt(this$static, child);
}

function $adjustIndex(this$static, child, beforeIndex){
  var idx;
  $checkIndexBoundsForInsertion(this$static, beforeIndex);
  if (jsEquals($getParent_1(child), this$static)) {
    idx = $getWidgetIndex(this$static, child);
    idx < beforeIndex && --beforeIndex;
  }
  return beforeIndex;
}

function $checkIndexBoundsForInsertion(this$static, index_0){
  if (index_0 < 0 || index_0 > $getWidgetCount(this$static)) {
    throw new IndexOutOfBoundsException_0;
  }
}

function $doLogicalClear(this$static){
  isNull_1(this$static.orphanCommand) && (this$static.orphanCommand = new ComplexPanel$1_0(this$static));
  try {
    tryCommand(this$static, this$static.orphanCommand);
  }
   finally {
    this$static.children = new WidgetCollection_0(this$static);
  }
}

function $getChildren(this$static){
  return this$static.children;
}

function $getWidget(this$static, index_0){
  return $get_5($getChildren(this$static), index_0);
}

function $getWidgetCount(this$static){
  return $size_1($getChildren(this$static));
}

function $getWidgetIndex(this$static, child){
  return $indexOf_1($getChildren(this$static), child);
}

function $insert(this$static, child, container, beforeIndex, domInsert){
  beforeIndex = $adjustIndex(this$static, child, beforeIndex);
  $removeFromParent(child);
  $insert_1($getChildren(this$static), child, beforeIndex);
  domInsert?insertChild_0(container, $getElement(child), beforeIndex):appendChild_0(container, $getElement(child));
  $adopt(this$static, child);
}

function $remove(this$static, index_0){
  return this$static.remove_0($getWidget(this$static, index_0));
}

function $remove_0(this$static, w){
  var elem;
  if (jsNotEquals($getParent_1(w), this$static)) {
    return false;
  }
  try {
    $orphan(this$static, w);
  }
   finally {
    elem = $getElement(w);
    $removeChild(getParent_0(elem), elem);
    $remove_5($getChildren(this$static), w);
  }
  return true;
}

function ComplexPanel_0(){
  Panel_0.call(this);
  $$init_277(this);
}

defineSeed(353, 354, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));
_.iterator = function iterator_2(){
  return $iterator_0($getChildren(this));
}
;
_.remove_0 = function remove_2(w){
  return $remove_0(this, w);
}
;
function $$init_278(){
}

function $add_1(this$static, w){
  $add_0(this$static, w, $getElement(this$static));
}

function $remove_1(this$static, w){
  var removed;
  removed = $remove_0(this$static, w);
  removed && changeToStaticPositioning($getElement(w));
  return removed;
}

function AbsolutePanel_0(elem){
  $clinit_UIObject();
  ComplexPanel_0.call(this);
  $$init_278();
  $setElement(this, elem);
}

function changeToStaticPositioning(elem){
  $setProperty_0($getStyle(elem), 'left', '');
  $setProperty_0($getStyle(elem), 'top', '');
  $setProperty_0($getStyle(elem), 'position', '');
}

defineSeed(352, 353, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));
_.add_1 = function add_4(w){
  $add_1(this, w);
}
;
_.remove_0 = function remove_3(w){
  return $remove_1(this, w);
}
;
function $$init_279(){
}

function AbstractImagePrototype_0(){
  Object_1.call(this);
  $$init_279();
}

function create_7(resource){
  return new ClippedImagePrototype_0(resource.getSafeUri(), resource.getLeft(), resource.getTop(), resource.getWidth(), resource.getHeight());
}

defineSeed(357, 1, {});
_.getSafeHtml = function getSafeHtml(){
  throw new UnsupportedOperationException_0;
}
;
function $clinit_AttachDetachException(){
  $clinit_AttachDetachException = nullMethod;
  attachCommand = new AttachDetachException$1_0;
  detachCommand = new AttachDetachException$2_0;
}

function $$init_280(){
}

function AttachDetachException_0(causes){
  UmbrellaException_2.call(this, causes);
  $$init_280();
}

function tryCommand(hasWidgets, c){
  $clinit_AttachDetachException();
  var caught, e, w, w$iterator;
  caught = null;
  for (w$iterator = hasWidgets.iterator(); w$iterator.hasNext();) {
    w = dynamicCast(w$iterator.next_0(), Q$Widget);
    try {
      c.execute_2(w);
    }
     catch ($e0) {
      $e0 = wrap($e0);
      if (instanceOf($e0, Q$Throwable)) {
        e = $e0;
        isNull_1(caught) && (caught = new HashSet_0);
        caught.add_0(e);
      }
       else 
        throw unwrap($e0);
    }
  }
  if (isNotNull(caught)) {
    throw new AttachDetachException_0(caught);
  }
}

defineSeed(358, 221, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), AttachDetachException_0);
var attachCommand, detachCommand;
function $$init_281(){
}

function AttachDetachException$1_0(){
  Object_1.call(this);
  $$init_281();
}

defineSeed(359, 1, {}, AttachDetachException$1_0);
_.execute_2 = function execute_4(w){
  w.onAttach();
}
;
function $$init_282(){
}

function AttachDetachException$2_0(){
  Object_1.call(this);
  $$init_282();
}

defineSeed(360, 1, {}, AttachDetachException$2_0);
_.execute_2 = function execute_5(w){
  w.onDetach();
}
;
function $clinit_FocusWidget(){
  $clinit_FocusWidget = nullMethod;
  $clinit_UIObject();
  getFocusImplForWidget();
}

function $$init_283(){
}

function $addClickHandler(this$static, handler){
  return $addDomHandler(this$static, handler, getType_10());
}

function $addKeyDownHandler(this$static, handler){
  return $addDomHandler(this$static, handler, getType_14());
}

function $getTabIndex_0(this$static){
  return $getTabIndex_1($getElement(this$static));
}

function $setTabIndex_0(this$static, index_0){
  $setTabIndex_1($getElement(this$static), index_0);
}

function FocusWidget_0(elem){
  $clinit_FocusWidget();
  Widget_0.call(this);
  $$init_283();
  $setElement(this, elem);
}

defineSeed(363, 355, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));
_.addKeyUpHandler = function addKeyUpHandler(handler){
  return $addDomHandler(this, handler, getType_16());
}
;
_.addMouseDownHandler = function addMouseDownHandler(handler){
  return $addDomHandler(this, handler, getType_17());
}
;
_.addMouseMoveHandler = function addMouseMoveHandler(handler){
  return $addDomHandler(this, handler, getType_18());
}
;
_.addMouseUpHandler = function addMouseUpHandler(handler){
  return $addDomHandler(this, handler, getType_21());
}
;
_.onAttach = function onAttach_0(){
  var tabIndex;
  $onAttach(this);
  tabIndex = $getTabIndex_0(this);
  -1 == tabIndex && $setTabIndex_0(this, 0);
}
;
function $$init_284(){
}

function $getText(this$static){
  return $getInnerText($getElement(this$static));
}

function $setText_0(this$static, text_0){
  $setInnerText($getElement(this$static), text_0);
}

function ButtonBase_0(elem){
  FocusWidget_0.call(this, elem);
  $$init_284();
}

defineSeed(362, 363, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));
_.getText = function getText_0(){
  return $getText(this);
}
;
_.setText = function setText(text_0){
  $setText_0(this, text_0);
}
;
function $$init_285(){
}

function Button_0(){
  $clinit_FocusWidget();
  ButtonBase_0.call(this, $createPushButtonElement(get_2()));
  $$init_285();
  this.setStyleName('gwt-Button');
}

defineSeed(361, 362, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Button_0);
function $$init_286(){
}

function ComplexPanel$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_286();
}

defineSeed(364, 1, {}, ComplexPanel$1_0);
_.execute_2 = function execute_6(w){
  $orphan(this.this$0, w);
}
;
function $$init_287(){
}

function $initWidget(this$static, widget){
  var elem;
  if (isNotNull(this$static.widget)) {
    throw new IllegalStateException_1('Composite.initWidget() may only be called once.');
  }
  instanceOf(widget, Q$IsRenderable) && (this$static , dynamicCast(widget, Q$IsRenderable));
  $removeFromParent(widget);
  elem = $getElement(widget);
  $setElement(this$static, elem);
  isPotential(elem) && $setResolver(as_3(elem), this$static);
  this$static.widget = widget;
  $setParent_0(widget, this$static);
}

function Composite_0(){
  $clinit_UIObject();
  Widget_0.call(this);
  $$init_287();
}

defineSeed(365, 355, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]));
_.isAttached = function isAttached_0(){
  if (isNotNull(this.widget)) {
    return this.widget.isAttached();
  }
  return false;
}
;
_.onAttach = function onAttach_1(){
  if (!$isOrWasAttached(this)) {
    $sinkEvents_0(this.widget, this.eventsToSink);
    this.eventsToSink = -1;
  }
  this.widget.onAttach();
  setEventListener($getElement(this), this);
  this.onLoad();
  fire_0(this, true);
}
;
_.onBrowserEvent = function onBrowserEvent_0(event_0){
  $onBrowserEvent(this, event_0);
  this.widget.onBrowserEvent(event_0);
}
;
_.onDetach = function onDetach_0(){
  try {
    this.onUnload();
    fire_0(this, false);
  }
   finally {
    this.widget.onDetach();
  }
}
;
_.resolvePotentialElement = function resolvePotentialElement_0(){
  $setElement(this, this.widget.resolvePotentialElement());
  return $getElement(this);
}
;
function $$init_288(){
}

function $add_2(this$static, w){
  if (isNotNull(this$static.getWidget())) {
    throw new IllegalStateException_1('SimplePanel can only contain one child widget');
  }
  this$static.setWidget(w);
}

function $getContainerElement(this$static){
  return $getElement(this$static);
}

function $getWidget_0(this$static){
  return this$static.widget;
}

function $setWidget(this$static, w){
  if (jsEquals(w, this$static.widget)) {
    return;
  }
  isNotNull(w) && $removeFromParent(w);
  isNotNull(this$static.widget) && this$static.remove_0(this$static.widget);
  this$static.widget = w;
  if (isNotNull(w)) {
    appendChild_0(this$static.getContainerElement(), $getElement(this$static.widget));
    $adopt(this$static, w);
  }
}

function SimplePanel_0(){
  $clinit_UIObject();
  SimplePanel_1.call(this, createDiv());
}

function SimplePanel_1(elem){
  $clinit_UIObject();
  Panel_0.call(this);
  $$init_288();
  $setElement(this, elem);
}

defineSeed(368, 354, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$SimplePanel, Q$UIObject, Q$Widget]), SimplePanel_0);
_.add_1 = function add_5(w){
  $add_2(this, w);
}
;
_.getContainerElement = function getContainerElement(){
  return $getContainerElement(this);
}
;
_.getWidget = function getWidget(){
  return $getWidget_0(this);
}
;
_.iterator = function iterator_3(){
  return new SimplePanel$1_0(this);
}
;
_.remove_0 = function remove_4(w){
  if (jsNotEquals(this.widget, w)) {
    return false;
  }
  try {
    $orphan(this, w);
  }
   finally {
    $removeChild(this.getContainerElement(), $getElement(w));
    this.widget = null;
  }
  return true;
}
;
_.setWidget = function setWidget(w){
  $setWidget(this, w);
}
;
function $clinit_PopupPanel(){
  $clinit_PopupPanel = nullMethod;
  $clinit_UIObject();
  200;
  'gwt-PopupPanel';
  impl_7 = new PopupImpl_0;
}

function $$init_289(this$static){
  this$static.glassResizer = new PopupPanel$1_0(this$static);
  this$static.animType = ($clinit_PopupPanel$AnimationType() , CENTER_0);
  this$static.glassStyleName = 'gwt-PopupPanelGlass';
  this$static.isAnimationEnabled = false;
  this$static.leftPosition = -1;
  this$static.resizeAnimation = new PopupPanel$ResizeAnimation_0(this$static);
  this$static.topPosition = -1;
}

function $addPopupListener(this$static, listener){
  add_12(this$static, listener);
}

function $blur(elt){
  if (elt.blur && elt != $doc.body) {
    elt.blur();
  }
}

function $center(this$static){
  var elem, initiallyAnimated, initiallyShowing, left, top_0;
  initiallyShowing = this$static.showing;
  initiallyAnimated = this$static.isAnimationEnabled;
  if (!initiallyShowing) {
    $setVisible(this$static, false);
    $setAnimationEnabled(this$static, false);
    this$static.show();
  }
  elem = $getElement(this$static);
  $setPropertyPx($getStyle(elem), 'left', 0);
  $setPropertyPx($getStyle(elem), 'top', 0);
  left = ~~(getClientWidth() - $getOffsetWidth_1(this$static)) >> 1;
  top_0 = ~~(getClientHeight() - $getOffsetHeight_1(this$static)) >> 1;
  $setPopupPosition(this$static, max_0(getScrollLeft_3() + left, 0), max_0(getScrollTop_1() + top_0, 0));
  if (!initiallyShowing) {
    $setAnimationEnabled(this$static, initiallyAnimated);
    if (initiallyAnimated) {
      $setClip($getElement(this$static), 'rect(0px, 0px, 0px, 0px)');
      $setVisible(this$static, true);
      $run(this$static.resizeAnimation, 200);
    }
     else {
      $setVisible(this$static, true);
    }
  }
}

function $eventTargetsPartner(this$static, event_0){
  var elem, elem$iterator, target;
  if (isNull_1(this$static.autoHidePartners)) {
    return false;
  }
  target = $getEventTarget(event_0);
  if (is_0(target)) {
    for (elem$iterator = this$static.autoHidePartners.iterator(); elem$iterator.hasNext();) {
      elem = dynamicCastJso(elem$iterator.next_0());
      if ($isOrHasChild(elem, as(target))) {
        return true;
      }
    }
  }
  return false;
}

function $eventTargetsPopup(this$static, event_0){
  var target;
  target = $getEventTarget(event_0);
  if (is_0(target)) {
    return $isOrHasChild($getElement(this$static), as(target));
  }
  return false;
}

function $getContainerElement_0(this$static){
  return $cast($getContainerElement_2($getPopupImplElement(this$static)));
}

function $getOffsetHeight_1(this$static){
  return $getOffsetHeight_0(this$static);
}

function $getOffsetWidth_1(this$static){
  return $getOffsetWidth_0(this$static);
}

function $getPopupImplElement(this$static){
  return getFirstChild($getContainerElement(this$static));
}

function $hide(this$static){
  this$static.hide_0(false);
}

function $hide_0(this$static, autoClosed){
  if (!$isShowing(this$static)) {
    return;
  }
  $setState(this$static.resizeAnimation, false, false);
  fire_2(this$static, this$static, autoClosed);
}

function $isShowing(this$static){
  return this$static.showing;
}

function $maybeUpdateSize(this$static){
  var w;
  w = $getWidget_0(this$static);
  if (isNotNull(w)) {
    jsNotEquals(this$static.desiredHeight, null) && w.setHeight(this$static.desiredHeight);
    jsNotEquals(this$static.desiredWidth, null) && w.setWidth(this$static.desiredWidth);
  }
}

function $onEventPreview(){
  return true;
}

function $onKeyDownPreview(){
  return true;
}

function $onKeyPressPreview(){
  return true;
}

function $onKeyUpPreview(){
  return true;
}

function $onPreviewNativeEvent(event_0){
  $isFirstHandler(event_0) && !$onEventPreview(as_2($getNativeEvent_0(event_0))) && $cancel_2(event_0);
}

function $previewNativeEvent(this$static, event_0){
  var eventTargetsPopupOrPartner, nativeEvent, target, type_0;
  if ($isCanceled(event_0) || !this$static.previewAllNativeEvents && $isConsumed(event_0)) {
    this$static.modal && $cancel_2(event_0);
    return;
  }
  this$static.onPreviewNativeEvent(event_0);
  if ($isCanceled(event_0)) {
    return;
  }
  nativeEvent = as_2($getNativeEvent_0(event_0));
  eventTargetsPopupOrPartner = $eventTargetsPopup(this$static, nativeEvent) || $eventTargetsPartner(this$static, nativeEvent);
  eventTargetsPopupOrPartner && $consume(event_0);
  this$static.modal && $cancel_2(event_0);
  type_0 = $getTypeInt(nativeEvent);
  switch (type_0) {
    case 128:
      {
        $onKeyDownPreview((narrow_char($getKeyCode(nativeEvent)) , getKeyboardModifiers(nativeEvent))) || $cancel_2(event_0);
        return;
      }

    case 512:
      {
        $onKeyUpPreview((narrow_char($getKeyCode(nativeEvent)) , getKeyboardModifiers(nativeEvent))) || $cancel_2(event_0);
        return;
      }

    case 256:
      {
        $onKeyPressPreview((narrow_char($getKeyCode(nativeEvent)) , getKeyboardModifiers(nativeEvent))) || $cancel_2(event_0);
        return;
      }

    case 4:
    case 1048576:
      if (isNotNull(getCaptureElement())) {
        $consume(event_0);
        return;
      }

      if (!eventTargetsPopupOrPartner && this$static.autoHide) {
        this$static.hide_0(true);
        return;
      }

      break;
    case 8:
    case 64:
    case 1:
    case 2:
    case 4194304:
      {
        if (isNotNull(getCaptureElement())) {
          $consume(event_0);
          return;
        }
        break;
      }

    case 2048:
      {
        target = $getTarget_0(nativeEvent);
        if (this$static.modal && !eventTargetsPopupOrPartner && isNotNull(target)) {
          $blur(target);
          $cancel_2(event_0);
          return;
        }
        break;
      }

  }
}

function $setAnimationEnabled(this$static, enable){
  this$static.isAnimationEnabled = enable;
}

function $setAnimationType(this$static, type_0){
  this$static.animType = type_0;
}

function $setGlassEnabled(this$static, enabled){
  this$static.isGlassEnabled = enabled;
  if (enabled && isNull_1(this$static.glass)) {
    this$static.glass = $createDivElement(get_2());
    $setClassName(this$static.glass, this$static.glassStyleName);
    $setPosition($getStyle(this$static.glass), ($clinit_Style$Position() , ABSOLUTE));
    $setLeft($getStyle(this$static.glass), 0, ($clinit_Style$Unit() , PX));
    $setTop($getStyle(this$static.glass), 0, ($clinit_Style$Unit() , PX));
  }
}

function $setGlassStyleName(this$static, glassStyleName){
  this$static.glassStyleName = glassStyleName;
  isNotNull(this$static.glass) && $setClassName(this$static.glass, glassStyleName);
}

function $setPopupPosition(this$static, left, top_0){
  var elem;
  this$static.leftPosition = left;
  this$static.topPosition = top_0;
  left -= $getBodyOffsetLeft_0(get_2());
  top_0 -= $getBodyOffsetTop_0(get_2());
  elem = $getElement(this$static);
  $setPropertyPx($getStyle(elem), 'left', left);
  $setPropertyPx($getStyle(elem), 'top', top_0);
}

function $setPopupPositionAndShow(this$static, callback){
  $setVisible(this$static, false);
  this$static.show();
  callback.setPosition($getOffsetWidth_1(this$static), $getOffsetHeight_1(this$static));
  $setVisible(this$static, true);
}

function $setPreviewingAllNativeEvents(this$static, previewAllNativeEvents){
  this$static.previewAllNativeEvents = previewAllNativeEvents;
}

function $setVisible(this$static, visible){
  $setProperty_0($getStyle($getElement(this$static)), 'visibility', visible?'visible':'hidden');
  $setVisible_0($getElement(this$static));
  if (isNotNull(this$static.glass)) {
    $setVisible_0();
    $setProperty_0($getStyle(this$static.glass), 'visibility', visible?'visible':'hidden');
  }
}

function $setWidget_0(this$static, w){
  $setWidget(this$static, w);
  $maybeUpdateSize(this$static);
}

function $show(this$static){
  if (this$static.showing) {
    return;
  }
   else 
    this$static.isAttached() && $removeFromParent(this$static);
  $setState(this$static.resizeAnimation, true, false);
}

function $updateHandlers(this$static){
  if (isNotNull(this$static.nativePreviewHandlerRegistration)) {
    this$static.nativePreviewHandlerRegistration.removeHandler();
    this$static.nativePreviewHandlerRegistration = null;
  }
  if (isNotNull(this$static.historyHandlerRegistration)) {
    this$static.historyHandlerRegistration.removeHandler();
    this$static.historyHandlerRegistration = null;
  }
  if (this$static.showing) {
    this$static.nativePreviewHandlerRegistration = addNativePreviewHandler(new PopupPanel$3_0(this$static));
    this$static.historyHandlerRegistration = addValueChangeHandler(new PopupPanel$4_0(this$static));
  }
}

function PopupPanel_0(){
  $clinit_PopupPanel();
  SimplePanel_0.call(this);
  $$init_289(this);
  $appendChild($getContainerElement(this), $createElement_2());
  $setPopupPosition(this, 0, 0);
  this.setStyleName('gwt-PopupPanel');
  setStyleName($getContainerElement_0(this), 'popupContent');
}

function PopupPanel_1(autoHide){
  PopupPanel_0.call(this);
  this.autoHide = autoHide;
  this.autoHideOnHistoryEvents = autoHide;
}

function PopupPanel_2(autoHide, modal){
  PopupPanel_1.call(this, autoHide);
  this.modal = modal;
}

defineSeed(367, 368, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$PopupPanel, Q$SimplePanel, Q$UIObject, Q$Widget]));
_.addCloseHandler = function addCloseHandler_1(handler){
  return $addHandler_2(this, handler, getType_23());
}
;
_.getContainerElement = function getContainerElement_0(){
  return $getContainerElement_0(this);
}
;
_.getOffsetHeight = function getOffsetHeight_0(){
  return $getOffsetHeight_1(this);
}
;
_.getOffsetWidth = function getOffsetWidth_0(){
  return $getOffsetWidth_1(this);
}
;
_.getStyleElement = function getStyleElement_0(){
  return $cast($getStyleElement($getPopupImplElement(this)));
}
;
_.hide = function hide(){
  $hide(this);
}
;
_.hide_0 = function hide_0(autoClosed){
  $hide_0(this, autoClosed);
}
;
_.onPreviewNativeEvent = function onPreviewNativeEvent(event_0){
  $onPreviewNativeEvent(event_0);
}
;
_.onUnload = function onUnload_0(){
  $onUnload();
  $isShowing(this) && $setState(this.resizeAnimation, false, true);
}
;
_.setHeight = function setHeight_0(height){
  this.desiredHeight = height;
  $maybeUpdateSize(this);
  $length_1(height) == 0 && (this.desiredHeight = null);
}
;
_.setVisible = function setVisible_1(visible){
  $setVisible(this, visible);
}
;
_.setWidget = function setWidget_0(w){
  $setWidget_0(this, w);
}
;
_.setWidth = function setWidth_0(width_0){
  this.desiredWidth = width_0;
  $maybeUpdateSize(this);
  $length_1(width_0) == 0 && (this.desiredWidth = null);
}
;
_.show = function show(){
  $show(this);
}
;
_.autoHide = false;
_.autoHideOnHistoryEvents = false;
_.isAnimationEnabled = false;
_.isGlassEnabled = false;
_.leftPosition = 0;
_.modal = false;
_.previewAllNativeEvents = false;
_.showing = false;
_.topPosition = 0;
var impl_7;
function $$init_290(){
}

function $doAttachChildren(this$static){
  this$static.decPanel.onAttach();
}

function $doDetachChildren(this$static){
  this$static.decPanel.onDetach();
}

function $getCellElement(this$static, row, cell){
  return asOld($getCellElement_0(this$static.decPanel, row, cell));
}

function $setWidget_1(this$static, w){
  this$static.decPanel.setWidget(w);
  $maybeUpdateSize(this$static);
}

function DecoratedPopupPanel_0(autoHide, modal, prefix){
  var rowStyles;
  PopupPanel_2.call(this, autoHide, modal);
  $$init_290();
  rowStyles = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, [prefix + 'Top', prefix + 'Middle', prefix + 'Bottom']);
  this.decPanel = new DecoratorPanel_0(rowStyles, 1);
  this.decPanel.setStyleName('');
  this.setStylePrimaryName('gwt-DecoratedPopupPanel');
  $setWidget_0(this, this.decPanel);
  setStyleName_0($getContainerElement_0(this), 'popupContent', false);
  setStyleName_0($getContainerElement_1(this.decPanel), prefix + 'Content', true);
}

defineSeed(366, 367, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$PopupPanel, Q$SimplePanel, Q$UIObject, Q$Widget]));
_.clear_0 = function clear_2(){
  this.decPanel.clear_0();
}
;
_.doAttachChildren = function doAttachChildren_1(){
  $doAttachChildren(this);
}
;
_.doDetachChildren = function doDetachChildren_1(){
  $doDetachChildren(this);
}
;
_.getWidget = function getWidget_0(){
  return this.decPanel.getWidget();
}
;
_.iterator = function iterator_4(){
  return this.decPanel.iterator();
}
;
_.remove_0 = function remove_5(w){
  return this.decPanel.remove_0(w);
}
;
_.setWidget = function setWidget_1(w){
  $setWidget_1(this, w);
}
;
function $clinit_DecoratorPanel(){
  $clinit_DecoratorPanel = nullMethod;
  $clinit_UIObject();
  'gwt-DecoratorPanel';
  initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['top', 'middle', 'bottom']);
}

function $$init_291(){
}

function $getCellElement_0(this$static, row, cell){
  var td, tr;
  tr = getChild(this$static.tbody, row);
  td = getChild(tr, cell);
  return asOld(getFirstChild(td));
}

function $getContainerElement_1(this$static){
  return asOld(this$static.containerElem);
}

function DecoratorPanel_0(rowStyles, containerIndex){
  $clinit_DecoratorPanel();
  var i, row, table;
  SimplePanel_1.call(this, createTable());
  $$init_291();
  table = $getElement(this);
  this.tbody = createTBody();
  appendChild(table, this.tbody);
  $setPropertyInt(table, 'cellSpacing', 0);
  $setPropertyInt(table, 'cellPadding', 0);
  for (i = 0; i < rowStyles.length; i++) {
    row = createTR_0(rowStyles[i]);
    appendChild(this.tbody, row);
    i == containerIndex && (this.containerElem = getFirstChild(getChild(row, 1)));
  }
  this.setStyleName('gwt-DecoratorPanel');
}

function createTD_0(styleName){
  var inner, tdElem;
  tdElem = createTD();
  inner = createDiv();
  appendChild(tdElem, inner);
  setStyleName(tdElem, styleName);
  setStyleName(inner, styleName + 'Inner');
  return tdElem;
}

function createTR_0(styleName){
  var trElem;
  trElem = createTR();
  setStyleName(trElem, styleName);
  if ($isRTL_0(getCurrentLocale())) {
    appendChild(trElem, createTD_0(styleName + 'Right'));
    appendChild(trElem, createTD_0(styleName + 'Center'));
    appendChild(trElem, createTD_0(styleName + 'Left'));
  }
   else {
    appendChild(trElem, createTD_0(styleName + 'Left'));
    appendChild(trElem, createTD_0(styleName + 'Center'));
    appendChild(trElem, createTD_0(styleName + 'Right'));
  }
  return trElem;
}

defineSeed(369, 368, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$SimplePanel, Q$UIObject, Q$Widget]), DecoratorPanel_0);
_.getContainerElement = function getContainerElement_1(){
  return $getContainerElement_1(this);
}
;
function $$init_292(){
}

function $beginDragging(this$static, event_0){
  $onMouseDown(this$static, (this$static.caption.asWidget() , $getX(event_0)), $getY(event_0));
}

function $continueDragging(this$static, event_0){
  $onMouseMove(this$static, (this$static.caption.asWidget() , $getX(event_0)), $getY(event_0));
}

function $endDragging(this$static, event_0){
  $onMouseUp(this$static, (this$static.caption.asWidget() , $getX(event_0) , $getY(event_0)));
}

function $isCaptionEvent(this$static, event_0){
  var target;
  target = $getEventTarget(event_0);
  if (is_0(target)) {
    return $isOrHasChild($getParentElement($getCellElement(this$static, 0, 1)), as(target));
  }
  return false;
}

function $onMouseDown(this$static, x_0, y_0){
  if (isNull_1(getCaptureElement())) {
    this$static.dragging = true;
    setCapture($getElement(this$static));
    this$static.dragStartX = x_0;
    this$static.dragStartY = y_0;
  }
}

function $onMouseEnter(){
}

function $onMouseLeave(){
}

function $onMouseMove(this$static, x_0, y_0){
  var absX, absY;
  if (this$static.dragging) {
    absX = x_0 + $getAbsoluteLeft_0(this$static);
    absY = y_0 + $getAbsoluteTop_0(this$static);
    if (absX < this$static.clientLeft || absX >= this$static.windowWidth || absY < this$static.clientTop) {
      return;
    }
    $setPopupPosition(this$static, absX - this$static.dragStartX, absY - this$static.dragStartY);
  }
}

function $onMouseUp(this$static){
  this$static.dragging = false;
  releaseCapture($getElement(this$static));
}

function $setText_1(this$static, text_0){
  this$static.caption.setText(text_0);
}

function $show_0(this$static){
  isNull_1(this$static.resizeHandlerRegistration) && (this$static.resizeHandlerRegistration = addResizeHandler(new DialogBox$1_0(this$static)));
  $show(this$static);
}

function DialogBox_0(){
  $clinit_PopupPanel();
  DialogBox_1.call(this, false);
}

function DialogBox_1(autoHide){
  DialogBox_2.call(this, autoHide, true);
}

function DialogBox_2(autoHide, modal){
  $clinit_PopupPanel();
  DialogBox_3.call(this, autoHide, modal, new DialogBox$CaptionImpl_0);
}

function DialogBox_3(autoHide, modal, captionWidget){
  var mouseHandler, td;
  DecoratedPopupPanel_0.call(this, autoHide, modal, 'dialog');
  $$init_292();
  if (isNull_1(captionWidget)) {
    debugger;
    throw makeAssertionError_Object('The caption must not be null');
  }
  $removeFromParent(captionWidget.asWidget());
  this.caption = captionWidget;
  td = $getCellElement(this, 0, 1);
  appendChild(td, $getElement(this.caption.asWidget()));
  $adopt(this, this.caption.asWidget());
  this.setStyleName('gwt-DialogBox');
  this.windowWidth = getClientWidth();
  this.clientLeft = $getBodyOffsetLeft_0(get_2());
  this.clientTop = $getBodyOffsetTop_0(get_2());
  mouseHandler = new DialogBox$MouseHandler_0(this);
  $addDomHandler(this, mouseHandler, getType_17());
  $addDomHandler(this, mouseHandler, getType_21());
  $addDomHandler(this, mouseHandler, getType_18());
  $addDomHandler(this, mouseHandler, getType_20());
  $addDomHandler(this, mouseHandler, getType_19());
}

defineSeed(370, 366, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$PopupPanel, Q$SimplePanel, Q$UIObject, Q$Widget]), DialogBox_0, DialogBox_2);
_.doAttachChildren = function doAttachChildren_2(){
  try {
    $doAttachChildren(this);
  }
   finally {
    this.caption.asWidget().onAttach();
  }
}
;
_.doDetachChildren = function doDetachChildren_2(){
  try {
    $doDetachChildren(this);
  }
   finally {
    this.caption.asWidget().onDetach();
  }
}
;
_.getText = function getText_1(){
  return this.caption.getText();
}
;
_.hide_0 = function hide_1(autoClosed){
  if (isNotNull(this.resizeHandlerRegistration)) {
    this.resizeHandlerRegistration.removeHandler();
    this.resizeHandlerRegistration = null;
  }
  $hide_0(this, autoClosed);
}
;
_.onBrowserEvent = function onBrowserEvent_1(event_0){
  switch ($getTypeInt(event_0)) {
    case 4:
    case 8:
    case 64:
    case 16:
    case 32:
      if (!this.dragging && !$isCaptionEvent(this, event_0)) {
        return;
      }

  }
  $onBrowserEvent(this, event_0);
}
;
_.onPreviewNativeEvent = function onPreviewNativeEvent_0(event_0){
  var nativeEvent;
  nativeEvent = $getNativeEvent_0(event_0);
  !$isCanceled(event_0) && $getTypeInt_0(event_0) == 4 && $isCaptionEvent(this, nativeEvent) && $preventDefault(nativeEvent);
  $onPreviewNativeEvent(event_0);
}
;
_.setText = function setText_0(text_0){
  $setText_1(this, text_0);
}
;
_.show = function show_0(){
  $show_0(this);
}
;
_.clientLeft = 0;
_.clientTop = 0;
_.dragStartX = 0;
_.dragStartY = 0;
_.dragging = false;
_.windowWidth = 0;
function $$init_293(){
}

function DialogBox$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_293();
}

defineSeed(371, 1, makeCastMap([Q$ResizeHandler, Q$EventHandler]), DialogBox$1_0);
_.onResize = function onResize_0(event_0){
  this.this$0.windowWidth = $getWidth(event_0);
}
;
function $$init_294(){
}

function $updateHorizontalAlignment(this$static){
  var align_0;
  isNull_1(this$static.autoHorizontalAlignment)?(align_0 = null):instanceOf(this$static.autoHorizontalAlignment, Q$HasHorizontalAlignment$HorizontalAlignmentConstant)?(align_0 = dynamicCast(this$static.autoHorizontalAlignment, Q$HasHorizontalAlignment$HorizontalAlignmentConstant)):(align_0 = jsEquals(this$static.autoHorizontalAlignment, ($clinit_HasAutoHorizontalAlignment() , ALIGN_CONTENT_START))?startOf($getTextDirection(this$static.directionalTextHelper)):endOf($getTextDirection(this$static.directionalTextHelper)));
  if (jsNotEquals(align_0, this$static.horzAlign)) {
    this$static.horzAlign = align_0;
    $setProperty_0($getStyle($getElement(this$static)), 'textAlign', isNull_1(this$static.horzAlign)?'':$getTextAlignString(this$static.horzAlign));
  }
}

function LabelBase_0(element){
  $clinit_UIObject();
  LabelBase_1.call(this, element, $equalsIgnoreCase('span', $getTagName(element)));
}

function LabelBase_1(element, isElementInline){
  Widget_0.call(this);
  $$init_294();
  if (!$equalsIgnoreCase(isElementInline?'span':'div', $getTagName(element))) {
    debugger;
    throw makeAssertionError();
  }
  $setElement(this, element);
  this.directionalTextHelper = new DirectionalTextHelper_0($getElement(this), isElementInline);
}

function LabelBase_2(inline){
  $clinit_UIObject();
  LabelBase_1.call(this, inline?$createSpanElement(get_2()):$createDivElement(get_2()), inline);
}

defineSeed(375, 355, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));
function $clinit_Label(){
  $clinit_Label = nullMethod;
  $clinit_UIObject();
  $clinit_DirectionalTextHelper() , DEFAULT_DIRECTION_ESTIMATOR;
}

function $$init_295(){
}

function $getText_0(this$static){
  return $getTextOrHtml(this$static.directionalTextHelper, false);
}

function $setText_2(this$static, text_0){
  $setTextOrHtml_0(this$static.directionalTextHelper, text_0, false);
  $updateHorizontalAlignment(this$static);
}

function Label_0(){
  $clinit_Label();
  LabelBase_2.call(this, false);
  $$init_295();
  this.setStyleName('gwt-Label');
}

function Label_1(element){
  LabelBase_0.call(this, element);
  $$init_295();
}

function Label_2(text_0){
  $clinit_Label();
  Label_0.call(this);
  $setText_2(this, text_0);
}

defineSeed(374, 375, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Label_0, Label_2);
_.addMouseDownHandler = function addMouseDownHandler_0(handler){
  return $addDomHandler(this, handler, getType_17());
}
;
_.addMouseMoveHandler = function addMouseMoveHandler_0(handler){
  return $addDomHandler(this, handler, getType_18());
}
;
_.addMouseUpHandler = function addMouseUpHandler_0(handler){
  return $addDomHandler(this, handler, getType_21());
}
;
_.getDirection = function getDirection(){
  return getDirectionOnElement($getElement(this));
}
;
_.getText = function getText_2(){
  return $getText_0(this);
}
;
_.setDirection = function setDirection(direction){
  $setDirection(this.directionalTextHelper, direction);
  $updateHorizontalAlignment(this);
}
;
_.setText = function setText_1(text_0){
  $setText_2(this, text_0);
}
;
function $$init_296(){
}

function $setHTML(this$static, html){
  $setTextOrHtml_0(this$static.directionalTextHelper, html, true);
  $updateHorizontalAlignment(this$static);
}

function HTML_0(){
  $clinit_Label();
  Label_1.call(this, $createDivElement(get_2()));
  $$init_296();
  this.setStyleName('gwt-HTML');
}

function HTML_1(html){
  $clinit_Label();
  HTML_0.call(this);
  $setHTML(this, html);
}

defineSeed(373, 374, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), HTML_0, HTML_1);
function $$init_297(){
}

function DialogBox$CaptionImpl_0(){
  $clinit_Label();
  HTML_0.call(this);
  $$init_297();
  this.setStyleName('Caption');
}

defineSeed(372, 373, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), DialogBox$CaptionImpl_0);
function $$init_298(){
}

function DialogBox$MouseHandler_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_298();
}

defineSeed(376, 1, makeCastMap([Q$MouseDownHandler, Q$MouseMoveHandler, Q$MouseOutHandler, Q$MouseOverHandler, Q$MouseUpHandler, Q$EventHandler]), DialogBox$MouseHandler_0);
_.onMouseDown = function onMouseDown(event_0){
  $beginDragging(this.this$0, event_0);
}
;
_.onMouseMove = function onMouseMove(event_0){
  $continueDragging(this.this$0, event_0);
}
;
_.onMouseOut = function onMouseOut(event_0){
  $onMouseLeave(this.this$0.caption.asWidget());
}
;
_.onMouseOver = function onMouseOver(event_0){
  $onMouseEnter(this.this$0.caption.asWidget());
}
;
_.onMouseUp = function onMouseUp(event_0){
  $endDragging(this.this$0, event_0);
}
;
function $clinit_DirectionalTextHelper(){
  $clinit_DirectionalTextHelper = nullMethod;
  DEFAULT_DIRECTION_ESTIMATOR = get_5();
}

function $$init_299(){
}

function $getTextDirection(this$static){
  return this$static.textDir;
}

function $getTextOrHtml(this$static, isHtml){
  var elem;
  elem = this$static.isSpanWrapped?$getFirstChildElement(this$static.element):this$static.element;
  return isHtml?$getInnerHTML(elem):$getInnerText(elem);
}

function $setDirection(this$static, direction){
  setDirectionOnElement(this$static.element, direction);
  this$static.initialElementDir = direction;
  $setInnerTextOrHtml(this$static, $getTextOrHtml(this$static, true), true);
  this$static.isSpanWrapped = false;
  this$static.textDir = this$static.initialElementDir;
  this$static , true;
}

function $setInnerTextOrHtml(this$static, content_0, isHtml){
  isHtml?$setInnerHTML(this$static.element, content_0):$setInnerText(this$static.element, content_0);
}

function $setTextOrHtml(this$static, content_0, dir_0, isHtml){
  this$static.textDir = dir_0;
  if (this$static.isElementInline) {
    this$static.isSpanWrapped = true;
    $setInnerHTML(this$static.element, $spanWrapWithKnownDir(getInstanceForCurrentLocale_0(true), dir_0, content_0, isHtml));
  }
   else {
    this$static.isSpanWrapped = false;
    setDirectionOnElement(this$static.element, dir_0);
    $setInnerTextOrHtml(this$static, content_0, isHtml);
  }
  this$static , true;
}

function $setTextOrHtml_0(this$static, content_0, isHtml){
  if (isNull_1(this$static.directionEstimator)) {
    this$static.isSpanWrapped = false;
    $setInnerTextOrHtml(this$static, content_0, isHtml);
    if (jsNotEquals(this$static.textDir, this$static.initialElementDir)) {
      this$static.textDir = this$static.initialElementDir;
      setDirectionOnElement(this$static.element, this$static.initialElementDir);
    }
  }
   else {
    $setTextOrHtml(this$static, content_0, $estimateDirection_0(this$static.directionEstimator, content_0, isHtml), isHtml);
  }
  this$static , false;
}

function DirectionalTextHelper_0(element, isElementInline){
  $clinit_DirectionalTextHelper();
  Object_1.call(this);
  $$init_299();
  this.element = element;
  this.isElementInline = isElementInline;
  this.isSpanWrapped = false;
  this.initialElementDir = getDirectionOnElement(element);
  this.textDir = this.initialElementDir;
  this , true;
}

defineSeed(377, 1, {}, DirectionalTextHelper_0);
_.isElementInline = false;
_.isSpanWrapped = false;
var DEFAULT_DIRECTION_ESTIMATOR;
function $clinit_HTMLTable(){
  $clinit_HTMLTable = nullMethod;
  $clinit_UIObject();
  impl_8 = new HTMLTable$HTMLTableStandardImpl_0;
}

function $$init_300(this$static){
  this$static.widgetMap = new ElementMapperImpl_0;
}

function $addCells(tbody, row, num){
  var i, rowElem, tdElement;
  rowElem = $get(impl_8.getRows(tbody), row);
  for (i = 0; i < num; i++) {
    tdElement = $createTDElement(get_2());
    $appendChild(rowElem, tdElement);
  }
}

function $checkCellBounds(this$static, row, column){
  var cellSize;
  $checkRowBounds(this$static, row);
  if (column < 0) {
    throw new IndexOutOfBoundsException_1('Column ' + column + ' must be non-negative: ' + column);
  }
  cellSize = this$static.getCellCount(row);
  if (cellSize <= column) {
    throw new IndexOutOfBoundsException_1('Column index: ' + column + ', Column size: ' + this$static.getCellCount(row));
  }
}

function $checkRowBounds(this$static, row){
  var rowSize;
  rowSize = this$static.getRowCount();
  if (row >= rowSize || row < 0) {
    throw new IndexOutOfBoundsException_1('Row index: ' + row + ', Row size: ' + rowSize);
  }
}

function $cleanCell(this$static, row, column, clearInnerHTML){
  var td;
  td = $getRawElement($getCellFormatter(this$static), row, column);
  $internalClearCell(this$static, td, clearInnerHTML);
  return td;
}

function $clear(this$static, clearInnerHTML){
  var col, row;
  for (row = 0; row < this$static.getRowCount(); ++row) {
    for (col = 0; col < this$static.getCellCount(row); ++col) {
      $cleanCell(this$static, row, col, clearInnerHTML);
    }
  }
}

function $getBodyElement(this$static){
  return asOld(this$static.bodyElem);
}

function $getCellFormatter(this$static){
  return this$static.cellFormatter;
}

function $getDOMCellCount(tableBody, row){
  var rowElement;
  rowElement = $get(impl_8.getRows(tableBody), row);
  return $length(impl_8.getCells(rowElement));
}

function $getDOMRowCount(this$static){
  return $getDOMRowCount_0(this$static.bodyElem);
}

function $getDOMRowCount_0(tbody){
  return $getDOMRowCount_1(asOld(tbody));
}

function $getDOMRowCount_1(tbody){
  return $length(impl_8.getRows(tbody));
}

function $insertRow(this$static, beforeRow){
  var tr;
  beforeRow != this$static.getRowCount() && $checkRowBounds(this$static, beforeRow);
  tr = createTR();
  insertChild(this$static.bodyElem, tr, beforeRow);
  return beforeRow;
}

function $internalClearCell(this$static, td, clearInnerHTML){
  return $internalClearCell_0(this$static, asOld(td), clearInnerHTML);
}

function $internalClearCell_0(this$static, td, clearInnerHTML){
  var maybeChild, widget;
  maybeChild = getFirstChild(td);
  widget = null;
  isNotNull(maybeChild) && (widget = dynamicCast($get_3(this$static.widgetMap, maybeChild), Q$Widget));
  if (isNotNull(widget)) {
    $remove_2(this$static, widget);
    return true;
  }
   else {
    clearInnerHTML && $setInnerHTML(td, '');
    return false;
  }
}

function $remove_2(this$static, widget){
  var elem;
  if (jsNotEquals($getParent_1(widget), this$static)) {
    return false;
  }
  try {
    $orphan(this$static, widget);
  }
   finally {
    elem = $getElement(widget);
    $removeChild(getParent_0(elem), elem);
    $removeByElement(this$static.widgetMap, elem);
  }
  return true;
}

function $setCellFormatter(this$static, cellFormatter){
  this$static.cellFormatter = cellFormatter;
}

function $setColumnFormatter(this$static, formatter){
  isNotNull(this$static.columnFormatter) && (formatter.columnGroup = this$static.columnFormatter.columnGroup);
  this$static.columnFormatter = formatter;
  $prepareColumnGroup(this$static.columnFormatter);
}

function $setRowFormatter(this$static, rowFormatter){
  this$static , rowFormatter;
}

function $setWidget_2(this$static, row, column, widget){
  $setWidget_3(this$static, row, column, asWidgetOrNull(widget));
}

function $setWidget_3(this$static, row, column, widget){
  var td;
  this$static.prepareCell(row, column);
  td = $cleanCell(this$static, row, column, true);
  if (isNotNull(widget)) {
    $removeFromParent(widget);
    $put(this$static.widgetMap, widget);
    appendChild(td, $getElement(widget));
    $adopt(this$static, widget);
  }
}

function HTMLTable_0(){
  Panel_0.call(this);
  $$init_300(this);
  this.tableElem = createTable();
  this.bodyElem = createTBody();
  appendChild(this.tableElem, this.bodyElem);
  $setElement(this, this.tableElem);
}

defineSeed(379, 354, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HTMLTable, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));
_.clear_0 = function clear_3(){
  $clear(this, false);
}
;
_.iterator = function iterator_5(){
  return new HTMLTable$1_0(this);
}
;
_.remove_0 = function remove_6(widget){
  return $remove_2(this, widget);
}
;
var impl_8;
function $$init_301(){
}

function $getCellCount(this$static, row){
  $checkRowBounds(this$static, row);
  return $getDOMCellCount($getBodyElement(this$static), row);
}

function $getRowCount(this$static){
  return $getDOMRowCount(this$static);
}

function $insertRow_0(this$static, beforeRow){
  return $insertRow(this$static, beforeRow);
}

function $prepareRow(this$static, row){
  var i, rowCount;
  if (row < 0) {
    throw new IndexOutOfBoundsException_1('Cannot create a row with a negative index: ' + row);
  }
  rowCount = $getRowCount(this$static);
  for (i = rowCount; i <= row; i++) {
    $insertRow_0(this$static, i);
  }
}

function FlexTable_0(){
  $clinit_HTMLTable();
  HTMLTable_0.call(this);
  $$init_301();
  $setCellFormatter(this, new FlexTable$FlexCellFormatter_0(this));
  $setRowFormatter(this, new HTMLTable$RowFormatter_0(this));
  $setColumnFormatter(this, new HTMLTable$ColumnFormatter_0(this));
}

defineSeed(378, 379, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HTMLTable, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), FlexTable_0);
_.getCellCount = function getCellCount(row){
  return $getCellCount(this, row);
}
;
_.getRowCount = function getRowCount(){
  return $getRowCount(this);
}
;
_.prepareCell = function prepareCell(row, column){
  var cellCount, required;
  $prepareRow(this, row);
  if (column < 0) {
    throw new IndexOutOfBoundsException_1('Cannot create a column with a negative index: ' + column);
  }
  cellCount = $getCellCount(this, row);
  required = column + 1 - cellCount;
  required > 0 && $addCells($getBodyElement(this), row, required);
}
;
function $$init_302(){
}

function $ensureElement(this$static, row, column){
  this$static.this$0.prepareCell(row, column);
  return asOld($getCellElement_1(this$static.this$0.bodyElem, row, column));
}

function $getCellElement_1(tbody, row, col){
  return $get(($clinit_HTMLTable() , impl_8).getCells($get(($clinit_HTMLTable() , impl_8).getRows(tbody), row)), col);
}

function $getElement_0(this$static, row, column){
  $checkCellBounds(this$static.this$0, row, column);
  return asOld($getCellElement_1(this$static.this$0.bodyElem, row, column));
}

function $getRawElement(this$static, row, column){
  return $getCellElement_1(this$static.this$0.bodyElem, row, column);
}

function $setStyleName(this$static, row, column, styleName){
  this$static.this$0.prepareCell(row, column);
  setStyleName($getCellElement_1(this$static.this$0.bodyElem, row, column), styleName);
}

function HTMLTable$CellFormatter_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_302();
}

defineSeed(381, 1, {});
function $$init_303(){
}

function $setColSpan(this$static, row, column, colSpan){
  $setPropertyInt($ensureElement(this$static, row, column), 'colSpan', colSpan);
}

function FlexTable$FlexCellFormatter_0(this$0){
  this , this$0;
  HTMLTable$CellFormatter_0.call(this, this$0);
  $$init_303();
}

defineSeed(380, 381, makeCastMap([Q$FlexTable$FlexCellFormatter]), FlexTable$FlexCellFormatter_0);
function $$init_304(){
}

function $add_3(this$static, w){
  $add_0(this$static, w, $getElement(this$static));
}

function $clear_0(this$static){
  var child;
  try {
    $doLogicalClear(this$static);
  }
   finally {
    child = $getFirstChild($getElement(this$static));
    while (isNotNull(child)) {
      $removeChild($getElement(this$static), child);
      child = $getFirstChild($getElement(this$static));
    }
  }
}

function $insert_0(this$static, w, beforeIndex){
  $insert(this$static, w, $getElement(this$static), beforeIndex, true);
}

function FlowPanel_0(){
  $clinit_UIObject();
  ComplexPanel_0.call(this);
  $$init_304();
  $setElement_0(this, createDiv());
}

defineSeed(382, 353, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$FlowPanel, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), FlowPanel_0);
_.add_1 = function add_6(w){
  $add_3(this, w);
}
;
_.clear_0 = function clear_4(){
  $clear_0(this);
}
;
function $clinit_FocusPanel(){
  $clinit_FocusPanel = nullMethod;
  $clinit_UIObject();
  impl_9 = getFocusImplForPanel();
}

function $$init_305(){
}

function $addClickHandler_0(this$static, handler){
  return $addDomHandler(this$static, handler, getType_10());
}

function $addDragLeaveHandler(this$static, handler){
  return $addBitlessDomHandler(this$static, handler, getType_11());
}

function $addDragOverHandler(this$static, handler){
  return $addBitlessDomHandler(this$static, handler, getType_12());
}

function $addDropHandler(this$static, handler){
  return $addBitlessDomHandler(this$static, handler, getType_13());
}

function $addKeyPressHandler(this$static, handler){
  return $addDomHandler(this$static, handler, getType_15());
}

function FocusPanel_0(){
  $clinit_FocusPanel();
  SimplePanel_1.call(this, impl_9.createFocusable());
  $$init_305();
}

defineSeed(383, 368, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$SimplePanel, Q$UIObject, Q$Widget]), FocusPanel_0);
_.addKeyUpHandler = function addKeyUpHandler_0(handler){
  return $addDomHandler(this, handler, getType_16());
}
;
_.addMouseDownHandler = function addMouseDownHandler_1(handler){
  return $addDomHandler(this, handler, getType_17());
}
;
_.addMouseMoveHandler = function addMouseMoveHandler_1(handler){
  return $addDomHandler(this, handler, getType_18());
}
;
_.addMouseUpHandler = function addMouseUpHandler_1(handler){
  return $addDomHandler(this, handler, getType_21());
}
;
var impl_9;
function $clinit_FormPanel(){
  $clinit_FormPanel = nullMethod;
  $clinit_UIObject();
  'multipart/form-data';
  'application/x-www-form-urlencoded';
  'get';
  'post';
  impl_10 = new FormPanelImpl_0;
}

function $$init_306(){
}

function $createFrame(this$static){
  var dummy;
  dummy = $createDivElement(get_2());
  $setInnerSafeHtml(dummy, ($clinit_FormPanel$IFrameTemplate() , INSTANCE_4).get_0(this$static.frameName));
  this$static.synthesizedFrame = $getFirstChildElement(dummy);
}

function $fireSubmitEvent(this$static){
  var event_0;
  event_0 = new FormPanel$SubmitEvent_0;
  $fireEvent_1(this$static, event_0);
  return !$isCanceled_0(event_0);
}

function $getFormElement(this$static){
  return $cast($getElement(this$static));
}

function $getTarget_1(this$static){
  return $getTarget($getFormElement(this$static));
}

function $onFormSubmitImpl(this$static){
  return $fireSubmitEvent(this$static);
}

function $onFrameLoadImpl(this$static){
  get_1().scheduleDeferred(new FormPanel$1_0(this$static));
}

function $setTarget_0(this$static, target){
  $setTarget($getFormElement(this$static), target);
}

function FormPanel_0(){
  $clinit_FormPanel();
  FormPanel_1.call(this, $createFormElement(get_2()), true);
}

function FormPanel_1(element, createIFrame){
  SimplePanel_1.call(this, element);
  $$init_306();
  as_0(element);
  if (createIFrame) {
    if (!(jsEquals($getTarget_1(this), null) || $length_1($trim($getTarget_1(this))) == 0)) {
      debugger;
      throw makeAssertionError_Object("Cannot create target iframe if the form's target is already set.");
    }
    this.frameName = 'FormPanel_' + getModuleName() + '_' + ++formId;
    $setTarget_0(this, this.frameName);
    $sinkEvents_0(this, 32768);
  }
}

defineSeed(384, 368, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$FormPanel, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$SimplePanel, Q$UIObject, Q$Widget]), FormPanel_0);
_.onAttach = function onAttach_2(){
  $onAttach(this);
  if (jsNotEquals(this.frameName, null)) {
    $createFrame(this);
    $appendChild($getBody(get_2()), this.synthesizedFrame);
  }
  $hookEvents(this.synthesizedFrame, $getElement(this), this);
}
;
_.onDetach = function onDetach_1(){
  $onDetach(this);
  $unhookEvents(this.synthesizedFrame, $getElement(this));
  if (isNotNull(this.synthesizedFrame)) {
    $removeChild($getBody(get_2()), this.synthesizedFrame);
    this.synthesizedFrame = null;
  }
}
;
_.onFormSubmit = function onFormSubmit(){
  return $onFormSubmitImpl(this);
}
;
_.onFrameLoad = function onFrameLoad(){
  $onFrameLoadImpl(this);
}
;
var formId = 0, impl_10;
function $$init_307(){
}

function FormPanel$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_307();
}

defineSeed(385, 1, {}, FormPanel$1_0);
_.execute_1 = function execute_7(){
  $fireEvent_1(this.this$0, new FormPanel$SubmitCompleteEvent_0($getContents(($clinit_FormPanel() , impl_10 , this.this$0.synthesizedFrame))));
}
;
function $clinit_FormPanel$IFrameTemplate(){
  $clinit_FormPanel$IFrameTemplate = nullMethod;
  INSTANCE_4 = new FormPanel_IFrameTemplateImpl_0;
}

var INSTANCE_4;
function $$init_308(){
}

function $dispatch_21(){
  null.nullMethod();
}

function FormPanel$SubmitCompleteEvent_0(resultsHtml){
  GwtEvent_0.call(this);
  $$init_308();
  this , resultsHtml;
}

function getType_29(){
  isNull_1(TYPE_21) && (TYPE_21 = new GwtEvent$Type_0);
  return TYPE_21;
}

defineSeed(386, 183, {}, FormPanel$SubmitCompleteEvent_0);
_.dispatch_0 = function dispatch_22(handler){
  $dispatch_21(dynamicCast(handler, Q$FormPanel$SubmitCompleteHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_23(){
  return getType_29();
}
;
var TYPE_21;
function $$init_309(this$static){
}

function $dispatch_22(){
  null.nullMethod();
}

function $isCanceled_0(this$static){
  return this$static.canceled;
}

function FormPanel$SubmitEvent_0(){
  GwtEvent_0.call(this);
  $$init_309(this);
}

function getType_30(){
  isNull_1(TYPE_22) && (TYPE_22 = new GwtEvent$Type_0);
  return TYPE_22;
}

defineSeed(387, 183, {}, FormPanel$SubmitEvent_0);
_.dispatch_0 = function dispatch_23(handler){
  $dispatch_22(dynamicCast(handler, Q$FormPanel$SubmitHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_24(){
  return getType_30();
}
;
_.canceled = false;
var TYPE_22;
function $$init_310(){
}

function FormPanel_IFrameTemplateImpl_0(){
  Object_1.call(this);
  $$init_310();
}

defineSeed(388, 1, {}, FormPanel_IFrameTemplateImpl_0);
_.get_0 = function get_6(arg0){
  var sb;
  sb = new StringBuilder_0;
  $append_3(sb, "<iframe src=\"javascript:''\" name='");
  $append_3(sb, htmlEscape(arg0));
  $append_3(sb, "' style='position:absolute;width:0;height:0;border:0'>");
  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0($toString_2(sb));
}
;
function $$init_311(){
}

function $add_4(this$static, widget){
  $add_0(this$static, widget, $getElement(this$static));
}

function $addAndReplaceElement(this$static, widget, id_0){
  $addAndReplaceElement_2(this$static, widget.asWidget(), id_0);
}

function $addAndReplaceElement_0(this$static, widget, toReplace){
  $addAndReplaceElement_1(this$static, widget, asOld(toReplace));
}

function $addAndReplaceElement_1(this$static, widget, toReplace){
  var children, next, toRemove;
  if (jsEquals(toReplace, $getElement(widget))) {
    return;
  }
  $removeFromParent(widget);
  toRemove = null;
  children = $iterator_0($getChildren(this$static));
  while (children.hasNext()) {
    next = dynamicCast(children.next_0(), Q$Widget);
    if ($isOrHasChild(toReplace, $getElement(next))) {
      if (jsEquals($getElement(next), toReplace)) {
        toRemove = next;
        break;
      }
      children.remove_1();
    }
  }
  $add_7($getChildren(this$static), widget);
  if (isNull_1(toRemove)) {
    $replaceChild($getParentNode(toReplace), $getElement(widget), toReplace);
  }
   else {
    $insertBefore($getParentNode(toReplace), $getElement(widget), toReplace);
    this$static.remove_0(toRemove);
  }
  $adopt(this$static, widget);
}

function $addAndReplaceElement_2(this$static, widget, id_0){
  var toReplace;
  toReplace = $getElementById_0(this$static, id_0);
  if (isNull_1(toReplace)) {
    throw new NoSuchElementException_1(id_0);
  }
  $addAndReplaceElement_0(this$static, widget, toReplace);
}

function $attachToDomAndGetElement(this$static, id_0){
  var child, origParent, origSibling;
  if (isNull_1(hiddenDiv)) {
    hiddenDiv = $createDivElement(get_2());
    setVisible(hiddenDiv, false);
    $appendChild(getBodyElement(), hiddenDiv);
  }
  origParent = $getParentElement($getElement(this$static));
  origSibling = $getNextSiblingElement($getElement(this$static));
  $appendChild(hiddenDiv, $getElement(this$static));
  child = $getElementById(get_2(), id_0);
  isNotNull(origParent)?$insertBefore(origParent, $getElement(this$static), origSibling):$removeChild(hiddenDiv, $getElement(this$static));
  return child;
}

function $getElementById_0(this$static, id_0){
  var elem;
  elem = this$static.isAttached()?$getElementById(get_2(), id_0):$attachToDomAndGetElement(this$static, id_0);
  return asOld(elem);
}

function HTMLPanel_0(html){
  $clinit_UIObject();
  ComplexPanel_0.call(this);
  $$init_311();
  $setElement(this, $createDivElement(get_2()));
  $setInnerHTML($getElement(this), html);
}

defineSeed(389, 353, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), HTMLPanel_0);
_.add_1 = function add_7(widget){
  $add_4(this, widget);
}
;
var hiddenDiv;
function $$init_312(this$static){
  this$static.widgetList = $getObjectList(this$static.this$0.widgetMap);
  $findNext(this$static);
}

function $findNext(this$static){
  while (++this$static.nextIndex < $size_0(this$static.widgetList)) {
    if (jsNotEquals($get_4(this$static.widgetList, this$static.nextIndex), null)) {
      return;
    }
  }
}

function $hasNext(this$static){
  return this$static.nextIndex < $size_0(this$static.widgetList);
}

function $next(this$static){
  var result;
  if (!$hasNext(this$static)) {
    throw new NoSuchElementException_0;
  }
  result = dynamicCast($get_4(this$static.widgetList, this$static.nextIndex), Q$Widget);
  this$static.lastIndex_0 = this$static.nextIndex;
  $findNext(this$static);
  return result;
}

function HTMLTable$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_312(this);
}

defineSeed(390, 1, {}, HTMLTable$1_0);
_.hasNext = function hasNext(){
  return $hasNext(this);
}
;
_.next_0 = function next_0(){
  return $next(this);
}
;
_.remove_1 = function remove_7(){
  var w;
  if (this.lastIndex_0 < 0) {
    throw new IllegalStateException_0;
  }
  w = dynamicCast($get_4(this.widgetList, this.lastIndex_0), Q$Widget);
  if (!instanceOf($getParent_1(w), Q$HTMLTable)) {
    debugger;
    throw makeAssertionError();
  }
  $removeFromParent(w);
  this.lastIndex_0 = -1;
}
;
_.lastIndex_0 = -1;
_.nextIndex = -1;
function $$init_313(){
}

function $prepareColumnGroup(this$static){
  if (isNull_1(this$static.columnGroup)) {
    this$static.columnGroup = createElement('colgroup');
    insertChild(this$static.this$0.tableElem, this$static.columnGroup, 0);
    appendChild(this$static.columnGroup, createElement('col'));
  }
}

function HTMLTable$ColumnFormatter_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_313();
}

defineSeed(391, 1, {}, HTMLTable$ColumnFormatter_0);
function $$init_314(){
}

function HTMLTable$HTMLTableStandardImpl_0(){
  Object_1.call(this);
  $$init_314();
}

defineSeed(392, 1, {}, HTMLTable$HTMLTableStandardImpl_0);
_.getCells = function getCells(row){
  return row.cells;
}
;
_.getRows = function getRows(tbody){
  return tbody.rows;
}
;
function $$init_315(){
}

function HTMLTable$RowFormatter_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_315();
}

defineSeed(393, 1, {}, HTMLTable$RowFormatter_0);
function $clinit_HasAutoHorizontalAlignment(){
  $clinit_HasAutoHorizontalAlignment = nullMethod;
  ALIGN_CONTENT_START = new HasHorizontalAlignment$AutoHorizontalAlignmentConstant_0;
  new HasHorizontalAlignment$AutoHorizontalAlignmentConstant_0;
}

var ALIGN_CONTENT_START;
function $clinit_HasHorizontalAlignment(){
  $clinit_HasHorizontalAlignment = nullMethod;
  ALIGN_CENTER = new HasHorizontalAlignment$HorizontalAlignmentConstant_0(($clinit_Style$TextAlign() , CENTER).getCssName());
  new HasHorizontalAlignment$HorizontalAlignmentConstant_0(($clinit_Style$TextAlign() , JUSTIFY).getCssName());
  ALIGN_LEFT = new HasHorizontalAlignment$HorizontalAlignmentConstant_0(($clinit_Style$TextAlign() , LEFT_0).getCssName());
  ALIGN_RIGHT = new HasHorizontalAlignment$HorizontalAlignmentConstant_0(($clinit_Style$TextAlign() , RIGHT_0).getCssName());
  ALIGN_LOCALE_START = isClient() && $isRTL_0(getCurrentLocale())?ALIGN_RIGHT:ALIGN_LEFT;
  ALIGN_LOCALE_END = isClient() && $isRTL_0(getCurrentLocale())?ALIGN_LEFT:ALIGN_RIGHT;
  ALIGN_LOCALE_START;
}

var ALIGN_CENTER, ALIGN_LEFT, ALIGN_LOCALE_END, ALIGN_LOCALE_START, ALIGN_RIGHT;
function $$init_316(){
}

function HasHorizontalAlignment$AutoHorizontalAlignmentConstant_0(){
  Object_1.call(this);
  $$init_316();
}

defineSeed(394, 1, {}, HasHorizontalAlignment$AutoHorizontalAlignmentConstant_0);
function $$init_317(){
}

function $getTextAlignString(this$static){
  return this$static.textAlignString;
}

function HasHorizontalAlignment$HorizontalAlignmentConstant_0(textAlignString){
  HasHorizontalAlignment$AutoHorizontalAlignmentConstant_0.call(this);
  $$init_317();
  this.textAlignString = textAlignString;
}

function endOf(direction){
  return jsEquals(direction, ($clinit_HasDirection$Direction() , LTR))?($clinit_HasHorizontalAlignment() , ALIGN_RIGHT):jsEquals(direction, ($clinit_HasDirection$Direction() , RTL))?($clinit_HasHorizontalAlignment() , ALIGN_LEFT):($clinit_HasHorizontalAlignment() , ALIGN_LOCALE_END);
}

function startOf(direction){
  return jsEquals(direction, ($clinit_HasDirection$Direction() , LTR))?($clinit_HasHorizontalAlignment() , ALIGN_LEFT):jsEquals(direction, ($clinit_HasDirection$Direction() , RTL))?($clinit_HasHorizontalAlignment() , ALIGN_RIGHT):($clinit_HasHorizontalAlignment() , ALIGN_LOCALE_START);
}

defineSeed(395, 394, makeCastMap([Q$HasHorizontalAlignment$HorizontalAlignmentConstant]), HasHorizontalAlignment$HorizontalAlignmentConstant_0);
function $clinit_HasVerticalAlignment(){
  $clinit_HasVerticalAlignment = nullMethod;
  ALIGN_BOTTOM = new HasVerticalAlignment$VerticalAlignmentConstant_0('bottom');
  ALIGN_MIDDLE = new HasVerticalAlignment$VerticalAlignmentConstant_0('middle');
  new HasVerticalAlignment$VerticalAlignmentConstant_0('top');
}

var ALIGN_BOTTOM, ALIGN_MIDDLE;
function $$init_318(){
}

function HasVerticalAlignment$VerticalAlignmentConstant_0(verticalAlignString){
  Object_1.call(this);
  $$init_318();
  this , verticalAlignString;
}

defineSeed(396, 1, {}, HasVerticalAlignment$VerticalAlignmentConstant_0);
function $clinit_Image(){
  $clinit_Image = nullMethod;
  $clinit_UIObject();
  '__gwtLastUnhandledEvent';
  new HashMap_0;
}

function $$init_319(){
}

function $changeState(this$static, newState){
  this$static.state = newState;
}

function $clearUnhandledEvent(this$static){
  isNotNull(this$static.state) && $setPropertyString(this$static.state.getImageElement(this$static), '__gwtLastUnhandledEvent', '');
}

function Image_1(url_0){
  Widget_0.call(this);
  $$init_319();
  $changeState(this, new Image$UnclippedState_1(this, url_0));
  this.setStyleName('gwt-Image');
}

function Image_2(url_0){
  $clinit_Image();
  Image_1.call(this, unsafeCastFromUntrustedString(url_0));
}

defineSeed(397, 355, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Image_2);
_.addMouseDownHandler = function addMouseDownHandler_2(handler){
  return $addDomHandler(this, handler, getType_17());
}
;
_.addMouseMoveHandler = function addMouseMoveHandler_2(handler){
  return $addDomHandler(this, handler, getType_18());
}
;
_.addMouseUpHandler = function addMouseUpHandler_2(handler){
  return $addDomHandler(this, handler, getType_21());
}
;
_.onBrowserEvent = function onBrowserEvent_2(event_0){
  if ($getTypeInt(event_0) == 32768) {
    $clearUnhandledEvent(this);
    $onLoadEvent();
  }
  $onBrowserEvent(this, event_0);
}
;
_.onLoad = function onLoad_0(){
  $onLoad();
  $onLoad_0(this.state, this);
}
;
function $$init_320(this$static){
}

function $fireSyntheticLoadEvent(this$static, image){
  this$static.syntheticEventCommand = new Image$State$1_0(this$static, image);
  get_1().scheduleDeferred(this$static.syntheticEventCommand);
}

function $onLoad_0(this$static, image){
  var unhandledEvent;
  unhandledEvent = $getPropertyString(this$static.getImageElement(image), '__gwtLastUnhandledEvent');
  $equals_2('load', unhandledEvent) && $fireSyntheticLoadEvent(this$static, image);
}

function $onLoadEvent(){
}

function Image$State_0(){
  Object_1.call(this);
  $$init_320(this);
}

defineSeed(398, 1, {});
_.syntheticEventCommand = null;
function $$init_321(){
}

function Image$State$1_0(this$1, val$image){
  this.this$1 = this$1;
  this.val$image = val$image;
  Object_1.call(this);
  $$init_321();
}

defineSeed(399, 1, {}, Image$State$1_0);
_.execute_1 = function execute_8(){
  var evt;
  if (jsNotEquals(this.val$image.state, this.this$1) || jsNotEquals(this, this.this$1.syntheticEventCommand)) {
    return;
  }
  this.this$1.syntheticEventCommand = null;
  if (!this.val$image.isAttached()) {
    $setPropertyString(this.this$1.getImageElement(this.val$image), '__gwtLastUnhandledEvent', 'load');
    return;
  }
  evt = $createLoadEvent(get_2());
  $dispatchEvent(this.this$1.getImageElement(this.val$image), evt);
}
;
function $$init_322(){
}

function $getImageElement(image){
  return $cast($getElement(image));
}

function $setUrl(this$static, image, url_0){
  $clearUnhandledEvent(image);
  $setSrc_0($getImageElement(image), url_0.asString());
}

function Image$UnclippedState_0(image){
  Image$State_0.call(this);
  $$init_322();
  $replaceElement_0(image, $createImageElement(get_2()));
  sinkEvents_0($getElement(image), 32768);
  $sinkEvents_0(image, 133398655);
}

function Image$UnclippedState_1(image, url_0){
  Image$UnclippedState_0.call(this, image);
  $setUrl(this, image, url_0);
}

defineSeed(400, 398, {}, Image$UnclippedState_1);
_.getImageElement = function getImageElement(image){
  return $getImageElement(image);
}
;
function $$init_323(this$static){
  this$static , 0;
}

function $iterator(this$static){
  return new AbstractList$IteratorImpl_0(this$static);
}

function $listIterator(this$static, from){
  return new AbstractList$ListIteratorImpl_0(this$static, from);
}

function AbstractList_0(){
  AbstractCollection_0.call(this);
  $$init_323(this);
}

function checkIndex(index_0, size_0){
  (index_0 < 0 || index_0 >= size_0) && indexOutOfBounds(index_0, size_0);
}

function indexOutOfBounds(index_0, size_0){
  throw new IndexOutOfBoundsException_1('Index: ' + index_0 + ', Size: ' + size_0);
}

defineSeed(403, 264, makeCastMap([Q$List]));
_.add_2 = function add_8(index_0, element){
  throw new UnsupportedOperationException_1('Add not supported on this list');
}
;
_.add_0 = function add_9(obj){
  this.add_2(this.size_1(), obj);
  return true;
}
;
_.clear_0 = function clear_5(){
  this.removeRange(0, this.size_1());
}
;
_.equals$ = function equals_10(o){
  var elem, elemOther, iter, iterOther, other;
  if (o === this) {
    return true;
  }
  if (!instanceOf(o, Q$List)) {
    return false;
  }
  other = dynamicCast(o, Q$List);
  if (this.size_1() != other.size_1()) {
    return false;
  }
  iter = $iterator(this);
  iterOther = other.iterator();
  while (iter.hasNext()) {
    elem = iter.next_0();
    elemOther = iterOther.next_0();
    if (!(jsEquals(elem, null)?jsEquals(elemOther, null):equals__devirtual$(elem, elemOther))) {
      return false;
    }
  }
  return true;
}
;
_.hashCode$ = function hashCode_12(){
  var iter, k, obj;
  k = 1;
  31;
  iter = $iterator(this);
  while (iter.hasNext()) {
    obj = iter.next_0();
    k = 31 * k + (jsEquals(obj, null)?0:hashCode__devirtual$(obj));
    k = ~~k;
  }
  return k;
}
;
_.indexOf_0 = function indexOf(toFind){
  var i, n;
  for (i = 0 , n = this.size_1(); i < n; ++i) {
    if (jsEquals(toFind, null)?jsEquals(this.get_1(i), null):equals__devirtual$(toFind, this.get_1(i))) {
      return i;
    }
  }
  return -1;
}
;
_.iterator = function iterator_6(){
  return $iterator(this);
}
;
_.listIterator = function listIterator(){
  return $listIterator(this, 0);
}
;
_.listIterator_0 = function listIterator_0(from){
  return $listIterator(this, from);
}
;
_.remove_2 = function remove_8(index_0){
  throw new UnsupportedOperationException_1('Remove not supported on this list');
}
;
_.removeRange = function removeRange(fromIndex, endIndex){
  var i, iter;
  iter = $listIterator(this, fromIndex);
  for (i = fromIndex; i < endIndex; ++i) {
    iter.next_0();
    iter.remove_1();
  }
}
;
function $$init_324(this$static){
  this$static.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable]), Q$Object, 0, 0);
}

function $add_5(this$static, index_0, o){
  (index_0 < 0 || index_0 > this$static.size_0) && indexOutOfBounds(index_0, this$static.size_0);
  splice_1(this$static.array, index_0, 0, o);
  ++this$static.size_0;
}

function $add_6(this$static, o){
  setCheck(this$static.array, this$static.size_0++, o);
  return true;
}

function $clear_1(this$static){
  this$static.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable]), Q$Object, 0, 0);
  this$static.size_0 = 0;
}

function $contains(this$static, o){
  return $indexOf(this$static, o) != -1;
}

function $get_4(this$static, index_0){
  checkIndex(index_0, this$static.size_0);
  return this$static.array[index_0];
}

function $indexOf(this$static, o){
  return $indexOf_0(this$static, o, 0);
}

function $indexOf_0(this$static, o, index_0){
  for (; index_0 < this$static.size_0; ++index_0) {
    if (equalsWithNullCheck(o, this$static.array[index_0])) {
      return index_0;
    }
  }
  return -1;
}

function $remove_3(this$static, index_0){
  var previous;
  previous = $get_4(this$static, index_0);
  splice_0(this$static.array, index_0, 1);
  --this$static.size_0;
  return previous;
}

function $set_2(this$static, index_0, o){
  var previous;
  previous = $get_4(this$static, index_0);
  setCheck(this$static.array, index_0, o);
  return previous;
}

function $size_0(this$static){
  return this$static.size_0;
}

function ArrayList_0(){
  AbstractList_0.call(this);
  $$init_324(this);
}

function ArrayList_1(c){
  AbstractList_0.call(this);
  $$init_324(this);
  spliceArray(this.array, 0, 0, c.toArray());
  this.size_0 = this.array.length;
}

function splice_0(array, index_0, deleteCount){
  array.splice(index_0, deleteCount);
}

function splice_1(array, index_0, deleteCount, value_0){
  array.splice(index_0, deleteCount, value_0);
}

function spliceArray(array, index_0, deleteCount, values){
  Array.prototype.splice.apply(array, [index_0, deleteCount].concat(values));
}

defineSeed(402, 403, makeCastMap([Q$Serializable, Q$List, Q$RandomAccess]), ArrayList_0, ArrayList_1);
_.add_2 = function add_10(index_0, o){
  $add_5(this, index_0, o);
}
;
_.add_0 = function add_11(o){
  return $add_6(this, o);
}
;
_.addAll = function addAll_0(c){
  var cArray, len;
  cArray = c.toArray();
  len = cArray.length;
  if (len == 0) {
    return false;
  }
  spliceArray(this.array, this.size_0, 0, cArray);
  this.size_0 += len;
  return true;
}
;
_.clear_0 = function clear_6(){
  $clear_1(this);
}
;
_.contains_0 = function contains_1(o){
  return $contains(this, o);
}
;
_.get_1 = function get_7(index_0){
  return $get_4(this, index_0);
}
;
_.indexOf_0 = function indexOf_0(o){
  return $indexOf(this, o);
}
;
_.isEmpty = function isEmpty_0(){
  return this.size_0 == 0;
}
;
_.remove_2 = function remove_9(index_0){
  return $remove_3(this, index_0);
}
;
_.remove = function remove_10(o){
  var i;
  i = $indexOf(this, o);
  if (i == -1) {
    return false;
  }
  $remove_3(this, i);
  return true;
}
;
_.removeRange = function removeRange_0(fromIndex, endIndex){
  var count;
  checkIndex(fromIndex, this.size_0 + 1);
  (endIndex < fromIndex || endIndex > this.size_0) && indexOutOfBounds(endIndex, this.size_0);
  count = endIndex - fromIndex;
  splice_0(this.array, fromIndex, count);
  this.size_0 -= count;
}
;
_.size_1 = function size_2(){
  return $size_0(this);
}
;
_.toArray = function toArray_1(){
  return cloneSubrange(this.array, 0, this.size_0);
}
;
_.toArray_0 = function toArray_2(out){
  var i;
  out.length < this.size_0 && (out = createFrom(out, this.size_0));
  for (i = 0; i < this.size_0; ++i) {
    setCheck(out, i, this.array[i]);
  }
  out.length > this.size_0 && setCheck(out, this.size_0, null);
  return out;
}
;
_.size_0 = 0;
function getKeyboardModifiers(event_0){
  return ($getShiftKey(event_0)?1:0) | ($getMetaKey(event_0)?8:0) | ($getCtrlKey(event_0)?2:0) | ($getAltKey(event_0)?4:0);
}

function $clinit_ListBox(){
  $clinit_ListBox = nullMethod;
  $clinit_FocusWidget();
  get_5();
  'bidiwrapped';
  -1;
}

function $$init_325(){
}

function $getSelectElement(this$static){
  return $cast($getElement(this$static));
}

function $insertItem(this$static, item_0, dir_0, value_0, index_0){
  var before, itemCount, option, select;
  select = $getSelectElement(this$static);
  option = $createOptionElement(get_2());
  $setOptionText(this$static, option, item_0, dir_0);
  $setValue(option, value_0);
  itemCount = $getLength_0(select);
  (index_0 < 0 || index_0 > itemCount) && (index_0 = itemCount);
  if (index_0 == itemCount) {
    $add(select, option, null);
  }
   else {
    before = $getItem($getOptions(select), index_0);
    $add(select, option, before);
  }
}

function $insertItem_0(this$static, item_0, value_0, index_0){
  $insertItem(this$static, item_0, null, value_0, index_0);
}

function $setOptionText(this$static, option, text_0, dir_0){
  var formattedText;
  isNull_1(dir_0) && isNotNull(this$static.estimator) && (dir_0 = this$static.estimator.estimateDirection(text_0));
  if (isNull_1(dir_0)) {
    $setText(option, text_0);
    $removeAttribute(option, 'bidiwrapped');
  }
   else {
    formattedText = $unicodeWrapWithKnownDir(getInstanceForCurrentLocale(), dir_0, text_0, false, false);
    $setText(option, formattedText);
    $length_1(formattedText) > $length_1(text_0)?$setAttribute(option, 'bidiwrapped', ''):$removeAttribute(option, 'bidiwrapped');
  }
}

function $setVisibleItemCount(this$static, visibleItems){
  $setSize($getSelectElement(this$static), visibleItems);
}

function ListBox_0(){
  ListBox_1.call(this, false);
}

function ListBox_1(isMultipleSelect){
  FocusWidget_0.call(this, $createSelectElement_0(get_2(), isMultipleSelect));
  $$init_325();
  this.setStyleName('gwt-ListBox');
}

defineSeed(404, 363, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));
function $$init_326(){
}

function ListenerWrapper_0(listener){
  BaseListenerWrapper_0.call(this, listener);
  $$init_326();
}

defineSeed(405, 322, makeCastMap([Q$EventHandler]));
function $$init_327(){
}

function ListenerWrapper$WrappedPopupListener_0(listener){
  ListenerWrapper_0.call(this, listener);
  $$init_327();
}

function add_12(source, listener){
  source.addCloseHandler(new ListenerWrapper$WrappedPopupListener_0(listener));
}

defineSeed(406, 405, makeCastMap([Q$CloseHandler, Q$EventHandler]), ListenerWrapper$WrappedPopupListener_0);
_.onClose = function onClose(event_0){
  dynamicCast($getListener(this), Q$PopupListener).onPopupClosed(dynamicCast($getSource_0(event_0), Q$PopupPanel), $isAutoClosed(event_0));
}
;
function $$init_328(this$static){
  this$static.allItems = new ArrayList_0;
  this$static.items = new ArrayList_0;
  this$static , true;
}

function $addItem(this$static, item_0){
  return $insertItem_1(this$static, item_0, $size_0(this$static.allItems));
}

function $addItemElement(this$static, beforeIndex, tdElem){
  var tr;
  if (this$static.vertical) {
    tr = createTR();
    insertChild(this$static.body_0, tr, beforeIndex);
    appendChild(tr, tdElem);
  }
   else {
    tr = getChild(this$static.body_0, 0);
    insertChild(tr, tdElem, beforeIndex);
  }
}

function $close(this$static, focus_0){
  if (isNotNull(this$static.parentMenu)) {
    this$static.parentMenu.popup.hide_0(!focus_0);
    focus_0 && $focus_0(this$static.parentMenu);
  }
}

function $closeAllParents(this$static){
  isNotNull(this$static.parentMenu)?$close(this$static, false):$selectItem(this$static, null);
}

function $closeAllParentsAndChildren(this$static){
  $closeAllParents(this$static);
  isNull_1(this$static.parentMenu) && isNotNull(this$static.popup) && this$static.popup.hide();
}

function $doItemAction(this$static, item_0, fireCommand, focus_0){
  var cmd;
  if (!$isEnabled()) {
    return;
  }
  $selectItem(this$static, item_0);
  if (fireCommand && isNotNull($getScheduledCommand(item_0))) {
    $closeAllParents(this$static);
    cmd = $getScheduledCommand(item_0);
    get_1().scheduleFinally(new MenuBar$1_0(this$static, cmd));
    if (isNotNull(this$static.shownChildMenu)) {
      $onHide(this$static.shownChildMenu, focus_0);
      this$static.popup.hide();
      this$static.shownChildMenu = null;
      $selectItem(this$static, null);
    }
  }
   else if (isNotNull($getSubMenu(item_0))) {
    if (isNull_1(this$static.shownChildMenu)) {
      $openPopup(this$static, item_0);
    }
     else if (jsNotEquals($getSubMenu(item_0), this$static.shownChildMenu)) {
      $onHide(this$static.shownChildMenu, focus_0);
      this$static.popup.hide();
      $openPopup(this$static, item_0);
    }
     else if (fireCommand && !this$static.autoOpen) {
      $onHide(this$static.shownChildMenu, focus_0);
      this$static.popup.hide();
      this$static.shownChildMenu = null;
      $selectItem(this$static, item_0);
    }
  }
   else if (this$static.autoOpen && isNotNull(this$static.shownChildMenu)) {
    $onHide(this$static.shownChildMenu, focus_0);
    this$static.popup.hide();
    this$static.shownChildMenu = null;
  }
}

function $eatEvent(event_0){
  $stopPropagation(event_0);
  $preventDefault(event_0);
}

function $findItem(this$static, hItem){
  var item_0, item$iterator;
  for (item$iterator = this$static.items.iterator(); item$iterator.hasNext();) {
    item_0 = dynamicCast(item$iterator.next_0(), Q$MenuItem);
    if ($isOrHasChild($getElement(item_0), hItem)) {
      return item_0;
    }
  }
  return null;
}

function $focus_0(this$static){
  ($clinit_FocusPanel() , impl_9).focus_0($getElement(this$static));
}

function $getItemContainerElement(this$static){
  return this$static.vertical?this$static.body_0:getChild(this$static.body_0, 0);
}

function $getItems(this$static){
  return this$static.items;
}

function $getSelectedItem(this$static){
  return this$static.selectedItem;
}

function $init_0(this$static, vertical, subMenuIcon){
  var outer, table, tr;
  this$static.subMenuIcon = subMenuIcon;
  table = createTable();
  this$static.body_0 = createTBody();
  appendChild(table, this$static.body_0);
  if (!vertical) {
    tr = createTR();
    appendChild(this$static.body_0, tr);
  }
  this$static.vertical = vertical;
  outer = ($clinit_FocusPanel() , impl_9).createFocusable();
  appendChild(outer, table);
  $setElement(this$static, outer);
  getMenubarRole().set_0($getElement(this$static));
  $sinkEvents_0(this$static, 2225);
  this$static.setStyleName('gwt-MenuBar');
  vertical?$addStyleDependentName(this$static, 'vertical'):$addStyleDependentName(this$static, 'horizontal');
  $setProperty_0($getStyle($getElement(this$static)), 'outline', '0px');
  $setAttribute($getElement(this$static), 'hideFocus', 'true');
  $addDomHandler(this$static, new MenuBar$2_0(this$static), getType_8());
}

function $insertItem_1(this$static, item_0, beforeIndex){
  var i, itemsIndex;
  if (beforeIndex < 0 || beforeIndex > $size_0(this$static.allItems)) {
    throw new IndexOutOfBoundsException_0;
  }
  $add_5(this$static.allItems, beforeIndex, item_0);
  itemsIndex = 0;
  for (i = 0; i < beforeIndex; i++) {
    instanceOf($get_4(this$static.allItems, i), Q$MenuItem) && ++itemsIndex;
  }
  $add_5(this$static.items, itemsIndex, item_0);
  $addItemElement(this$static, beforeIndex, $getElement(item_0));
  $setParentMenu(item_0, this$static);
  $setSelectionStyle(item_0, false);
  $updateSubmenuIcon(this$static, item_0);
  return item_0;
}

function $itemOver(this$static, item_0, focus_0){
  if (isNull_1(item_0)) {
    if (isNotNull(this$static.selectedItem) && jsEquals(this$static.shownChildMenu, $getSubMenu(this$static.selectedItem))) {
      return;
    }
  }
  if (isNotNull(item_0) && !$isEnabled()) {
    return;
  }
  $selectItem(this$static, item_0);
  focus_0 && $focus_0(this$static);
  isNotNull(item_0) && ((isNotNull(this$static.shownChildMenu) || isNotNull(this$static.parentMenu) || this$static.autoOpen) && $doItemAction(this$static, item_0, false, true));
}

function $moveSelectionDown(this$static){
  if ($selectFirstItemIfNoneSelected(this$static)) {
    return;
  }
  if (this$static.vertical) {
    $selectNextItem(this$static);
  }
   else {
    if (isNotNull($getSubMenu(this$static.selectedItem)) && !$getItems($getSubMenu(this$static.selectedItem)).isEmpty() && (isNull_1(this$static.shownChildMenu) || isNull_1($getSelectedItem(this$static.shownChildMenu)))) {
      isNull_1(this$static.shownChildMenu) && $doItemAction(this$static, this$static.selectedItem, false, true);
      $focus_0($getSubMenu(this$static.selectedItem));
    }
     else 
      isNotNull(this$static.parentMenu) && (this$static.parentMenu.vertical?$selectNextItem(this$static.parentMenu):$moveSelectionDown(this$static.parentMenu));
  }
}

function $moveSelectionUp(this$static){
  if ($selectFirstItemIfNoneSelected(this$static)) {
    return;
  }
  isNull_1(this$static.shownChildMenu) && this$static.vertical?$selectPrevItem(this$static):isNotNull(this$static.parentMenu) && this$static.parentMenu.vertical?$selectPrevItem(this$static.parentMenu):$close(this$static, true);
}

function $moveToNextItem(this$static){
  if ($selectFirstItemIfNoneSelected(this$static)) {
    return;
  }
  if (this$static.vertical) {
    if (isNotNull($getSubMenu(this$static.selectedItem)) && !$getItems($getSubMenu(this$static.selectedItem)).isEmpty() && (isNull_1(this$static.shownChildMenu) || isNull_1($getSelectedItem(this$static.shownChildMenu)))) {
      isNull_1(this$static.shownChildMenu) && $doItemAction(this$static, this$static.selectedItem, false, true);
      $focus_0($getSubMenu(this$static.selectedItem));
    }
     else 
      isNotNull(this$static.parentMenu) && (this$static.parentMenu.vertical?$moveToNextItem(this$static.parentMenu):$selectNextItem(this$static.parentMenu));
  }
   else {
    $selectNextItem(this$static);
  }
}

function $moveToPrevItem(this$static){
  if ($selectFirstItemIfNoneSelected(this$static)) {
    return;
  }
  this$static.vertical?isNotNull(this$static.parentMenu) && !this$static.parentMenu.vertical?$selectPrevItem(this$static.parentMenu):$close(this$static, true):$selectPrevItem(this$static);
}

function $onHide(this$static, focus_0){
  if (isNotNull(this$static.shownChildMenu)) {
    $onHide(this$static.shownChildMenu, focus_0);
    this$static.popup.hide();
    focus_0 && $focus_0(this$static);
  }
}

function $onShow(this$static){
  $selectItem(this$static, null);
}

function $openPopup(this$static, item_0){
  var primaryStyleName;
  isNotNull(this$static.parentMenu) && isNotNull(this$static.parentMenu.popup) && $setPreviewingAllNativeEvents(this$static.parentMenu.popup, false);
  this$static.popup = new MenuBar$3_0(this$static, true, false, 'menuPopup', item_0);
  $setAnimationType(this$static.popup, ($clinit_PopupPanel$AnimationType() , ONE_WAY_CORNER));
  $setAnimationEnabled(this$static.popup, this$static.isAnimationEnabled);
  this$static.popup.setStyleName('gwt-MenuBarPopup');
  primaryStyleName = $getStylePrimaryName(this$static);
  $equals_2('gwt-MenuBar', primaryStyleName) || $addStyleName(this$static.popup, primaryStyleName + 'Popup');
  $addPopupListener(this$static.popup, this$static);
  this$static.shownChildMenu = $getSubMenu(item_0);
  $getSubMenu(item_0).parentMenu = this$static;
  $setPopupPositionAndShow(this$static.popup, new MenuBar$4_0(this$static, item_0));
}

function $selectFirstItemIfNoneSelected(this$static){
  var nextItem, nextItem$iterator;
  if (isNull_1(this$static.selectedItem)) {
    for (nextItem$iterator = this$static.items.iterator(); nextItem$iterator.hasNext();) {
      nextItem = dynamicCast(nextItem$iterator.next_0(), Q$MenuItem);
      if ($isEnabled()) {
        $selectItem(this$static, nextItem);
        break;
      }
    }
    return true;
  }
  return false;
}

function $selectItem(this$static, item_0){
  var td, tr;
  if (!(isNull_1(item_0) || jsEquals($getParentMenu(item_0), this$static))) {
    debugger;
    throw makeAssertionError();
  }
  if (jsEquals(item_0, this$static.selectedItem)) {
    return;
  }
  if (isNotNull(this$static.selectedItem)) {
    $setSelectionStyle(this$static.selectedItem, false);
    if (this$static.vertical) {
      tr = getParent_1($getElement(this$static.selectedItem));
      if (getChildCount(tr) == 2) {
        td = getChild(tr, 1);
        setStyleName_0(td, 'subMenuIcon-selected', false);
      }
    }
  }
  if (isNotNull(item_0)) {
    $setSelectionStyle(item_0, true);
    if (this$static.vertical) {
      tr = getParent_1($getElement(item_0));
      if (getChildCount(tr) == 2) {
        td = getChild(tr, 1);
        setStyleName_0(td, 'subMenuIcon-selected', true);
      }
    }
    getMenubarRole().setAriaActivedescendantProperty($getElement(this$static), of($getElement(item_0)));
  }
  this$static.selectedItem = item_0;
}

function $selectNextItem(this$static){
  var firstIndex, index_0, itemToBeSelected;
  if (isNull_1(this$static.selectedItem)) {
    return;
  }
  index_0 = $indexOf(this$static.items, this$static.selectedItem);
  if (index_0 == -1) {
    debugger;
    throw makeAssertionError();
  }
  firstIndex = index_0;
  while (true) {
    index_0 = index_0 + 1;
    index_0 == $size_0(this$static.items) && (index_0 = 0);
    if (index_0 == firstIndex) {
      itemToBeSelected = dynamicCast($get_4(this$static.items, firstIndex), Q$MenuItem);
      break;
    }
     else {
      itemToBeSelected = dynamicCast($get_4(this$static.items, index_0), Q$MenuItem);
      if ($isEnabled()) {
        break;
      }
    }
  }
  $selectItem(this$static, itemToBeSelected);
  isNotNull(this$static.shownChildMenu) && $doItemAction(this$static, itemToBeSelected, false, true);
}

function $selectPrevItem(this$static){
  var firstIndex, index_0, itemToBeSelected;
  if (isNull_1(this$static.selectedItem)) {
    return;
  }
  index_0 = $indexOf(this$static.items, this$static.selectedItem);
  if (index_0 == -1) {
    debugger;
    throw makeAssertionError();
  }
  firstIndex = index_0;
  while (true) {
    index_0 = index_0 - 1;
    index_0 < 0 && (index_0 = $size_0(this$static.items) - 1);
    if (index_0 == firstIndex) {
      itemToBeSelected = dynamicCast($get_4(this$static.items, firstIndex), Q$MenuItem);
      break;
    }
     else {
      itemToBeSelected = dynamicCast($get_4(this$static.items, index_0), Q$MenuItem);
      if ($isEnabled()) {
        break;
      }
    }
  }
  $selectItem(this$static, itemToBeSelected);
  isNotNull(this$static.shownChildMenu) && $doItemAction(this$static, itemToBeSelected, false, true);
}

function $setItemColSpan(item_0, colspan){
  $setPropertyInt($getElement(item_0), 'colSpan', colspan);
}

function $updateSubmenuIcon(this$static, item_0){
  var container, idx, submenu, td, tdCount, tr;
  if (!this$static.vertical) {
    return;
  }
  idx = $indexOf(this$static.allItems, item_0);
  if (idx == -1) {
    return;
  }
  container = $getItemContainerElement(this$static);
  tr = getChild(container, idx);
  tdCount = getChildCount(tr);
  submenu = $getSubMenu(item_0);
  if (isNull_1(submenu)) {
    tdCount == 2 && $removeChild(tr, getChild(tr, 1));
    $setItemColSpan(item_0, 2);
  }
   else if (tdCount == 1) {
    $setItemColSpan(item_0, 1);
    td = createTD();
    $setPropertyString(td, 'vAlign', 'middle');
    $setInnerSafeHtml(td, this$static.subMenuIcon.getSafeHtml());
    setStyleName(td, 'subMenuIcon');
    appendChild(tr, td);
  }
}

function MenuBar_0(vertical){
  $clinit_UIObject();
  MenuBar_1.call(this, vertical, new MenuBar_Resources_default_StaticClientBundleGenerator_0);
}

function MenuBar_1(vertical, resources){
  Widget_0.call(this);
  $$init_328(this);
  $init_0(this, vertical, create_7(resources.menuBarSubMenuIcon()));
}

defineSeed(407, 355, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$MenuBar, Q$PopupListener, Q$UIObject, Q$Widget]), MenuBar_0);
_.addCloseHandler = function addCloseHandler_2(handler){
  return $addHandler_2(this, handler, getType_23());
}
;
_.onBrowserEvent = function onBrowserEvent_3(event_0){
  var isRtl, item_0, keyCode;
  item_0 = $findItem(this, eventGetTarget_1(event_0));
  switch (eventGetType(event_0)) {
    case 1:
      {
        ($clinit_FocusPanel() , impl_9).focus_0($getElement(this));
        isNotNull(item_0) && $doItemAction(this, item_0, true, true);
        break;
      }

    case 16:
      {
        isNotNull(item_0) && $itemOver(this, item_0, true);
        break;
      }

    case 32:
      {
        isNotNull(item_0) && $itemOver(this, null, true);
        break;
      }

    case 2048:
      {
        $selectFirstItemIfNoneSelected(this);
        break;
      }

    case 128:
      {
        keyCode = $getKeyCode(event_0);
        isRtl = $isRTL_0(getCurrentLocale());
        keyCode = maybeSwapArrowKeysForRtl(keyCode, isRtl);
        switch (keyCode) {
          case 37:
            $moveToPrevItem(this);
            $eatEvent(event_0);
            break;
          case 39:
            $moveToNextItem(this);
            $eatEvent(event_0);
            break;
          case 38:
            $moveSelectionUp(this);
            $eatEvent(event_0);
            break;
          case 40:
            $moveSelectionDown(this);
            $eatEvent(event_0);
            break;
          case 27:
            $closeAllParentsAndChildren(this);
            $eatEvent(event_0);
            break;
          case 9:
            $closeAllParentsAndChildren(this);
            break;
          case 13:
            if (!$selectFirstItemIfNoneSelected(this)) {
              $doItemAction(this, this.selectedItem, true, true);
              $eatEvent(event_0);
            }

        }
        break;
      }

  }
  $onBrowserEvent(this, event_0);
}
;
_.onDetach = function onDetach_2(){
  isNotNull(this.popup) && this.popup.hide();
  $onDetach(this);
}
;
_.onPopupClosed = function onPopupClosed(sender, autoClosed){
  autoClosed && $closeAllParents(this);
  $onHide(this, !autoClosed);
  fire_1(this, sender);
  this.shownChildMenu = null;
  this.popup = null;
  isNotNull(this.parentMenu) && isNotNull(this.parentMenu.popup) && $setPreviewingAllNativeEvents(this.parentMenu.popup, true);
}
;
_.autoOpen = false;
_.isAnimationEnabled = false;
_.subMenuIcon = null;
_.vertical = false;
function $$init_329(){
}

function MenuBar$1_0(this$0, val$cmd){
  this , this$0;
  this.val$cmd = val$cmd;
  Object_1.call(this);
  $$init_329();
}

defineSeed(408, 1, {}, MenuBar$1_0);
_.execute_1 = function execute_9(){
  this.val$cmd.execute_1();
}
;
function $$init_330(){
}

function MenuBar$2_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_330();
}

defineSeed(409, 1, makeCastMap([Q$BlurHandler, Q$EventHandler]), MenuBar$2_0);
_.onBlur = function onBlur(event_0){
  isNull_1(this.this$0.shownChildMenu) && $selectItem(this.this$0, null);
}
;
function $$init_331(this$static){
  $setWidget_1(this$static, $getSubMenu(this$static.val$item));
  $setPreviewingAllNativeEvents(this$static, true);
  $onShow($getSubMenu(this$static.val$item));
}

function MenuBar$3_0(this$0, $anonymous0, $anonymous1, $anonymous2, val$item){
  $clinit_PopupPanel();
  this.this$0 = this$0;
  this.val$item = val$item;
  DecoratedPopupPanel_0.call(this, $anonymous0, $anonymous1, $anonymous2);
  $$init_331(this);
}

defineSeed(410, 366, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$PopupPanel, Q$SimplePanel, Q$UIObject, Q$Widget]), MenuBar$3_0);
_.onPreviewNativeEvent = function onPreviewNativeEvent_1(event_0){
  var parentMenuElement, target;
  if (!$isCanceled(event_0)) {
    switch ($getTypeInt_0(event_0)) {
      case 4:
        target = $getEventTarget($getNativeEvent_0(event_0));
        parentMenuElement = $getElement($getParentMenu(this.val$item));
        if ($isOrHasChild(parentMenuElement, as(target))) {
          $cancel_2(event_0);
          return;
        }

        $onPreviewNativeEvent(event_0);
        $isCanceled(event_0) && $selectItem(this.this$0, null);
        return;
    }
  }
  $onPreviewNativeEvent(event_0);
}
;
function $$init_332(){
}

function MenuBar$4_0(this$0, val$item){
  this.this$0 = this$0;
  this.val$item = val$item;
  Object_1.call(this);
  $$init_332();
}

defineSeed(411, 1, {}, MenuBar$4_0);
_.setPosition = function setPosition(offsetWidth, offsetHeight){
  $isRTL_0(getCurrentLocale())?this.this$0.vertical?$setPopupPosition(this.this$0.popup, $getAbsoluteLeft_0(this.this$0) - offsetWidth + 1, $getAbsoluteTop_0(this.val$item)):$setPopupPosition(this.this$0.popup, $getAbsoluteLeft_0(this.val$item) + this.val$item.getOffsetWidth() - offsetWidth, $getAbsoluteTop_0(this.this$0) + this.this$0.getOffsetHeight() - 1):this.this$0.vertical?$setPopupPosition(this.this$0.popup, $getAbsoluteLeft_0(this.this$0) + this.this$0.getOffsetWidth() - 1, $getAbsoluteTop_0(this.val$item)):$setPopupPosition(this.this$0.popup, $getAbsoluteLeft_0(this.val$item), $getAbsoluteTop_0(this.this$0) + this.this$0.getOffsetHeight() - 1);
}
;
function $clinit_MenuBar_Resources_default_StaticClientBundleGenerator(){
  $clinit_MenuBar_Resources_default_StaticClientBundleGenerator = nullMethod;
  _instance0 = new MenuBar_Resources_default_StaticClientBundleGenerator_0;
  bundledImage_None = getModuleBaseForStaticFiles() + 'DF7764EEC1903CD03C9545B354D8D8E4.cache.png';
  bundledImage_None_rtl = getModuleBaseForStaticFiles() + '396F806CD63ABD414BFBB9D57429F05B.cache.png';
}

function $$init_333(){
}

function $menuBarSubMenuIconInitializer(){
  menuBarSubMenuIcon = new ImageResourcePrototype$Bundle_0('menuBarSubMenuIcon', fromTrustedString_0($isRTL_0(getCurrentLocale())?bundledImage_None_rtl:bundledImage_None), 0, 0, 5, 9, false, false);
}

function MenuBar_Resources_default_StaticClientBundleGenerator_0(){
  $clinit_MenuBar_Resources_default_StaticClientBundleGenerator();
  Object_1.call(this);
  $$init_333();
}

defineSeed(412, 1, {}, MenuBar_Resources_default_StaticClientBundleGenerator_0);
_.menuBarSubMenuIcon = function menuBarSubMenuIcon_0(){
  return get_8();
}
;
var _instance0, bundledImage_None, bundledImage_None_rtl, menuBarSubMenuIcon;
function $clinit_MenuBar_Resources_default_StaticClientBundleGenerator$menuBarSubMenuIconInitializer(){
  $clinit_MenuBar_Resources_default_StaticClientBundleGenerator$menuBarSubMenuIconInitializer = nullMethod;
  $menuBarSubMenuIconInitializer(($clinit_MenuBar_Resources_default_StaticClientBundleGenerator() , _instance0));
}

function get_8(){
  $clinit_MenuBar_Resources_default_StaticClientBundleGenerator$menuBarSubMenuIconInitializer();
  return $clinit_MenuBar_Resources_default_StaticClientBundleGenerator() , menuBarSubMenuIcon;
}

function $$init_334(this$static){
  this$static , true;
}

function $getParentMenu(this$static){
  return this$static.parentMenu;
}

function $getScheduledCommand(this$static){
  return this$static.command;
}

function $getSubMenu(this$static){
  return this$static.subMenu;
}

function $isEnabled(){
  return true;
}

function $setHTML_0(this$static, html){
  $setInnerHTML($getElement(this$static), html);
}

function $setParentMenu(this$static, parentMenu){
  this$static.parentMenu = parentMenu;
}

function $setScheduledCommand(this$static, cmd){
  this$static.command = cmd;
}

function $setSelectionStyle(this$static, selected){
  selected?$addStyleDependentName(this$static, 'selected'):$removeStyleDependentName(this$static, 'selected');
}

function $setText_3(this$static, text_0){
  $setInnerText($getElement(this$static), text_0);
}

function MenuItem_0(html){
  $clinit_UIObject();
  MenuItem_1.call(this, html.asString(), true);
}

function MenuItem_1(text_0, asHTML){
  UIObject_0.call(this);
  $$init_334(this);
  $setElement_0(this, createTD());
  $setSelectionStyle(this, false);
  asHTML?$setHTML_0(this, text_0):$setText_3(this, text_0);
  this.setStyleName('gwt-MenuItem');
  $setAttribute($getElement(this), 'id', createUniqueId());
  getMenuitemRole().set_0($getElement(this));
}

defineSeed(414, 356, makeCastMap([Q$HasVisibility, Q$MenuItem, Q$UIObject]), MenuItem_0);
_.getText = function getText_3(){
  return $getInnerText($getElement(this));
}
;
_.setText = function setText_2(text_0){
  $setText_3(this, text_0);
}
;
function $clinit_ValueBoxBase(){
  $clinit_ValueBoxBase = nullMethod;
  $clinit_FocusWidget();
  new TextBoxImpl_0;
}

function $$init_335(){
}

function $addChangeHandler(this$static, handler){
  return $addDomHandler(this$static, handler, getType_9());
}

function $getText_1(this$static){
  return $getPropertyString($getElement(this$static), 'value');
}

function $getValue_0(this$static){
  try {
    return $getValueOrThrow(this$static);
  }
   catch ($e0) {
    $e0 = wrap($e0);
    if (instanceOf($e0, Q$ParseException)) {
      $e0;
      return null;
    }
     else 
      throw unwrap($e0);
  }
}

function $getValueOrThrow(this$static){
  var parseResult, text_0;
  text_0 = $getText_1(this$static);
  parseResult = this$static.parser.parse_0(text_0);
  if ($equals_2('', text_0)) {
    return null;
  }
  return parseResult;
}

function $setText_4(this$static, text_0){
  $setPropertyString($getElement(this$static), 'value', jsNotEquals(text_0, null)?text_0:'');
  $refreshDirection(this$static.autoDirHandler);
}

function $setValue_0(this$static, value_0){
  this$static.setValue(value_0, false);
}

function $setValue_1(this$static, value_0, fireEvents){
  var newValue, oldValue;
  oldValue = fireEvents?this$static.getValue():null;
  this$static.setText(this$static.renderer.render(value_0));
  if (fireEvents) {
    newValue = this$static.getValue();
    fireIfNotEqual(this$static, oldValue, newValue);
  }
}

function ValueBoxBase_0(elem, renderer, parser){
  $clinit_ValueBoxBase();
  FocusWidget_0.call(this, elem);
  $$init_335();
  this.autoDirHandler = addTo_0(this, isBidiEnabled());
  this.renderer = renderer;
  this.parser = parser;
}

defineSeed(418, 363, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));
_.getDirection = function getDirection_0(){
  return getDirectionOnElement($getElement(this));
}
;
_.getText = function getText_4(){
  return $getText_1(this);
}
;
_.getValue = function getValue(){
  return $getValue_0(this);
}
;
_.onBrowserEvent = function onBrowserEvent_4(event_0){
  var type_0;
  type_0 = eventGetType(event_0);
  if ((type_0 & 896) != 0) {
    this , event_0;
    $onBrowserEvent(this, event_0);
    this , null;
  }
   else {
    $onBrowserEvent(this, event_0);
  }
}
;
_.onLoad = function onLoad_1(){
  $onLoad();
  $refreshDirection(this.autoDirHandler);
}
;
_.setDirection = function setDirection_0(direction){
  setDirectionOnElement($getElement(this), direction);
}
;
_.setText = function setText_3(text_0){
  $setText_4(this, text_0);
}
;
_.setValue = function setValue(value_0, fireEvents){
  $setValue_1(this, value_0, fireEvents);
}
;
function $clinit_TextBoxBase(){
  $clinit_TextBoxBase = nullMethod;
  $clinit_ValueBoxBase();
  new TextBoxBase$TextAlignConstant_0(($clinit_ValueBoxBase$TextAlignment() , CENTER_1));
  new TextBoxBase$TextAlignConstant_0(($clinit_ValueBoxBase$TextAlignment() , JUSTIFY_0));
  new TextBoxBase$TextAlignConstant_0(($clinit_ValueBoxBase$TextAlignment() , LEFT_1));
  new TextBoxBase$TextAlignConstant_0(($clinit_ValueBoxBase$TextAlignment() , RIGHT_1));
}

function $$init_336(){
}

function $getValue_1(this$static){
  var raw;
  raw = dynamicCast($getValue_0(this$static), Q$String);
  return jsEquals(raw, null)?'':raw;
}

function TextBoxBase_0(elem){
  ValueBoxBase_0.call(this, elem, instance_3(), instance_2());
  $$init_336();
}

defineSeed(417, 418, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));
_.getValue = function getValue_0(){
  return $getValue_1(this);
}
;
function $$init_337(){
}

function TextBox_0(){
  $clinit_TextBoxBase();
  TextBox_1.call(this, $createTextInputElement(get_2()), 'gwt-TextBox');
}

function TextBox_1(element, styleName){
  TextBoxBase_0.call(this, element);
  $$init_337();
  jsNotEquals(styleName, null) && this.setStyleName(styleName);
}

defineSeed(416, 417, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$TextBox, Q$UIObject, Q$Widget]), TextBox_0);
function $$init_338(){
}

function PasswordTextBox_0(){
  $clinit_TextBoxBase();
  TextBox_1.call(this, $createPasswordInputElement(get_2()), 'gwt-PasswordTextBox');
  $$init_338();
}

defineSeed(415, 416, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$TextBox, Q$UIObject, Q$Widget]), PasswordTextBox_0);
function $$init_339(){
}

function PopupPanel$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_339();
}

defineSeed(419, 1, makeCastMap([Q$ResizeHandler, Q$EventHandler]), PopupPanel$1_0);
_.onResize = function onResize_1(event_0){
  var height, style, width_0, winHeight, winWidth;
  style = $getStyle(this.this$0.glass);
  winWidth = getClientWidth();
  winHeight = getClientHeight();
  $setDisplay(style, ($clinit_Style$Display() , NONE));
  $setWidth(style, 0, ($clinit_Style$Unit() , PX));
  $setHeight(style, 0, ($clinit_Style$Unit() , PX));
  width_0 = $getScrollWidth_0(get_2());
  height = $getScrollHeight_0(get_2());
  $setWidth(style, max_0(width_0, winWidth), ($clinit_Style$Unit() , PX));
  $setHeight(style, max_0(height, winHeight), ($clinit_Style$Unit() , PX));
  $setDisplay(style, ($clinit_Style$Display() , BLOCK));
}
;
function $$init_340(){
}

function PopupPanel$3_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_340();
}

defineSeed(420, 1, makeCastMap([Q$EventHandler, Q$Event$NativePreviewHandler]), PopupPanel$3_0);
_.onPreviewNativeEvent = function onPreviewNativeEvent_2(event_0){
  $previewNativeEvent(this.this$0, event_0);
}
;
function $$init_341(){
}

function PopupPanel$4_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_341();
}

defineSeed(421, 1, makeCastMap([Q$ValueChangeHandler, Q$EventHandler]), PopupPanel$4_0);
_.onValueChange = function onValueChange(event_0){
  this.this$0.autoHideOnHistoryEvents && this.this$0.hide();
}
;
function $clinit_PopupPanel$AnimationType(){
  $clinit_PopupPanel$AnimationType = nullMethod;
  CENTER_0 = new PopupPanel$AnimationType_0('CENTER', 0);
  ONE_WAY_CORNER = new PopupPanel$AnimationType_0('ONE_WAY_CORNER', 1);
  ROLL_DOWN = new PopupPanel$AnimationType_0('ROLL_DOWN', 2);
  $VALUES_8 = initValues(_3Lcom_google_gwt_user_client_ui_PopupPanel$AnimationType_2_classLit, makeCastMap([Q$Serializable]), Q$PopupPanel$AnimationType, [CENTER_0, ONE_WAY_CORNER, ROLL_DOWN]);
}

function $$init_342(){
}

function PopupPanel$AnimationType_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_342();
}

function valueOf_9(name_0){
  $clinit_PopupPanel$AnimationType();
  return valueOf(($clinit_PopupPanel$AnimationType$Map() , $MAP_8), name_0);
}

function values_9(){
  $clinit_PopupPanel$AnimationType();
  return $VALUES_8;
}

defineSeed(422, 134, makeCastMap([Q$PopupPanel$AnimationType, Q$Serializable, Q$Comparable, Q$Enum]), PopupPanel$AnimationType_0);
var $VALUES_8, CENTER_0, ONE_WAY_CORNER, ROLL_DOWN;
function $clinit_PopupPanel$AnimationType$Map(){
  $clinit_PopupPanel$AnimationType$Map = nullMethod;
  $MAP_8 = createValueOfMap(($clinit_PopupPanel$AnimationType() , $VALUES_8));
}

var $MAP_8;
function $$init_343(this$static){
  this$static.curPanel = null;
  this$static.offsetWidth_0 = -1;
}

function $getRectString(top_0, right, bottom, left){
  return 'rect(' + top_0 + 'px, ' + right + 'px, ' + bottom + 'px, ' + left + 'px)';
}

function $maybeShowGlass(this$static){
  if (this$static.showing) {
    if (this$static.curPanel.isGlassEnabled) {
      $appendChild($getBody(get_2()), this$static.curPanel.glass);
      $onShow_0(($clinit_PopupPanel() , impl_7));
      this$static.resizeRegistration = addResizeHandler(this$static.curPanel.glassResizer);
      this$static.curPanel.glassResizer.onResize(null);
      this$static.glassShowing = true;
    }
  }
   else if (this$static.glassShowing) {
    $removeChild($getBody(get_2()), this$static.curPanel.glass);
    $onHide_0(($clinit_PopupPanel() , impl_7));
    this$static.resizeRegistration.removeHandler();
    this$static.resizeRegistration = null;
    this$static.glassShowing = false;
  }
}

function $onComplete(this$static){
  if (!this$static.showing) {
    $maybeShowGlass(this$static);
    this$static.isUnloading || $remove_1(get_9(), this$static.curPanel);
    $onHide_0(($clinit_PopupPanel() , impl_7 , $getElement(this$static.curPanel)));
  }
  $setClip(($clinit_PopupPanel() , impl_7 , $getElement(this$static.curPanel)), 'rect(auto, auto, auto, auto)');
  $setProperty_0($getStyle($getElement(this$static.curPanel)), 'overflow', 'visible');
}

function $onInstantaneousRun(this$static){
  $maybeShowGlass(this$static);
  if (this$static.showing) {
    $setProperty_0($getStyle($getElement(this$static.curPanel)), 'position', 'absolute');
    this$static.curPanel.topPosition != -1 && $setPopupPosition(this$static.curPanel, this$static.curPanel.leftPosition, this$static.curPanel.topPosition);
    $add_1(get_9(), this$static.curPanel);
    $onShow_0(($clinit_PopupPanel() , impl_7 , $getElement(this$static.curPanel)));
  }
   else {
    this$static.isUnloading || $remove_1(get_9(), this$static.curPanel);
    $onHide_0(($clinit_PopupPanel() , impl_7 , $getElement(this$static.curPanel)));
  }
  $setProperty_0($getStyle($getElement(this$static.curPanel)), 'overflow', 'visible');
}

function $setState(this$static, showing, isUnloading){
  var animate;
  this$static.isUnloading = isUnloading;
  $cancel(this$static);
  if (isNotNull(this$static.showTimer)) {
    $cancel_0(this$static.showTimer);
    this$static.showTimer = null;
    $onComplete(this$static);
  }
  this$static.curPanel.showing = showing;
  $updateHandlers(this$static.curPanel);
  animate = !isUnloading && this$static.curPanel.isAnimationEnabled;
  jsNotEquals(this$static.curPanel.animType, ($clinit_PopupPanel$AnimationType() , CENTER_0)) && !showing && (animate = false);
  this$static.showing = showing;
  if (animate) {
    if (showing) {
      $maybeShowGlass(this$static);
      $setProperty_0($getStyle($getElement(this$static.curPanel)), 'position', 'absolute');
      this$static.curPanel.topPosition != -1 && $setPopupPosition(this$static.curPanel, this$static.curPanel.leftPosition, this$static.curPanel.topPosition);
      $setClip(($clinit_PopupPanel() , impl_7 , $getElement(this$static.curPanel)), $getRectString(0, 0, 0, 0));
      $add_1(get_9(), this$static.curPanel);
      $onShow_0(($clinit_PopupPanel() , impl_7 , $getElement(this$static.curPanel)));
      this$static.showTimer = new PopupPanel$ResizeAnimation$1_0(this$static);
      $schedule(this$static.showTimer, 1);
    }
     else {
      $run(this$static, 200);
    }
  }
   else {
    $onInstantaneousRun(this$static);
  }
}

function PopupPanel$ResizeAnimation_0(panel){
  Animation_0.call(this);
  $$init_343(this);
  this.curPanel = panel;
}

defineSeed(424, 3, {}, PopupPanel$ResizeAnimation_0);
_.onComplete = function onComplete_0(){
  $onComplete(this);
}
;
_.onStart = function onStart_0(){
  this.offsetHeight_0 = $getOffsetHeight_1(this.curPanel);
  this.offsetWidth_0 = $getOffsetWidth_1(this.curPanel);
  $setProperty_0($getStyle($getElement(this.curPanel)), 'overflow', 'hidden');
  $onStart(this);
}
;
_.onUpdate = function onUpdate(progress){
  var bottom, height, left, right, top_0, width_0;
  this.showing || (progress = 1 - progress);
  top_0 = 0;
  left = 0;
  right = 0;
  bottom = 0;
  height = round_int(progress * this.offsetHeight_0);
  width_0 = round_int(progress * this.offsetWidth_0);
  switch ($ordinal(this.curPanel.animType)) {
    case 2:
      right = this.offsetWidth_0;
      bottom = height;
      break;
    case 0:
      top_0 = ~~(this.offsetHeight_0 - height) >> 1;
      left = ~~(this.offsetWidth_0 - width_0) >> 1;
      right = left + width_0;
      bottom = top_0 + height;
      break;
    case 1:
      $isRTL_0(getCurrentLocale()) && (left = this.offsetWidth_0 - width_0);
      right = left + width_0;
      bottom = top_0 + height;
  }
  $setClip(($clinit_PopupPanel() , impl_7 , $getElement(this.curPanel)), $getRectString(top_0, right, bottom, left));
}
;
_.glassShowing = false;
_.isUnloading = false;
_.offsetHeight_0 = 0;
_.offsetWidth_0 = 0;
_.showing = false;
function $$init_344(){
}

function PopupPanel$ResizeAnimation$1_0(this$1){
  this.this$1 = this$1;
  Timer_0.call(this);
  $$init_344();
}

defineSeed(425, 10, {}, PopupPanel$ResizeAnimation$1_0);
_.run = function run_0(){
  this.this$1.showTimer = null;
  $run(this.this$1, 200);
}
;
function $clinit_PotentialElement(){
  $clinit_PotentialElement = nullMethod;
  declareShim();
}

function $resolve(this$static){
  return this$static.__gwt_resolve?this$static.__gwt_resolve():this$static;
}

function $setResolver(this$static, resolver){
  this$static.__gwt_resolve = buildResolveCallback(resolver);
}

function as_3(e){
  $clinit_PotentialElement();
  if (!isPotential(e)) {
    debugger;
    throw makeAssertionError();
  }
  return e;
}

function buildResolveCallback(resolver){
  return function(){
    this.__gwt_resolve = cannotResolveTwice;
    return resolver.resolvePotentialElement();
  }
  ;
}

function cannotResolveTwice(){
  throw 'A PotentialElement cannot be resolved twice.';
}

function declareShim(){
  var shim = function(){
  }
  ;
  shim.prototype = {className:'', clientHeight:0, clientWidth:0, dir:'', getAttribute:function(name_0, value_0){
    return this[name_0];
  }
  , href:'', id:'', lang:'', nodeType:1, removeAttribute:function(name_0, value_0){
    this[name_0] = undefined;
  }
  , setAttribute:function(name_0, value_0){
    this[name_0] = value_0;
  }
  , src:'', style:{}, title:''};
  $wnd.GwtPotentialElementShim = shim;
}

function isPotential(o){
  $clinit_PotentialElement();
  try {
    return !!o && !!o.__gwt_resolve;
  }
   catch (e) {
    return false;
  }
}

function resolve(maybePotential){
  $clinit_PotentialElement();
  return $resolve($cast(maybePotential));
}

function $clinit_RootPanel(){
  $clinit_RootPanel = nullMethod;
  $clinit_UIObject();
  maybeDetachCommand = new RootPanel$1_0;
  rootPanels = new HashMap_0;
  widgetsToDetach = new HashSet_0;
}

function $$init_345(){
}

function RootPanel_0(elem){
  AbsolutePanel_0.call(this, elem);
  $$init_345();
  this.onAttach();
}

function detachNow(widget){
  $clinit_RootPanel();
  if (!widgetsToDetach.contains_0(widget)) {
    debugger;
    throw makeAssertionError_Object('detachNow() called on a widget not currently in the detach list');
  }
  try {
    widget.onDetach();
  }
   finally {
    widgetsToDetach.remove(widget);
  }
}

function detachOnWindowClose(widget){
  if (widgetsToDetach.contains_0(widget)) {
    debugger;
    throw makeAssertionError_Object('detachOnUnload() called twice for the same widget');
  }
  if (isElementChildOfWidget($getElement(widget))) {
    debugger;
    throw makeAssertionError_Object('A widget that has an existing parent widget may not be added to the detach list');
  }
  widgetsToDetach.add_0(widget);
}

function detachWidgets(){
  $clinit_RootPanel();
  try {
    tryCommand(widgetsToDetach, maybeDetachCommand);
  }
   finally {
    widgetsToDetach.clear_0();
    rootPanels.clear_0();
  }
}

function get_9(){
  $clinit_RootPanel();
  return get_10(null);
}

function get_10(id_0){
  var elem, rp;
  rp = dynamicCast(rootPanels.get_2(id_0), Q$RootPanel);
  elem = null;
  if (jsNotEquals(id_0, null)) {
    if (isNull_1(elem = $getElementById(get_2(), id_0))) {
      return null;
    }
  }
  if (isNotNull(rp)) {
    if (isNull_1(elem) || jsEquals($getElement(rp), elem)) {
      return rp;
    }
  }
  if (rootPanels.size_1() == 0) {
    hookWindowClosing();
    $isRTL_0(getCurrentLocale()) && setDirectionOnElement(getRootElement(), ($clinit_HasDirection$Direction() , RTL));
  }
  isNull_1(elem)?(rp = new RootPanel$DefaultRootPanel_0):(rp = new RootPanel_0(elem));
  rootPanels.put(id_0, rp);
  detachOnWindowClose(rp);
  return rp;
}

function getBodyElement(){
  $clinit_RootPanel();
  return $doc.body;
}

function getRootElement(){
  return $doc;
}

function hookWindowClosing(){
  scheduleDispose(new RootPanel$2_0);
  addCloseHandler(new RootPanel$3_0);
}

function isElementChildOfWidget(element){
  var body_0;
  element = $getParentElement(element);
  body_0 = $getBody(get_2());
  while (isNotNull(element) && jsNotEquals(body_0, element)) {
    if (isNotNull(getEventListener_0(element))) {
      return true;
    }
    element = $cast($getParentElement(element));
  }
  return false;
}

function isInDetachList(widget){
  $clinit_RootPanel();
  return widgetsToDetach.contains_0(widget);
}

defineSeed(427, 352, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]), RootPanel_0);
var maybeDetachCommand, rootPanels, widgetsToDetach;
function $$init_346(){
}

function RootPanel$1_0(){
  Object_1.call(this);
  $$init_346();
}

defineSeed(428, 1, {}, RootPanel$1_0);
_.execute_2 = function execute_10(w){
  w.isAttached() && w.onDetach();
}
;
function $$init_347(){
}

function RootPanel$2_0(){
  Object_1.call(this);
  $$init_347();
}

defineSeed(429, 1, {}, RootPanel$2_0);
_.dispose = function dispose_4(){
  detachWidgets();
}
;
function $$init_348(){
}

function RootPanel$3_0(){
  Object_1.call(this);
  $$init_348();
}

defineSeed(430, 1, makeCastMap([Q$CloseHandler, Q$EventHandler]), RootPanel$3_0);
_.onClose = function onClose_0(closeEvent){
  detachWidgets();
}
;
function $$init_349(){
}

function RootPanel$DefaultRootPanel_0(){
  RootPanel_0.call(this, getBodyElement());
  $$init_349();
}

defineSeed(431, 427, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]), RootPanel$DefaultRootPanel_0);
function $$init_350(this$static){
  this$static.hasElement = isNotNull(this$static.this$0.widget);
}

function $next_0(this$static){
  if (!this$static.hasElement || isNull_1(this$static.this$0.widget)) {
    throw new NoSuchElementException_0;
  }
  this$static.hasElement = false;
  return this$static.returned = this$static.this$0.widget;
}

function SimplePanel$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_350(this);
}

defineSeed(432, 1, {}, SimplePanel$1_0);
_.hasNext = function hasNext_0(){
  return this.hasElement;
}
;
_.next_0 = function next_1(){
  return $next_0(this);
}
;
_.remove_1 = function remove_11(){
  isNotNull(this.returned) && this.this$0.remove_0(this.returned);
}
;
_.hasElement = false;
_.returned = null;
function $$init_351(){
}

function TextArea_1(){
  TextBoxBase_0.call(this, $createTextAreaElement(get_2()));
  $$init_351();
  this.setStyleName('gwt-TextArea');
}

defineSeed(433, 417, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));
function $$init_352(){
}

function TextBoxBase$TextAlignConstant_0(value_0){
  Object_1.call(this);
  $$init_352();
  this , value_0;
}

defineSeed(434, 1, {}, TextBoxBase$TextAlignConstant_0);
function $$init_353(){
}

function UIObject$DebugIdImpl_0(){
  Object_1.call(this);
  $$init_353();
}

defineSeed(435, 1, {}, UIObject$DebugIdImpl_0);
function $clinit_ValueBoxBase$TextAlignment(){
  $clinit_ValueBoxBase$TextAlignment = nullMethod;
  CENTER_1 = new ValueBoxBase$TextAlignment$1_0('CENTER', 0);
  JUSTIFY_0 = new ValueBoxBase$TextAlignment$2_0('JUSTIFY', 1);
  LEFT_1 = new ValueBoxBase$TextAlignment$3_0('LEFT', 2);
  RIGHT_1 = new ValueBoxBase$TextAlignment$4_0('RIGHT', 3);
  $VALUES_9 = initValues(_3Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, makeCastMap([Q$Serializable]), Q$ValueBoxBase$TextAlignment, [CENTER_1, JUSTIFY_0, LEFT_1, RIGHT_1]);
}

function $$init_354(){
}

function ValueBoxBase$TextAlignment_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_354();
}

function valueOf_10(name_0){
  $clinit_ValueBoxBase$TextAlignment();
  return valueOf(($clinit_ValueBoxBase$TextAlignment$Map() , $MAP_9), name_0);
}

function values_10(){
  $clinit_ValueBoxBase$TextAlignment();
  return $VALUES_9;
}

defineSeed(436, 134, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]));
var $VALUES_9, CENTER_1, JUSTIFY_0, LEFT_1, RIGHT_1;
function $$init_355(){
}

function ValueBoxBase$TextAlignment$1_0(enum$name, enum$ordinal){
  ValueBoxBase$TextAlignment_0.call(this, enum$name, enum$ordinal);
  $$init_355();
}

defineSeed(437, 436, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$1_0);
function $$init_356(){
}

function ValueBoxBase$TextAlignment$2_0(enum$name, enum$ordinal){
  ValueBoxBase$TextAlignment_0.call(this, enum$name, enum$ordinal);
  $$init_356();
}

defineSeed(438, 436, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$2_0);
function $$init_357(){
}

function ValueBoxBase$TextAlignment$3_0(enum$name, enum$ordinal){
  ValueBoxBase$TextAlignment_0.call(this, enum$name, enum$ordinal);
  $$init_357();
}

defineSeed(439, 436, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$3_0);
function $$init_358(){
}

function ValueBoxBase$TextAlignment$4_0(enum$name, enum$ordinal){
  ValueBoxBase$TextAlignment_0.call(this, enum$name, enum$ordinal);
  $$init_358();
}

defineSeed(440, 436, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$4_0);
function $clinit_ValueBoxBase$TextAlignment$Map(){
  $clinit_ValueBoxBase$TextAlignment$Map = nullMethod;
  $MAP_9 = createValueOfMap(($clinit_ValueBoxBase$TextAlignment() , $VALUES_9));
}

var $MAP_9;
function $$init_359(){
}

function $add_7(this$static, w){
  $insert_1(this$static, w, this$static.size_0);
}

function $get_5(this$static, index_0){
  if (index_0 < 0 || index_0 >= this$static.size_0) {
    throw new IndexOutOfBoundsException_0;
  }
  return this$static.array[index_0];
}

function $indexOf_1(this$static, w){
  var i;
  for (i = 0; i < this$static.size_0; ++i) {
    if (jsEquals(this$static.array[i], w)) {
      return i;
    }
  }
  return -1;
}

function $insert_1(this$static, w, beforeIndex){
  var i, i0, newArray;
  if (beforeIndex < 0 || beforeIndex > this$static.size_0) {
    throw new IndexOutOfBoundsException_0;
  }
  if (this$static.size_0 == this$static.array.length) {
    newArray = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable]), Q$Widget, this$static.array.length * 2, 0);
    for (i0 = 0; i0 < this$static.array.length; ++i0) {
      setCheck(newArray, i0, this$static.array[i0]);
    }
    this$static.array = newArray;
  }
  ++this$static.size_0;
  for (i = this$static.size_0 - 1; i > beforeIndex; --i) {
    setCheck(this$static.array, i, this$static.array[i - 1]);
  }
  setCheck(this$static.array, beforeIndex, w);
}

function $iterator_0(this$static){
  return new WidgetCollection$WidgetIterator_0(this$static);
}

function $remove_4(this$static, index_0){
  var i;
  if (index_0 < 0 || index_0 >= this$static.size_0) {
    throw new IndexOutOfBoundsException_0;
  }
  --this$static.size_0;
  for (i = index_0; i < this$static.size_0; ++i) {
    setCheck(this$static.array, i, this$static.array[i + 1]);
  }
  setCheck(this$static.array, this$static.size_0, null);
}

function $remove_5(this$static, w){
  var index_0;
  index_0 = $indexOf_1(this$static, w);
  if (index_0 == -1) {
    throw new NoSuchElementException_0;
  }
  $remove_4(this$static, index_0);
}

function $size_1(this$static){
  return this$static.size_0;
}

function WidgetCollection_0(parent_0){
  Object_1.call(this);
  $$init_359();
  this.parent_0 = parent_0;
  this.array = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable]), Q$Widget, 4, 0);
}

defineSeed(442, 1, {}, WidgetCollection_0);
_.iterator = function iterator_7(){
  return $iterator_0(this);
}
;
_.size_0 = 0;
function $$init_360(this$static){
}

function $next_1(this$static){
  if (this$static.index_0 >= this$static.this$0.size_0) {
    throw new NoSuchElementException_0;
  }
  this$static.currentWidget = this$static.this$0.array[this$static.index_0];
  ++this$static.index_0;
  return this$static.currentWidget;
}

function WidgetCollection$WidgetIterator_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_360(this);
}

defineSeed(443, 1, {}, WidgetCollection$WidgetIterator_0);
_.hasNext = function hasNext_1(){
  return this.index_0 < this.this$0.size_0;
}
;
_.next_0 = function next_2(){
  return $next_1(this);
}
;
_.remove_1 = function remove_12(){
  if (isNull_1(this.currentWidget)) {
    throw new IllegalStateException_0;
  }
  this.this$0.parent_0.remove_0(this.currentWidget);
  --this.index_0;
  this.currentWidget = null;
}
;
_.index_0 = 0;
function $clinit_ClippedImageImpl(){
  $clinit_ClippedImageImpl = nullMethod;
  clearImage = fromTrustedString_0(getModuleBaseURL() + 'clear.cache.gif');
}

function $$init_361(){
}

function $getDraggableTemplate(){
  isNull_1(draggableTemplate) && (draggableTemplate = new ClippedImageImpl_DraggableTemplateImpl_0);
  return draggableTemplate;
}

function $getSafeHtml(url_0, left, top_0, width_0, height, isDraggable){
  var builder;
  builder = new SafeStylesBuilder_0;
  $trustedNameAndValue($height($width(builder, width_0, ($clinit_Style$Unit() , PX)), height, ($clinit_Style$Unit() , PX)), 'background', 'url(' + url_0.asString() + ') ' + 'no-repeat ' + (-left + 'px ') + (-top_0 + 'px'));
  return isDraggable?$getDraggableTemplate().image_0(clearImage, fromTrustedString($toSafeStyles(builder).asString())):$getTemplate().image_0(clearImage, fromTrustedString($toSafeStyles(builder).asString()));
}

function $getTemplate(){
  isNull_1(template) && (template = new ClippedImageImpl_TemplateImpl_0);
  return template;
}

function ClippedImageImpl_0(){
  $clinit_ClippedImageImpl();
  Object_1.call(this);
  $$init_361();
}

defineSeed(444, 1, {}, ClippedImageImpl_0);
var clearImage, draggableTemplate, template;
function $$init_362(){
}

function ClippedImageImpl_DraggableTemplateImpl_0(){
  Object_1.call(this);
  $$init_362();
}

defineSeed(445, 1, {}, ClippedImageImpl_DraggableTemplateImpl_0);
_.image_0 = function image_0(arg0, arg1){
  var sb;
  sb = new StringBuilder_0;
  $append_3(sb, "<img onload='this.__gwtLastUnhandledEvent=\"load\";' src='");
  $append_3(sb, htmlEscape(arg0.asString()));
  $append_3(sb, "' style='");
  $append_3(sb, htmlEscape(arg1.asString()));
  $append_3(sb, "' border='0' draggable='true'>");
  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0($toString_2(sb));
}
;
function $$init_363(){
}

function ClippedImageImpl_TemplateImpl_0(){
  Object_1.call(this);
  $$init_363();
}

defineSeed(446, 1, {}, ClippedImageImpl_TemplateImpl_0);
_.image_0 = function image_1(arg0, arg1){
  var sb;
  sb = new StringBuilder_0;
  $append_3(sb, "<img onload='this.__gwtLastUnhandledEvent=\"load\";' src='");
  $append_3(sb, htmlEscape(arg0.asString()));
  $append_3(sb, "' style='");
  $append_3(sb, htmlEscape(arg1.asString()));
  $append_3(sb, "' border='0'>");
  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0($toString_2(sb));
}
;
function $clinit_ClippedImagePrototype(){
  $clinit_ClippedImagePrototype = nullMethod;
  impl_11 = new ClippedImageImpl_0;
}

function $$init_364(this$static){
  this$static , false;
}

function ClippedImagePrototype_0(url_0, left, top_0, width_0, height){
  $clinit_ClippedImagePrototype();
  AbstractImagePrototype_0.call(this);
  $$init_364(this);
  this.url_0 = url_0;
  this.left_0 = left;
  this.top_0 = top_0;
  this.width_0 = width_0;
  this.height_0 = height;
}

defineSeed(447, 357, {}, ClippedImagePrototype_0);
_.getSafeHtml = function getSafeHtml_0(){
  return $getSafeHtml(this.url_0, this.left_0, this.top_0, this.width_0, this.height_0, false);
}
;
_.height_0 = 0;
_.left_0 = 0;
_.top_0 = 0;
_.url_0 = null;
_.width_0 = 0;
var impl_11;
function $clinit_FocusImpl(){
  $clinit_FocusImpl = nullMethod;
  implPanel = new FocusImplSafari_0;
  implWidget = instanceOf(implPanel, Q$FocusImplStandard)?new FocusImpl_0:implPanel;
}

function $$init_365(){
}

function $getTabIndex_1(elem){
  return $getTabIndex(elem);
}

function $setTabIndex_1(elem, index_0){
  $setTabIndex(elem, index_0);
}

function FocusImpl_0(){
  Object_1.call(this);
  $$init_365();
}

function getFocusImplForPanel(){
  $clinit_FocusImpl();
  return implPanel;
}

function getFocusImplForWidget(){
  $clinit_FocusImpl();
  return implWidget;
}

defineSeed(448, 1, {}, FocusImpl_0);
_.createFocusable = function createFocusable(){
  var e;
  e = $cast($createDivElement(get_2()));
  $setTabIndex(e, 0);
  return e;
}
;
_.focus_0 = function focus_1(elem){
  $focus(elem);
}
;
var implPanel, implWidget;
function $$init_366(){
}

function $createFocusHandler(){
  return function(evt){
    var div = this.parentNode;
    if (div.onfocus) {
      $wnd.setTimeout(function(){
        div.focus();
      }
      , 0);
    }
  }
  ;
}

function $ensureFocusHandler(){
  return isNotNull(focusHandler_0)?focusHandler_0:(focusHandler_0 = $createFocusHandler());
}

function FocusImplStandard_0(){
  FocusImpl_0.call(this);
  $$init_366();
}

function createFocusable0(focusHandler){
  var div = $doc.createElement('div');
  div.tabIndex = 0;
  var input_0 = $doc.createElement('input');
  input_0.type = 'text';
  input_0.tabIndex = -1;
  input_0.setAttribute('role', 'presentation');
  var style = input_0.style;
  style.opacity = 0;
  style.height = '1px';
  style.width = '1px';
  style.zIndex = -1;
  style.overflow = 'hidden';
  style.position = 'absolute';
  input_0.addEventListener('focus', focusHandler, false);
  addDisposableEvent(input_0, 'focus', focusHandler, false);
  div.appendChild(input_0);
  return div;
}

defineSeed(450, 448, makeCastMap([Q$FocusImplStandard]));
_.createFocusable = function createFocusable_0(){
  return createFocusable0($ensureFocusHandler());
}
;
var focusHandler_0;
function $$init_367(){
}

function FocusImplSafari_0(){
  FocusImplStandard_0.call(this);
  $$init_367();
}

defineSeed(449, 450, makeCastMap([Q$FocusImplStandard]), FocusImplSafari_0);
_.focus_0 = function focus_2(elem){
  $wnd.setTimeout(function(){
    elem.focus();
  }
  , 0);
}
;
function $$init_368(){
}

function $getContents(iframe){
  try {
    if (!iframe.contentWindow || !iframe.contentWindow.document)
      return null;
    return iframe.contentWindow.document.body.innerHTML;
  }
   catch (e) {
    return null;
  }
}

function $hookEvents(iframe, form_0, listener){
  if (iframe) {
    iframe.onload = $entry(function(){
      if (!iframe.__formAction)
        return;
      listener.onFrameLoad();
    }
    );
  }
  form_0.onsubmit = $entry(function(){
    if (iframe)
      iframe.__formAction = form_0.action;
    return listener.onFormSubmit();
  }
  );
}

function $unhookEvents(iframe, form_0){
  if (iframe)
    iframe.onload = null;
  form_0.onsubmit = null;
}

function FormPanelImpl_0(){
  Object_1.call(this);
  $$init_368();
}

defineSeed(451, 1, {}, FormPanelImpl_0);
function $$init_369(){
}

function $createElement_2(){
  return $createDivElement(get_2());
}

function $getContainerElement_2(popup){
  return popup;
}

function $getStyleElement(popup){
  return $getParentElement(popup);
}

function $onHide_0(){
}

function $onShow_0(){
}

function $setClip(popup, rect){
  $setProperty_0($getStyle(popup), 'clip', rect);
}

function $setVisible_0(){
}

function PopupImpl_0(){
  Object_1.call(this);
  $$init_369();
}

defineSeed(452, 1, {}, PopupImpl_0);
function $$init_370(){
}

function TextBoxImpl_0(){
  Object_1.call(this);
  $$init_370();
}

defineSeed(453, 1, {}, TextBoxImpl_0);
function $$init_371(){
}

function $displayMismatchWarning(runtimeValue, compileTimeValue){
  $wnd.alert('ERROR: Possible problem with your *.gwt.xml module file.' + '\nThe compile time user.agent value (' + compileTimeValue + ') does not match the runtime user.agent value (' + runtimeValue + '). Expect more errors.\n');
}

function $onModuleLoad_1(){
  var compileTimeValue, impl, runtimeValue;
  impl = new UserAgentImplSafari_0;
  compileTimeValue = impl.getCompileTimeValue();
  runtimeValue = impl.getRuntimeValue();
  $equals_2(compileTimeValue, runtimeValue) || $displayMismatchWarning(runtimeValue, compileTimeValue);
}

function UserAgentAsserter_0(){
  Object_1.call(this);
  $$init_371();
}

defineSeed(454, 1, {}, UserAgentAsserter_0);
function $$init_372(){
}

function UserAgentImplSafari_0(){
  Object_1.call(this);
  $$init_372();
}

defineSeed(455, 1, {}, UserAgentImplSafari_0);
_.getCompileTimeValue = function getCompileTimeValue(){
  return 'safari';
}
;
_.getRuntimeValue = function getRuntimeValue(){
  var ua = navigator.userAgent.toLowerCase();
  var makeVersion = function(result){
    return parseInt(result[1]) * 1000 + parseInt(result[2]);
  }
  ;
  if (function(){
    return ua.indexOf('webkit') != -1;
  }
  ())
    return 'safari';
  if (function(){
    return ua.indexOf('msie') != -1 && $doc.documentMode >= 10;
  }
  ())
    return 'ie10';
  if (function(){
    return ua.indexOf('msie') != -1 && $doc.documentMode >= 9;
  }
  ())
    return 'ie9';
  if (function(){
    return ua.indexOf('msie') != -1 && $doc.documentMode >= 8;
  }
  ())
    return 'ie8';
  if (function(){
    return ua.indexOf('gecko') != -1;
  }
  ())
    return 'gecko1_8';
  return 'unknown';
}
;
function $abort(this$static){
  this$static.abort();
}

function $clearOnReadyStateChange(this$static){
  var self_0 = this$static;
  setTimeout_0(function(){
    self_0.onreadystatechange = new Function;
  }
  , 0);
}

function $getReadyState(this$static){
  return this$static.readyState;
}

function $getResponseText(this$static){
  return this$static.responseText;
}

function $getStatus(this$static){
  return this$static.status;
}

function $open(this$static, httpMethod, url_0){
  this$static.open(httpMethod, url_0, true);
}

function $open_0(this$static, httpMethod, url_0, user){
  this$static.open(httpMethod, url_0, true, user);
}

function $open_1(this$static, httpMethod, url_0, user, password){
  this$static.open(httpMethod, url_0, true, user, password);
}

function $send_0(this$static, requestData){
  this$static.send(requestData);
}

function $setOnReadyStateChange(this$static, handler){
  var _this = this$static;
  this$static.onreadystatechange = $entry(function(){
    handler.onReadyStateChange(_this);
  }
  );
}

function $setRequestHeader(this$static, header, value_0){
  this$static.setRequestHeader(header, value_0);
}

function $setWithCredentials(this$static, withCredentials){
  this$static.withCredentials = withCredentials;
}

function create_8(){
  var xhr;
  if ($wnd.XMLHttpRequest) {
    xhr = new $wnd.XMLHttpRequest;
  }
   else {
    try {
      xhr = new $wnd.ActiveXObject('MSXML2.XMLHTTP.3.0');
    }
     catch (e) {
      xhr = new $wnd.ActiveXObject('Microsoft.XMLHTTP');
    }
  }
  return xhr;
}

function $$init_373(){
}

function SimpleEventBus$1_0(this$0, val$type, val$source, val$handler){
  this.this$0 = this$0;
  this.val$type = val$type;
  this.val$source = val$source;
  this.val$handler = val$handler;
  Object_1.call(this);
  $$init_373();
}

defineSeed(457, 1, {}, SimpleEventBus$1_0);
_.removeHandler = function removeHandler_0(){
  this.this$0.doRemove(this.val$type, this.val$source, this.val$handler);
}
;
function $$init_374(){
}

function SimpleEventBus$2_0(this$0, val$type, val$source, val$handler){
  this.this$0 = this$0;
  this.val$type = val$type;
  this.val$source = val$source;
  this.val$handler = val$handler;
  Object_1.call(this);
  $$init_374();
}

defineSeed(458, 1, makeCastMap([Q$SimpleEventBus$Command]), SimpleEventBus$2_0);
_.execute_1 = function execute_11(){
  $doAddNow(this.this$0, this.val$type, this.val$source, this.val$handler);
}
;
function $$init_375(){
}

function SimpleEventBus$3_0(this$0, val$type, val$source, val$handler){
  this.this$0 = this$0;
  this.val$type = val$type;
  this.val$source = val$source;
  this.val$handler = val$handler;
  Object_1.call(this);
  $$init_375();
}

defineSeed(459, 1, makeCastMap([Q$SimpleEventBus$Command]), SimpleEventBus$3_0);
_.execute_1 = function execute_12(){
  $doRemoveNow(this.this$0, this.val$type, this.val$source, this.val$handler);
}
;
function $$init_376(){
}

function $onLoad_1(){
}

function DetailServiceController_0(){
  Object_1.call(this);
  $$init_376();
}

defineSeed(460, 1, {});
function $clinit_DetailServiceController_ControllerProxy(){
  $clinit_DetailServiceController_ControllerProxy = nullMethod;
  _logger_ = getLogger($getName_2(Leu_cloudopting_ui_ToscaUI_client_controller_DetailServiceController_1ControllerProxy_2_classLit));
}

function $$init_377(){
}

function $onLoad_Exposed_(){
  loggingIsEnabled() && $log_4(_logger_, ($clinit_Level() , FINE), 'Calling client method: Controller[detailServiceController], Method[onLoad]');
  $onLoad_1();
  loggingIsEnabled() && $log_4(_logger_, ($clinit_Level() , FINE), 'Client method executed: Controller[detailServiceController], Method[onLoad]');
}

function DetailServiceController_ControllerProxy_0(view){
  $clinit_DetailServiceController_ControllerProxy();
  DetailServiceController_0.call(this);
  $$init_377();
  this.__view = view;
}

defineSeed(461, 460, makeCastMap([Q$DetailServiceController_ControllerProxy]), DetailServiceController_ControllerProxy_0);
_.getBoundCruxView = function getBoundCruxView(){
  return this.__view;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId(){
  return isNull_1(this.__view)?null:$getId_0(this.__view);
}
;
var _logger_;
function $$init_378(){
}

function DetailServiceController_DetailServiceView_Impl_0(){
  Object_1.call(this);
  $$init_378();
  this.__view = 'detailServiceView';
}

defineSeed(462, 1, makeCastMap([Q$DetailServiceController$DetailServiceView]), DetailServiceController_DetailServiceView_Impl_0);
_.bindCruxView = function bindCruxView(view){
  this.__view = view;
}
;
_.getBoundCruxView = function getBoundCruxView_0(){
  return jsNotEquals(this.__view, null)?getView(this.__view):null;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_0(){
  return this.__view;
}
;
function $$init_379(){
}

function $login(this$static){
  var callback;
  callback = new LoginController$1_0(this$static);
  this$static.connectApi.connect($getValue_1(this$static.loginView.nameTextBox()), $getValue_1(this$static.loginView.passwordTextBox()), callback);
}

function $onLoad_2(this$static){
  this$static.loginView.passwordTextBox().setStyleName('gwt-TextBox');
}

function LoginController_0(){
  Object_1.call(this);
  $$init_379();
}

defineSeed(463, 1, {});
function $$init_380(){
}

function $onSuccess(result){
  var views;
  if (jsNotEquals(result, null)) {
    views = dynamicCast(get_31('views'), Q$HorizontalSwapContainer);
    $showView(views, 'menu');
  }
   else {
    show_2('Try again!! Authentication ERROR: No SESSION ID recived.', ($clinit_FlatMessageBox$MessageType() , INFO_0));
  }
}

function LoginController$1_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_380();
}

defineSeed(464, 1, {}, LoginController$1_0);
_.onError_0 = function onError(e){
  show_2('Try again!! Authentication ERROR: ' + e.getMessage(), ($clinit_FlatMessageBox$MessageType() , INFO_0));
}
;
_.onSuccess = function onSuccess(result){
  $onSuccess(dynamicCast(result, Q$String));
}
;
function $clinit_LoginController_ControllerProxy(){
  $clinit_LoginController_ControllerProxy = nullMethod;
  _logger__0 = getLogger($getName_2(Leu_cloudopting_ui_ToscaUI_client_controller_LoginController_1ControllerProxy_2_classLit));
}

function $$init_381(){
}

function $login_Exposed_(this$static){
  loggingIsEnabled() && $log_4(_logger__0, ($clinit_Level() , FINE), 'Calling client method: Controller[loginController], Method[login]');
  $login(this$static);
  loggingIsEnabled() && $log_4(_logger__0, ($clinit_Level() , FINE), 'Client method executed: Controller[loginController], Method[login]');
}

function $onLoad_Exposed__0(this$static){
  loggingIsEnabled() && $log_4(_logger__0, ($clinit_Level() , FINE), 'Calling client method: Controller[loginController], Method[onLoad]');
  $onLoad_2(this$static);
  loggingIsEnabled() && $log_4(_logger__0, ($clinit_Level() , FINE), 'Client method executed: Controller[loginController], Method[onLoad]');
}

function LoginController_ControllerProxy_0(view){
  $clinit_LoginController_ControllerProxy();
  LoginController_0.call(this);
  $$init_381();
  this.__view = view;
}

defineSeed(465, 463, makeCastMap([Q$LoginController_ControllerProxy]), LoginController_ControllerProxy_0);
_.getBoundCruxView = function getBoundCruxView_1(){
  return this.__view;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_1(){
  return isNull_1(this.__view)?null:$getId_0(this.__view);
}
;
var _logger__0;
function $$init_382(){
}

function LoginController_LoginView_Impl_0(){
  Object_1.call(this);
  $$init_382();
  this.__view = 'login';
}

defineSeed(466, 1, makeCastMap([Q$LoginController$LoginView]), LoginController_LoginView_Impl_0);
_.bindCruxView = function bindCruxView_0(view){
  this.__view = view;
}
;
_.getBoundCruxView = function getBoundCruxView_2(){
  return jsNotEquals(this.__view, null)?getView(this.__view):null;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_2(){
  return this.__view;
}
;
_.nameTextBox = function nameTextBox(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'nameTextBox'), Q$TextBox);
}
;
_.passwordTextBox = function passwordTextBox(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'passwordTextBox'), Q$TextBox);
}
;
function $$init_383(){
}

function $changeView(){
  var views;
  views = dynamicCast(get_31('views'), Q$HorizontalSwapContainer);
  $showView(views, 'toscalist');
}

function $clean(this$static){
  $setValue_0(this$static.mainView.createdBy(), '');
  $setValue_0(this$static.mainView.createdDate(), '');
  $setValue_0(this$static.mainView.lastModifiedBy(), '');
  $setValue_0(this$static.mainView.lastModifiedDate(), '');
  $setValue_0(this$static.mainView.id_1(), '');
  $setValue_0(this$static.mainView.login(), '');
  $setValue_0(this$static.mainView.firstName(), '');
  $setValue_0(this$static.mainView.lastName(), '');
  $setValue_0(this$static.mainView.email(), '');
  $setValue_0(this$static.mainView.activated(), '');
  $setValue_0(this$static.mainView.langKey(), '');
  $setValue_0(this$static.mainView.activationKey(), '');
}

function $createField(this$static){
  var fd, tb;
  fd = new FormDisplay_0;
  tb = new TextBox_0;
  $setValue_0(tb, 'TESTING');
  $addEntry(fd, 'TESTING1', tb, startOf(($clinit_HasDirection$Direction() , DEFAULT)));
  $addEntry(fd, 'TESTING2', tb, startOf(($clinit_HasDirection$Direction() , DEFAULT)));
  $addEntry(fd, 'TESTING3', tb, startOf(($clinit_HasDirection$Direction() , DEFAULT)));
  $addEntry(fd, 'TESTING4', tb, startOf(($clinit_HasDirection$Direction() , DEFAULT)));
  $addEntry(fd, 'TESTING5', tb, startOf(($clinit_HasDirection$Direction() , DEFAULT)));
  $add_2(this$static.mainView.gwtFormPanel(), fd);
}

function $getInfoUser(this$static){
  var callback, callbackUserInfo;
  callbackUserInfo = new MainController$1_0(this$static);
  callback = new MainController$2_0(this$static, callbackUserInfo);
  this$static.connectApi.getUser($getValue_1(this$static.mainView.nameTextBox()), callback);
}

function $onLoad_3(){
}

function MainController_0(){
  Object_1.call(this);
  $$init_383();
}

defineSeed(467, 1, {});
function $$init_384(){
}

function $onSuccess_0(this$static, result){
  $setValue_0(this$static.this$0.mainView.createdBy(), dynamicCast(result.get_2('createdBy'), Q$String));
  $setValue_0(this$static.this$0.mainView.createdDate(), $toString_3(new Date_2(parseLong(dynamicCast(result.get_2('createdDate'), Q$String)))));
  $setValue_0(this$static.this$0.mainView.lastModifiedBy(), dynamicCast(result.get_2('lastModifiedBy'), Q$String));
  $setValue_0(this$static.this$0.mainView.lastModifiedDate(), $toString_3(new Date_2(parseLong(dynamicCast(result.get_2('lastModifiedDate'), Q$String)))));
  $setValue_0(this$static.this$0.mainView.id_1(), dynamicCast(result.get_2('id'), Q$String));
  $setValue_0(this$static.this$0.mainView.login(), dynamicCast(result.get_2('login'), Q$String));
  $setValue_0(this$static.this$0.mainView.firstName(), dynamicCast(result.get_2('firstName'), Q$String));
  $setValue_0(this$static.this$0.mainView.lastName(), dynamicCast(result.get_2('lastName'), Q$String));
  $setValue_0(this$static.this$0.mainView.email(), dynamicCast(result.get_2('email'), Q$String));
  $setValue_0(this$static.this$0.mainView.activated(), dynamicCast(result.get_2('activated'), Q$String));
  $setValue_0(this$static.this$0.mainView.langKey(), dynamicCast(result.get_2('langKey'), Q$String));
  $setValue_0(this$static.this$0.mainView.activationKey(), dynamicCast(result.get_2('activationKey'), Q$String));
}

function MainController$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_384();
}

defineSeed(468, 1, {}, MainController$1_0);
_.onError_0 = function onError_0(e){
}
;
_.onSuccess = function onSuccess_0(result){
  $onSuccess_0(this, dynamicCast(result, Q$Map));
}
;
function $$init_385(){
}

function $onSuccess_1(this$static, result){
  this$static.this$0.userInfo.getLastModifiedBy(result, this$static.val$callbackUserInfo);
}

function MainController$2_0(this$0, val$callbackUserInfo){
  this.this$0 = this$0;
  this.val$callbackUserInfo = val$callbackUserInfo;
  Object_1.call(this);
  $$init_385();
}

defineSeed(469, 1, {}, MainController$2_0);
_.onError_0 = function onError_1(e){
  show_2('The user [' + $getValue_1(this.this$0.mainView.nameTextBox()) + '] does not exist!!', ($clinit_FlatMessageBox$MessageType() , INFO_0));
}
;
_.onSuccess = function onSuccess_1(result){
  $onSuccess_1(this, dynamicCast(result, Q$String));
}
;
function $clinit_MainController_ControllerProxy(){
  $clinit_MainController_ControllerProxy = nullMethod;
  _logger__1 = getLogger($getName_2(Leu_cloudopting_ui_ToscaUI_client_controller_MainController_1ControllerProxy_2_classLit));
}

function $$init_386(){
}

function $changeView_Exposed_(){
  loggingIsEnabled() && $log_4(_logger__1, ($clinit_Level() , FINE), 'Calling client method: Controller[mainController], Method[changeView]');
  $changeView();
  loggingIsEnabled() && $log_4(_logger__1, ($clinit_Level() , FINE), 'Client method executed: Controller[mainController], Method[changeView]');
}

function $clean_Exposed_(this$static){
  loggingIsEnabled() && $log_4(_logger__1, ($clinit_Level() , FINE), 'Calling client method: Controller[mainController], Method[clean]');
  $clean(this$static);
  loggingIsEnabled() && $log_4(_logger__1, ($clinit_Level() , FINE), 'Client method executed: Controller[mainController], Method[clean]');
}

function $createField_Exposed_(this$static){
  loggingIsEnabled() && $log_4(_logger__1, ($clinit_Level() , FINE), 'Calling client method: Controller[mainController], Method[createField]');
  $createField(this$static);
  loggingIsEnabled() && $log_4(_logger__1, ($clinit_Level() , FINE), 'Client method executed: Controller[mainController], Method[createField]');
}

function $getInfoUser_Exposed_(this$static){
  loggingIsEnabled() && $log_4(_logger__1, ($clinit_Level() , FINE), 'Calling client method: Controller[mainController], Method[getInfoUser]');
  $getInfoUser(this$static);
  loggingIsEnabled() && $log_4(_logger__1, ($clinit_Level() , FINE), 'Client method executed: Controller[mainController], Method[getInfoUser]');
}

function $onLoad_Exposed__1(){
  loggingIsEnabled() && $log_4(_logger__1, ($clinit_Level() , FINE), 'Calling client method: Controller[mainController], Method[onLoad]');
  $onLoad_3();
  loggingIsEnabled() && $log_4(_logger__1, ($clinit_Level() , FINE), 'Client method executed: Controller[mainController], Method[onLoad]');
}

function MainController_ControllerProxy_0(view){
  $clinit_MainController_ControllerProxy();
  MainController_0.call(this);
  $$init_386();
  this.__view = view;
}

defineSeed(470, 467, makeCastMap([Q$MainController_ControllerProxy]), MainController_ControllerProxy_0);
_.getBoundCruxView = function getBoundCruxView_3(){
  return this.__view;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_3(){
  return isNull_1(this.__view)?null:$getId_0(this.__view);
}
;
var _logger__1;
function $$init_387(){
}

function MainController_MainView_Impl_0(){
  Object_1.call(this);
  $$init_387();
  this.__view = 'main';
}

defineSeed(471, 1, makeCastMap([Q$MainController$MainView]), MainController_MainView_Impl_0);
_.activated = function activated_0(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'activated'), Q$TextBox);
}
;
_.activationKey = function activationKey(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'activationKey'), Q$TextBox);
}
;
_.bindCruxView = function bindCruxView_1(view){
  this.__view = view;
}
;
_.createdBy = function createdBy(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'createdBy'), Q$TextBox);
}
;
_.createdDate = function createdDate(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'createdDate'), Q$TextBox);
}
;
_.email = function email(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'email'), Q$TextBox);
}
;
_.firstName = function firstName(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'firstName'), Q$TextBox);
}
;
_.getBoundCruxView = function getBoundCruxView_4(){
  return jsNotEquals(this.__view, null)?getView(this.__view):null;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_4(){
  return this.__view;
}
;
_.gwtFormPanel = function gwtFormPanel(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'gwtFormPanel'), Q$FormPanel);
}
;
_.id_1 = function id_1(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'id'), Q$TextBox);
}
;
_.langKey = function langKey(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'langKey'), Q$TextBox);
}
;
_.lastModifiedBy = function lastModifiedBy(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'lastModifiedBy'), Q$TextBox);
}
;
_.lastModifiedDate = function lastModifiedDate(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'lastModifiedDate'), Q$TextBox);
}
;
_.lastName = function lastName(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'lastName'), Q$TextBox);
}
;
_.login = function login(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'login'), Q$TextBox);
}
;
_.nameTextBox = function nameTextBox_0(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'nameTextBox'), Q$TextBox);
}
;
function $$init_388(){
}

function $onLoad_4(){
}

function MenuController_0(){
  Object_1.call(this);
  $$init_388();
}

defineSeed(472, 1, {});
function $clinit_MenuController_ControllerProxy(){
  $clinit_MenuController_ControllerProxy = nullMethod;
  _logger__2 = getLogger($getName_2(Leu_cloudopting_ui_ToscaUI_client_controller_MenuController_1ControllerProxy_2_classLit));
}

function $$init_389(){
}

function $onLoad_Exposed__2(){
  loggingIsEnabled() && $log_4(_logger__2, ($clinit_Level() , FINE), 'Calling client method: Controller[menuController], Method[onLoad]');
  $onLoad_4();
  loggingIsEnabled() && $log_4(_logger__2, ($clinit_Level() , FINE), 'Client method executed: Controller[menuController], Method[onLoad]');
}

function MenuController_ControllerProxy_0(view){
  $clinit_MenuController_ControllerProxy();
  MenuController_0.call(this);
  $$init_389();
  this.__view = view;
}

defineSeed(473, 472, makeCastMap([Q$MenuController_ControllerProxy]), MenuController_ControllerProxy_0);
_.getBoundCruxView = function getBoundCruxView_5(){
  return this.__view;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_5(){
  return isNull_1(this.__view)?null:$getId_0(this.__view);
}
;
var _logger__2;
function $$init_390(){
}

function MenuController_MenuView_Impl_0(){
  Object_1.call(this);
  $$init_390();
  this.__view = 'menuView';
}

defineSeed(474, 1, makeCastMap([Q$MenuController$MenuView]), MenuController_MenuView_Impl_0);
_.bindCruxView = function bindCruxView_2(view){
  this.__view = view;
}
;
_.getBoundCruxView = function getBoundCruxView_6(){
  return jsNotEquals(this.__view, null)?getView(this.__view):null;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_6(){
  return this.__view;
}
;
function $$init_391(){
}

function $deleteItem(){
}

function $onLoad_5(){
}

function $publishService(){
}

function $saveConfiguration(){
}

function PublishServiceController_0(){
  Object_1.call(this);
  $$init_391();
}

defineSeed(475, 1, {});
function $clinit_PublishServiceController_ControllerProxy(){
  $clinit_PublishServiceController_ControllerProxy = nullMethod;
  _logger__3 = getLogger($getName_2(Leu_cloudopting_ui_ToscaUI_client_controller_PublishServiceController_1ControllerProxy_2_classLit));
}

function $$init_392(){
}

function $deleteItem_Exposed_(){
  loggingIsEnabled() && $log_4(_logger__3, ($clinit_Level() , FINE), 'Calling client method: Controller[publishServiceController], Method[deleteItem]');
  $deleteItem();
  loggingIsEnabled() && $log_4(_logger__3, ($clinit_Level() , FINE), 'Client method executed: Controller[publishServiceController], Method[deleteItem]');
}

function $onLoad_Exposed__3(){
  loggingIsEnabled() && $log_4(_logger__3, ($clinit_Level() , FINE), 'Calling client method: Controller[publishServiceController], Method[onLoad]');
  $onLoad_5();
  loggingIsEnabled() && $log_4(_logger__3, ($clinit_Level() , FINE), 'Client method executed: Controller[publishServiceController], Method[onLoad]');
}

function $publishService_Exposed_(){
  loggingIsEnabled() && $log_4(_logger__3, ($clinit_Level() , FINE), 'Calling client method: Controller[publishServiceController], Method[publishService]');
  $publishService();
  loggingIsEnabled() && $log_4(_logger__3, ($clinit_Level() , FINE), 'Client method executed: Controller[publishServiceController], Method[publishService]');
}

function $saveConfiguration_Exposed_(){
  loggingIsEnabled() && $log_4(_logger__3, ($clinit_Level() , FINE), 'Calling client method: Controller[publishServiceController], Method[saveConfiguration]');
  $saveConfiguration();
  loggingIsEnabled() && $log_4(_logger__3, ($clinit_Level() , FINE), 'Client method executed: Controller[publishServiceController], Method[saveConfiguration]');
}

function PublishServiceController_ControllerProxy_0(view){
  $clinit_PublishServiceController_ControllerProxy();
  PublishServiceController_0.call(this);
  $$init_392();
  this.__view = view;
}

defineSeed(476, 475, makeCastMap([Q$PublishServiceController_ControllerProxy]), PublishServiceController_ControllerProxy_0);
_.getBoundCruxView = function getBoundCruxView_7(){
  return this.__view;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_7(){
  return isNull_1(this.__view)?null:$getId_0(this.__view);
}
;
var _logger__3;
function $$init_393(){
}

function PublishServiceController_PublishServiceView_Impl_0(){
  Object_1.call(this);
  $$init_393();
  this.__view = 'publishServiceView';
}

defineSeed(477, 1, makeCastMap([Q$PublishServiceController$PublishServiceView]), PublishServiceController_PublishServiceView_Impl_0);
_.bindCruxView = function bindCruxView_3(view){
  this.__view = view;
}
;
_.getBoundCruxView = function getBoundCruxView_8(){
  return jsNotEquals(this.__view, null)?getView(this.__view):null;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_8(){
  return this.__view;
}
;
function $$init_394(){
}

function $loadItems(this$static){
  var handler, listItem, w, w$iterator;
  listItem = new ArrayList_0;
  handler = new ServiceCatalogListController$1_0(this$static);
  listItem.add_0(new StoryboardItem_0('Clearo', 'Clearo is a service that allows to...', 'CHOOSE THIS SERVICE', handler));
  listItem.add_0(new StoryboardItem_0('FixThis', 'FixThis is a service that allows to...', 'CHOOSE THIS SERVICE', handler));
  listItem.add_0(new StoryboardItem_0('Agenda', 'Agenda is a service that allows to...', 'CHOOSE THIS SERVICE', handler));
  listItem.add_0(new StoryboardItem_0('Next2Me', 'Next2Me is a service that allows to...', 'CHOOSE THIS SERVICE', handler));
  listItem.add_0(new StoryboardItem_0('MobileID', 'MobileID is a service that allows to...', 'CHOOSE THIS SERVICE', handler));
  listItem.add_0(new StoryboardItem_0('ASIA', 'ASIA is a service that allows to...', 'CHOOSE THIS SERVICE', handler));
  listItem.add_0(new StoryboardItem_0('MIB', 'MIB (Base Information Database) is a service that allows to...', 'CHOOSE THIS SERVICE', handler));
  listItem.add_0(new StoryboardItem_0('Energy Consumption - Corby', 'Energy Consumption - Corby is a service that allows to...', 'CHOOSE THIS SERVICE', handler));
  listItem.add_0(new StoryboardItem_0('Transportation System - Corby', 'Transportation System - Corby is a service that allows to...', 'CHOOSE THIS SERVICE', handler));
  listItem.add_0(new StoryboardItem_0('BusPortal - Corby', 'BusPortal - Corby is a service that allows to...', 'CHOOSE THIS SERVICE', handler));
  listItem.add_0(new StoryboardItem_0('IndicatorsPortal - Sant Feliu', 'IndicatorsPortal - Sant Feliu is a service that allows to...', 'CHOOSE THIS SERVICE', handler));
  listItem.add_0(new StoryboardItem_0('SmartCityCloud - Sant Feliu', 'SmartCityCloud - Sant Feliu is a service that allows to...', 'CHOOSE THIS SERVICE', handler));
  listItem.add_0(new StoryboardItem_0('Barcelona Open Data', 'Barcelona Open Data is a service that allows to...', 'CHOOSE THIS SERVICE', handler));
  for (w$iterator = listItem.iterator(); w$iterator.hasNext();) {
    w = dynamicCast(w$iterator.next_0(), Q$StoryboardItem);
    this$static.serviceCatalogList.storyboard_0().add_1(w);
  }
}

function $onLoad_6(this$static){
  $loadItems(this$static);
}

function $openDetail(this$static){
  $loadView_1(this$static.serviceCatalogList.dialogViewContainer(), 'detailService', true);
  $openDialog(this$static.serviceCatalogList.dialogViewContainer());
  $center_0(this$static.serviceCatalogList.dialogViewContainer());
}

function ServiceCatalogListController_0(){
  Object_1.call(this);
  $$init_394();
}

defineSeed(478, 1, {});
function $$init_395(){
}

function ServiceCatalogListController$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_395();
}

defineSeed(479, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), ServiceCatalogListController$1_0);
_.onClick = function onClick(event_0){
  $openDetail(this.this$0);
}
;
function $clinit_ServiceCatalogListController_ControllerProxy(){
  $clinit_ServiceCatalogListController_ControllerProxy = nullMethod;
  _logger__4 = getLogger($getName_2(Leu_cloudopting_ui_ToscaUI_client_controller_ServiceCatalogListController_1ControllerProxy_2_classLit));
}

function $$init_396(){
}

function $onLoad_Exposed__4(this$static){
  loggingIsEnabled() && $log_4(_logger__4, ($clinit_Level() , FINE), 'Calling client method: Controller[serviceCatalogListController], Method[onLoad]');
  $onLoad_6(this$static);
  loggingIsEnabled() && $log_4(_logger__4, ($clinit_Level() , FINE), 'Client method executed: Controller[serviceCatalogListController], Method[onLoad]');
}

function ServiceCatalogListController_ControllerProxy_0(view){
  $clinit_ServiceCatalogListController_ControllerProxy();
  ServiceCatalogListController_0.call(this);
  $$init_396();
  this.__view = view;
}

defineSeed(480, 478, makeCastMap([Q$ServiceCatalogListController_ControllerProxy]), ServiceCatalogListController_ControllerProxy_0);
_.getBoundCruxView = function getBoundCruxView_9(){
  return this.__view;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_9(){
  return isNull_1(this.__view)?null:$getId_0(this.__view);
}
;
var _logger__4;
function $$init_397(){
}

function ServiceCatalogListController_ServiceCatalogList_Impl_0(){
  Object_1.call(this);
  $$init_397();
  this.__view = 'serviceCatalogList';
}

defineSeed(481, 1, makeCastMap([Q$ServiceCatalogListController$ServiceCatalogList]), ServiceCatalogListController_ServiceCatalogList_Impl_0);
_.bindCruxView = function bindCruxView_4(view){
  this.__view = view;
}
;
_.dialogViewContainer = function dialogViewContainer(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'dialogViewContainer'), Q$DialogViewContainer);
}
;
_.getBoundCruxView = function getBoundCruxView_10(){
  return jsNotEquals(this.__view, null)?getView(this.__view):null;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_10(){
  return this.__view;
}
;
_.storyboard_0 = function storyboard(){
  var __view;
  __view = getView(this.__view);
  if (isNull_1(__view)) {
    debugger;
    throw makeAssertionError_Object('View [' + this.__view + '] was not loaded. Ensure that desired view is loaded by the application (through useView declaration).');
  }
  return dynamicCast($getWidget_2(__view, 'storyboard'), Q$Storyboard);
}
;
function $$init_398(){
}

function $onLoad_7(){
}

function $subscribeService(){
  show_2('Subscribe!!!', ($clinit_FlatMessageBox$MessageType() , INFO_0));
}

function SubscribeServiceTaylorFormController_0(){
  Object_1.call(this);
  $$init_398();
}

defineSeed(482, 1, {});
function $clinit_SubscribeServiceTaylorFormController_ControllerProxy(){
  $clinit_SubscribeServiceTaylorFormController_ControllerProxy = nullMethod;
  _logger__5 = getLogger($getName_2(Leu_cloudopting_ui_ToscaUI_client_controller_SubscribeServiceTaylorFormController_1ControllerProxy_2_classLit));
}

function $$init_399(){
}

function $onLoad_Exposed__5(){
  loggingIsEnabled() && $log_4(_logger__5, ($clinit_Level() , FINE), 'Calling client method: Controller[subscribeServiceTaylorFormController], Method[onLoad]');
  $onLoad_7();
  loggingIsEnabled() && $log_4(_logger__5, ($clinit_Level() , FINE), 'Client method executed: Controller[subscribeServiceTaylorFormController], Method[onLoad]');
}

function $subscribeService_Exposed_(){
  loggingIsEnabled() && $log_4(_logger__5, ($clinit_Level() , FINE), 'Calling client method: Controller[subscribeServiceTaylorFormController], Method[subscribeService]');
  $subscribeService();
  loggingIsEnabled() && $log_4(_logger__5, ($clinit_Level() , FINE), 'Client method executed: Controller[subscribeServiceTaylorFormController], Method[subscribeService]');
}

function SubscribeServiceTaylorFormController_ControllerProxy_0(view){
  $clinit_SubscribeServiceTaylorFormController_ControllerProxy();
  SubscribeServiceTaylorFormController_0.call(this);
  $$init_399();
  this.__view = view;
}

defineSeed(483, 482, makeCastMap([Q$SubscribeServiceTaylorFormController_ControllerProxy]), SubscribeServiceTaylorFormController_ControllerProxy_0);
_.getBoundCruxView = function getBoundCruxView_11(){
  return this.__view;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_11(){
  return isNull_1(this.__view)?null:$getId_0(this.__view);
}
;
var _logger__5;
function $$init_400(){
}

function SubscribeServiceTaylorFormController_SubscribeServiceTaylorFormView_Impl_0(){
  Object_1.call(this);
  $$init_400();
  this.__view = 'subscribeServiceTaylorFormView';
}

defineSeed(484, 1, makeCastMap([Q$SubscribeServiceTaylorFormController$SubscribeServiceTaylorFormView]), SubscribeServiceTaylorFormController_SubscribeServiceTaylorFormView_Impl_0);
_.bindCruxView = function bindCruxView_5(view){
  this.__view = view;
}
;
_.getBoundCruxView = function getBoundCruxView_12(){
  return jsNotEquals(this.__view, null)?getView(this.__view):null;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_12(){
  return this.__view;
}
;
function $$init_401(){
}

function $changeView_0(){
  var views;
  views = dynamicCast(get_31('views'), Q$HorizontalSwapContainer);
  $showView(views, 'main');
}

function $onModuleLoad_2(){
}

function $sayOK(){
  alert_0('OK');
}

function ToscaListController_0(){
  Object_1.call(this);
  $$init_401();
}

defineSeed(485, 1, {});
function $clinit_ToscaListController_ControllerProxy(){
  $clinit_ToscaListController_ControllerProxy = nullMethod;
  _logger__6 = getLogger($getName_2(Leu_cloudopting_ui_ToscaUI_client_controller_ToscaListController_1ControllerProxy_2_classLit));
}

function $$init_402(){
}

function $changeView_Exposed__0(){
  loggingIsEnabled() && $log_4(_logger__6, ($clinit_Level() , FINE), 'Calling client method: Controller[toscaListController], Method[changeView]');
  $changeView_0();
  loggingIsEnabled() && $log_4(_logger__6, ($clinit_Level() , FINE), 'Client method executed: Controller[toscaListController], Method[changeView]');
}

function $onModuleLoad_Exposed_(){
  loggingIsEnabled() && $log_4(_logger__6, ($clinit_Level() , FINE), 'Calling client method: Controller[toscaListController], Method[onModuleLoad]');
  $onModuleLoad_2();
  loggingIsEnabled() && $log_4(_logger__6, ($clinit_Level() , FINE), 'Client method executed: Controller[toscaListController], Method[onModuleLoad]');
}

function $sayOK_Exposed_(){
  loggingIsEnabled() && $log_4(_logger__6, ($clinit_Level() , FINE), 'Calling client method: Controller[toscaListController], Method[sayOK]');
  $sayOK();
  loggingIsEnabled() && $log_4(_logger__6, ($clinit_Level() , FINE), 'Client method executed: Controller[toscaListController], Method[sayOK]');
}

function ToscaListController_ControllerProxy_0(view){
  $clinit_ToscaListController_ControllerProxy();
  ToscaListController_0.call(this);
  $$init_402();
  this.__view = view;
}

defineSeed(486, 485, makeCastMap([Q$ToscaListController_ControllerProxy]), ToscaListController_ControllerProxy_0);
_.getBoundCruxView = function getBoundCruxView_13(){
  return this.__view;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_13(){
  return isNull_1(this.__view)?null:$getId_0(this.__view);
}
;
var _logger__6;
function $clinit_IApi_Impl(){
  $clinit_IApi_Impl = nullMethod;
  getLogger($getName_2(Leu_cloudopting_ui_ToscaUI_client_remote_IApi_1Impl_2_classLit));
}

function $$init_403(){
}

function IApi_Impl_0(){
  $clinit_IApi_Impl();
  Object_1.call(this);
  $$init_403();
  this , 'http://localhost:8080';
}

defineSeed(487, 1, makeCastMap([Q$IApi]), IApi_Impl_0);
_.bindCruxView = function bindCruxView_6(view){
  this.__view = view;
}
;
_.getBoundCruxView = function getBoundCruxView_14(){
  return jsNotEquals(this.__view, null)?getView(this.__view):null;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_14(){
  return this.__view;
}
;
function $clinit_IConnect_Impl(){
  $clinit_IConnect_Impl = nullMethod;
  __log = getLogger($getName_2(Leu_cloudopting_ui_ToscaUI_client_remote_IConnect_1Impl_2_classLit));
}

function $$init_404(){
}

function IConnect_Impl_0(){
  $clinit_IConnect_Impl();
  Object_1.call(this);
  $$init_404();
  this.__hostPath = getModuleBaseURL();
  this.__hostPath = $substring_0(this.__hostPath, 0, $lastIndexOf_1(this.__hostPath, getModuleName()));
}

defineSeed(488, 1, makeCastMap([Q$IConnect]), IConnect_Impl_0);
_.bindCruxView = function bindCruxView_7(view){
  this.__view = view;
}
;
_.connect = function connect(user, pass, callback){
  var _locale, baseURIPath, builder, e, restURI;
  baseURIPath = 'rest/connect/?user={user}&pass={pass}';
  baseURIPath = $replace_1(baseURIPath, '{user}', encodePathSegment(jsNotEquals(user, null) && !$equals_2($trim(user), '')?user:''));
  baseURIPath = $replace_1(baseURIPath, '{pass}', encodePathSegment(jsNotEquals(pass, null) && !$equals_2($trim(pass), '')?pass:''));
  restURI = this.__hostPath + baseURIPath;
  builder = new RequestBuilder_0(($clinit_RequestBuilder() , GET), restURI);
  _locale = getLocale();
  jsNotEquals(_locale, null) && !unsafeEquals(_locale, 'default') && $setHeader(builder, 'Accept-Language', $replace_0(_locale, 95, 45));
  $setCallback(builder, new IConnect_Impl$1_0(this, callback));
  try {
    $send(builder);
  }
   catch ($e0) {
    $e0 = wrap($e0);
    if (instanceOf($e0, Q$Exception)) {
      e = $e0;
      loggingIsEnabled() && $log_5(__log, ($clinit_Level() , SEVERE), e.getMessage(), e);
      callback.onError_0(new RestError_0(-1, getMessages().restServiceUnexpectedError(e.getMessage())));
    }
     else 
      throw unwrap($e0);
  }
}
;
_.getBoundCruxView = function getBoundCruxView_15(){
  return jsNotEquals(this.__view, null)?getView(this.__view):null;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_15(){
  return this.__view;
}
;
_.getUser = function getUser(user, callback){
  var _locale, baseURIPath, builder, e, restURI;
  baseURIPath = 'rest/connect/users/{user}';
  baseURIPath = $replace_1(baseURIPath, '{user}', encodePathSegment(jsNotEquals(user, null) && !$equals_2($trim(user), '')?user:''));
  restURI = this.__hostPath + baseURIPath;
  builder = new RequestBuilder_0(($clinit_RequestBuilder() , GET), restURI);
  _locale = getLocale();
  jsNotEquals(_locale, null) && !unsafeEquals(_locale, 'default') && $setHeader(builder, 'Accept-Language', $replace_0(_locale, 95, 45));
  $setCallback(builder, new IConnect_Impl$2_0(this, callback));
  try {
    $send(builder);
  }
   catch ($e0) {
    $e0 = wrap($e0);
    if (instanceOf($e0, Q$Exception)) {
      e = $e0;
      loggingIsEnabled() && $log_5(__log, ($clinit_Level() , SEVERE), e.getMessage(), e);
      callback.onError_0(new RestError_0(-1, getMessages().restServiceUnexpectedError(e.getMessage())));
    }
     else 
      throw unwrap($e0);
  }
}
;
var __log;
function $$init_405(){
}

function IConnect_Impl$1_0(this$0, val$callback){
  this , this$0;
  this.val$callback = val$callback;
  Object_1.call(this);
  $$init_405();
}

defineSeed(489, 1, {}, IConnect_Impl$1_0);
_.onError = function onError_2(request, exception){
  this.val$callback.onError_0(new RestError_0(-1, getMessages().restServiceUnexpectedError(exception.getMessage())));
}
;
_.onResponseReceived = function onResponseReceived(request, response){
  var e, jsonObject, jsonText, jsonValue, result, s;
  s = response.getStatusCode() - 200;
  if (s >= 0 && s < 10) {
    jsonText = response.getText();
    if (204 != response.getStatusCode() && !isEmpty_5(jsonText)) {
      try {
        jsonValue = parseStrict(jsonText);
        result = $decode((new java_lang_String_JsonEncoder_0 , jsonValue));
        this.val$callback.onSuccess(result);
      }
       catch ($e0) {
        $e0 = wrap($e0);
        if (instanceOf($e0, Q$Exception)) {
          e = $e0;
          loggingIsEnabled() && $log_5(($clinit_IConnect_Impl() , __log), ($clinit_Level() , SEVERE), e.getMessage(), e);
        }
         else 
          throw unwrap($e0);
      }
    }
     else {
      this.val$callback.onSuccess(null);
    }
  }
   else {
    loggingIsEnabled() && $log_4(($clinit_IConnect_Impl() , __log), ($clinit_Level() , SEVERE), 'Error received from service: ' + response.getText());
    jsonObject = null;
    try {
      jsonObject = parseStrict(response.getText()).isObject();
    }
     catch ($e1) {
      $e1 = wrap($e1);
      if (instanceOf($e1, Q$Exception)) {
        $e1;
        this.val$callback.onError_0(new RestError_0(response.getStatusCode(), response.getText()));
        return;
      }
       else 
        throw unwrap($e1);
    }
    this.val$callback.onError_0(new RestError_0(response.getStatusCode(), isNotNull($get_2(jsonObject, 'message')) && isNotNull($get_2(jsonObject, 'message').isString())?$stringValue($get_2(jsonObject, 'message').isString()):''));
  }
}
;
function $$init_406(){
}

function IConnect_Impl$2_0(this$0, val$callback){
  this , this$0;
  this.val$callback = val$callback;
  Object_1.call(this);
  $$init_406();
}

defineSeed(490, 1, {}, IConnect_Impl$2_0);
_.onError = function onError_3(request, exception){
  this.val$callback.onError_0(new RestError_0(-1, getMessages().restServiceUnexpectedError(exception.getMessage())));
}
;
_.onResponseReceived = function onResponseReceived_0(request, response){
  var e, jsonObject, jsonText, jsonValue, result, s;
  s = response.getStatusCode() - 200;
  if (s >= 0 && s < 10) {
    jsonText = response.getText();
    if (204 != response.getStatusCode() && !isEmpty_5(jsonText)) {
      try {
        jsonValue = parseStrict(jsonText);
        result = $decode((new java_lang_String_JsonEncoder_0 , jsonValue));
        this.val$callback.onSuccess(result);
      }
       catch ($e0) {
        $e0 = wrap($e0);
        if (instanceOf($e0, Q$Exception)) {
          e = $e0;
          loggingIsEnabled() && $log_5(($clinit_IConnect_Impl() , __log), ($clinit_Level() , SEVERE), e.getMessage(), e);
        }
         else 
          throw unwrap($e0);
      }
    }
     else {
      this.val$callback.onSuccess(null);
    }
  }
   else {
    loggingIsEnabled() && $log_4(($clinit_IConnect_Impl() , __log), ($clinit_Level() , SEVERE), 'Error received from service: ' + response.getText());
    jsonObject = null;
    try {
      jsonObject = parseStrict(response.getText()).isObject();
    }
     catch ($e1) {
      $e1 = wrap($e1);
      if (instanceOf($e1, Q$Exception)) {
        $e1;
        this.val$callback.onError_0(new RestError_0(response.getStatusCode(), response.getText()));
        return;
      }
       else 
        throw unwrap($e1);
    }
    this.val$callback.onError_0(new RestError_0(response.getStatusCode(), isNotNull($get_2(jsonObject, 'message')) && isNotNull($get_2(jsonObject, 'message').isString())?$stringValue($get_2(jsonObject, 'message').isString()):''));
  }
}
;
function $clinit_IUserInfo_Impl(){
  $clinit_IUserInfo_Impl = nullMethod;
  __log_0 = getLogger($getName_2(Leu_cloudopting_ui_ToscaUI_client_remote_IUserInfo_1Impl_2_classLit));
}

function $$init_407(){
}

function IUserInfo_Impl_0(){
  $clinit_IUserInfo_Impl();
  Object_1.call(this);
  $$init_407();
  this.__hostPath = getModuleBaseURL();
  this.__hostPath = $substring_0(this.__hostPath, 0, $lastIndexOf_1(this.__hostPath, getModuleName()));
}

defineSeed(491, 1, makeCastMap([Q$IUserInfo]), IUserInfo_Impl_0);
_.bindCruxView = function bindCruxView_8(view){
  this.__view = view;
}
;
_.getBoundCruxView = function getBoundCruxView_16(){
  return jsNotEquals(this.__view, null)?getView(this.__view):null;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_16(){
  return this.__view;
}
;
_.getLastModifiedBy = function getLastModifiedBy(json, callback){
  var _locale, baseURIPath, builder, e, restURI;
  baseURIPath = 'rest/userInfo/?user={user}';
  baseURIPath = $replace_1(baseURIPath, '{user}', encodePathSegment(jsNotEquals(json, null) && !$equals_2($trim(json), '')?json:''));
  restURI = this.__hostPath + baseURIPath;
  builder = new RequestBuilder_0(($clinit_RequestBuilder() , GET), restURI);
  _locale = getLocale();
  jsNotEquals(_locale, null) && !unsafeEquals(_locale, 'default') && $setHeader(builder, 'Accept-Language', $replace_0(_locale, 95, 45));
  $setCallback(builder, new IUserInfo_Impl$1_0(this, callback));
  try {
    $send(builder);
  }
   catch ($e0) {
    $e0 = wrap($e0);
    if (instanceOf($e0, Q$Exception)) {
      e = $e0;
      loggingIsEnabled() && $log_5(__log_0, ($clinit_Level() , SEVERE), e.getMessage(), e);
      callback.onError_0(new RestError_0(-1, getMessages().restServiceUnexpectedError(e.getMessage())));
    }
     else 
      throw unwrap($e0);
  }
}
;
var __log_0;
function $$init_408(){
}

function IUserInfo_Impl$1_0(this$0, val$callback){
  this , this$0;
  this.val$callback = val$callback;
  Object_1.call(this);
  $$init_408();
}

defineSeed(492, 1, {}, IUserInfo_Impl$1_0);
_.onError = function onError_4(request, exception){
  this.val$callback.onError_0(new RestError_0(-1, getMessages().restServiceUnexpectedError(exception.getMessage())));
}
;
_.onResponseReceived = function onResponseReceived_1(request, response){
  var e, jsonObject, jsonText, jsonValue, result, s;
  s = response.getStatusCode() - 200;
  if (s >= 0 && s < 10) {
    jsonText = response.getText();
    if (204 != response.getStatusCode() && !isEmpty_5(jsonText)) {
      try {
        jsonValue = parseStrict(jsonText);
        result = $decode_0((new java_util_Map_java_lang_String__java_lang_String__JsonEncoder_0 , jsonValue));
        this.val$callback.onSuccess(result);
      }
       catch ($e0) {
        $e0 = wrap($e0);
        if (instanceOf($e0, Q$Exception)) {
          e = $e0;
          loggingIsEnabled() && $log_5(($clinit_IUserInfo_Impl() , __log_0), ($clinit_Level() , SEVERE), e.getMessage(), e);
        }
         else 
          throw unwrap($e0);
      }
    }
     else {
      this.val$callback.onSuccess(null);
    }
  }
   else {
    loggingIsEnabled() && $log_4(($clinit_IUserInfo_Impl() , __log_0), ($clinit_Level() , SEVERE), 'Error received from service: ' + response.getText());
    jsonObject = null;
    try {
      jsonObject = parseStrict(response.getText()).isObject();
    }
     catch ($e1) {
      $e1 = wrap($e1);
      if (instanceOf($e1, Q$Exception)) {
        $e1;
        this.val$callback.onError_0(new RestError_0(response.getStatusCode(), response.getText()));
        return;
      }
       else 
        throw unwrap($e1);
    }
    this.val$callback.onError_0(new RestError_0(response.getStatusCode(), isNotNull($get_2(jsonObject, 'message')) && isNotNull($get_2(jsonObject, 'message').isString())?$stringValue($get_2(jsonObject, 'message').isString()):''));
  }
}
;
function $clinit_ToscaProviderService_Impl(){
  $clinit_ToscaProviderService_Impl = nullMethod;
  getLogger($getName_2(Leu_cloudopting_ui_ToscaUI_client_remote_impl_ToscaProviderService_1Impl_2_classLit));
}

function $$init_409(){
}

function ToscaProviderService_Impl_0(){
  $clinit_ToscaProviderService_Impl();
  Object_1.call(this);
  $$init_409();
  this.__hostPath = getModuleBaseURL();
  this.__hostPath = $substring_0(this.__hostPath, 0, $lastIndexOf_1(this.__hostPath, getModuleName()));
}

defineSeed(493, 1, makeCastMap([Q$ToscaProviderService]), ToscaProviderService_Impl_0);
_.bindCruxView = function bindCruxView_9(view){
  this.__view = view;
}
;
_.getBoundCruxView = function getBoundCruxView_17(){
  return jsNotEquals(this.__view, null)?getView(this.__view):null;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_17(){
  return this.__view;
}
;
function $$init_410(this$static){
  this$static.image = new FlowPanel_0;
  this$static.wrapper = new StyledPanel_0;
  this$static.labelName = new Label_0;
  this$static.labelOther = new Label_0;
  this$static.button = new Button_0;
  this$static.htmlPanel = new HTMLPanel_0(this$static.url_0);
}

function $addStyleNames(this$static){
  $addStyleName(this$static.wrapper, 'storeItem');
  $addStyleName(this$static.htmlPanel, 'cf');
  $addStyleName(this$static.image, 'productImage');
  $removeStyleName(this$static.labelName, 'gwt-Label');
  $addStyleName(this$static.labelName, 'productName');
  $removeStyleName(this$static.labelOther, 'gwt-Label');
  $addStyleName(this$static.labelOther, 'productOther');
  $addStyleName(this$static.button, 'productButton');
}

function StoryboardItem_0(name_0, price, textButton, handler){
  $clinit_UIObject();
  Composite_0.call(this);
  $$init_410(this);
  $initWidget(this, this.wrapper);
  $add_13(this.wrapper, this.htmlPanel);
  $add_4(this.htmlPanel, this.image);
  $add_4(this.htmlPanel, this.labelName);
  $add_4(this.htmlPanel, this.labelOther);
  $add_4(this.htmlPanel, this.button);
  $addStyleNames(this);
  $setText_2(this.labelName, name_0);
  $setText_2(this.labelOther, price);
  $setText_0(this.button, textButton);
  $addClickHandler(this.button, handler);
}

defineSeed(494, 365, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$StoryboardItem]), StoryboardItem_0);
function $$init_411(){
}

function ArithmeticException_0(explanation){
  RuntimeException_1.call(this, explanation);
  $$init_411();
}

defineSeed(495, 85, makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), ArithmeticException_0);
function $$init_412(){
}

function ArrayStoreException_0(){
  RuntimeException_0.call(this);
  $$init_412();
}

defineSeed(496, 85, makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), ArrayStoreException_0);
function $$init_413(){
}

function Error_1(){
  Throwable_0.call(this);
  $$init_413();
}

function Error_2(message, cause){
  Throwable_2.call(this, message, cause);
  $$init_413();
}

defineSeed(498, 87, makeCastMap([Q$Serializable, Q$Error, Q$Throwable]));
function $$init_414(){
}

function AssertionError_0(){
  Error_1.call(this);
  $$init_414();
}

function AssertionError_1(message){
  Error_2.call(this, valueOf_16(message), instanceOf(message, Q$Throwable)?dynamicCast(message, Q$Throwable):null);
  $$init_414();
}

defineSeed(497, 498, makeCastMap([Q$Serializable, Q$Error, Q$Throwable]), AssertionError_0, AssertionError_1);
function $clinit_Boolean(){
  $clinit_Boolean = nullMethod;
  new Boolean_1(false);
  new Boolean_1(true);
  Z_classLit;
}

function $$init_415(){
}

function Boolean_1(value_0){
  Object_1.call(this);
  $$init_415();
  this.value_0 = value_0;
}

function toString_18(x_0){
  $clinit_Boolean();
  return valueOf_17(x_0);
}

defineSeed(499, 1, makeCastMap([Q$Serializable, Q$Boolean, Q$Comparable]), Boolean_1);
_.equals$ = function equals_11(o){
  return instanceOf(o, Q$Boolean) && dynamicCast(o, Q$Boolean).value_0 == this.value_0;
}
;
_.hashCode$ = function hashCode_13(){
  return this.value_0?1231:1237;
}
;
_.toString$ = function toString_17(){
  return this.value_0?'true':'false';
}
;
_.value_0 = false;
function $clinit_Character(){
  $clinit_Character = nullMethod;
  Ljava_lang_Character_2_classLit;
  2;
  36;
  0;
  65535;
  55296;
  57343;
  56320;
  57343;
  55296;
  56319;
  65536;
  0;
  1114111;
  16;
}

function digit(c, radix){
  $clinit_Character();
  if (radix < 2 || radix > 36) {
    return -1;
  }
  if (c >= 48 && c < 48 + min_0(radix, 10)) {
    return c - 48;
  }
  if (c >= 97 && c < radix + 97 - 10) {
    return c - 97 + 10;
  }
  if (c >= 65 && c < radix + 65 - 10) {
    return c - 65 + 10;
  }
  return -1;
}

function getHighSurrogate(codePoint){
  $clinit_Character();
  return narrow_char(55296 + (~~(codePoint - 65536) >> 10 & 1023));
}

function getLowSurrogate(codePoint){
  $clinit_Character();
  return narrow_char(56320 + (codePoint - 65536 & 1023));
}

function toString_19(x_0){
  $clinit_Character();
  return valueOf_13(x_0);
}

function $$init_416(){
}

function $desiredAssertionStatus(){
  return true;
}

function $getName_2(this$static){
  return this$static.typeName;
}

function $isInterface(this$static){
  return (this$static.modifiers & 2) != 0;
}

function $isPrimitive(this$static){
  return (this$static.modifiers & 1) != 0;
}

function Class_0(){
  Object_1.call(this);
  $$init_416();
}

function asString_3(number){
  return typeof number == 'number'?'S' + (number < 0?-number:number):number;
}

function createForArray(packageName, className, seedId, componentType){
  var clazz;
  clazz = new Class_0;
  setName_0(clazz, packageName, className, seedId != 0?-seedId:0);
  clazz.modifiers = 4;
  clazz , Ljava_lang_Object_2_classLit;
  clazz , componentType;
  return clazz;
}

function createForClass(packageName, className, seedId, superclass){
  var clazz;
  clazz = new Class_0;
  setName_0(clazz, packageName, className, seedId);
  clazz , superclass;
  return clazz;
}

function createForEnum(packageName, className, seedId, superclass, enumConstantsFunc, enumValueOfFunc){
  var clazz;
  clazz = new Class_0;
  setName_0(clazz, packageName, className, seedId);
  clazz.modifiers = isNotNull(enumConstantsFunc)?8:0;
  clazz , (clazz , superclass);
  clazz , enumConstantsFunc;
  clazz , enumValueOfFunc;
  return clazz;
}

function createForPrimitive(packageName, className, seedId){
  var clazz;
  clazz = new Class_0;
  setName_0(clazz, packageName, className, seedId);
  clazz.modifiers = 1;
  return clazz;
}

function getSeedFunction(clazz){
  var func = ($clinit_SeedUtil() , seedTable)[clazz.seedId];
  clazz = null;
  return func;
}

function isClassMetadataEnabled(){
  return true;
}

function isInstantiable(seedId){
  return typeof seedId == 'number' && seedId > 0;
}

function isInstantiableOrPrimitive(seedId){
  return seedId != null && seedId != 0;
}

function setClassLiteral(seedId, clazz){
  var proto;
  clazz.seedId = seedId;
  if (seedId == 2) {
    proto = String.prototype;
  }
   else {
    if (seedId > 0) {
      var seed = getSeedFunction(clazz);
      if (seed) {
        proto = seed.prototype;
      }
       else {
        seed = ($clinit_SeedUtil() , seedTable)[seedId] = function(){
        }
        ;
        seed.___clazz$ = clazz;
        return;
      }
    }
     else {
      return;
    }
  }
  proto.___clazz$ = clazz;
}

function setName_0(clazz, packageName, className, seedId){
  if (clazz , isClassMetadataEnabled()) {
    clazz.typeName = packageName + className;
    clazz , className;
  }
   else {
    clazz.typeName = 'Class$' + (isInstantiableOrPrimitive(seedId)?asString_3(seedId):'' + clazz.hashCode$());
    clazz , clazz.typeName;
  }
  isInstantiable(seedId) && setClassLiteral(seedId, clazz);
}

defineSeed(501, 1, {}, Class_0);
_.toString$ = function toString_20(){
  return ($isInterface(this)?'interface ':$isPrimitive(this)?'':'class ') + $getName_2(this);
}
;
_.modifiers = 0;
_.seedId = 0;
function $$init_417(){
}

function ClassCastException_0(){
  RuntimeException_0.call(this);
  $$init_417();
}

defineSeed(502, 85, makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), ClassCastException_0);
function $$init_418(){
}

function Number_1(){
  Object_1.call(this);
  $$init_418();
}

function __isNaN(x_0){
  return isNaN(x_0);
}

function __parseAndValidateInt(s, radix, lowerBound, upperBound){
  var i, isTooLow, length_0, startIndex, toReturn;
  if (jsEquals(s, null)) {
    throw new NumberFormatException_0('null');
  }
  if (radix < 2 || radix > 36) {
    throw new NumberFormatException_0('radix ' + radix + ' out of range');
  }
  length_0 = $length_1(s);
  startIndex = length_0 > 0 && ($charAt(s, 0) == 45 || $charAt(s, 0) == 43)?1:0;
  for (i = startIndex; i < length_0; i++) {
    if (digit($charAt(s, i), radix) == -1) {
      throw forInputString(s);
    }
  }
  toReturn = __parseInt(s, radix);
  isTooLow = toReturn < lowerBound;
  if (__isNaN(toReturn)) {
    throw forInputString(s);
  }
   else if (isTooLow || toReturn > upperBound) {
    throw forInputString(s);
  }
  return toReturn;
}

function __parseAndValidateLong(s, radix){
  var c, firstTime, head, i, length_0, maxDigits, maxLowerCaseDigit, maxNumericDigit, maxUpperCaseDigit, minValue, negative, orig, radixPower, toReturn;
  if (jsEquals(s, null)) {
    throw new NumberFormatException_0('null');
  }
  if (radix < 2 || radix > 36) {
    throw new NumberFormatException_0('radix ' + radix + ' out of range');
  }
  orig = s;
  length_0 = $length_1(s);
  negative = false;
  if (length_0 > 0) {
    c = $charAt(s, 0);
    if (c == 45 || c == 43) {
      s = $substring(s, 1);
      --length_0;
      negative = c == 45;
    }
  }
  if (length_0 == 0) {
    throw forInputString(orig);
  }
  while ($length_1(s) > 0 && $charAt(s, 0) == 48) {
    s = $substring(s, 1);
    --length_0;
  }
  if (length_0 > ($clinit_Number$__ParseLong() , maxLengthForRadix)[radix]) {
    throw forInputString(orig);
  }
  maxNumericDigit = 48 + min_0(radix, 10);
  maxLowerCaseDigit = radix + 97 - 10;
  maxUpperCaseDigit = radix + 65 - 10;
  for (i = 0; i < length_0; i++) {
    c = $charAt(s, i);
    if (c >= 48 && c < maxNumericDigit) {
      continue;
    }
    if (c >= 97 && c < maxLowerCaseDigit) {
      continue;
    }
    if (c >= 65 && c < maxUpperCaseDigit) {
      continue;
    }
    throw forInputString(orig);
  }
  toReturn = P0_longLit;
  maxDigits = ($clinit_Number$__ParseLong() , maxDigitsForRadix)[radix];
  radixPower = fromInt(($clinit_Number$__ParseLong() , maxDigitsRadixPower)[radix]);
  minValue = neg(($clinit_Number$__ParseLong() , maxValueForRadix)[radix]);
  firstTime = true;
  head = length_0 % maxDigits;
  if (head > 0) {
    toReturn = fromInt(-__parseInt($substring_0(s, 0, head), radix));
    s = $substring(s, head);
    length_0 -= head;
    firstTime = false;
  }
  while (length_0 >= maxDigits) {
    head = __parseInt($substring_0(s, 0, maxDigits), radix);
    s = $substring(s, maxDigits);
    length_0 -= maxDigits;
    if (firstTime) {
      firstTime = false;
    }
     else {
      if (lt(toReturn, minValue)) {
        throw new NumberFormatException_0(s);
      }
      toReturn = mul(toReturn, radixPower);
    }
    toReturn = sub_0(toReturn, fromInt(head));
  }
  if (gt(toReturn, P0_longLit)) {
    throw forInputString(orig);
  }
  if (!negative) {
    toReturn = neg(toReturn);
    if (lt(toReturn, P0_longLit)) {
      throw forInputString(orig);
    }
  }
  return toReturn;
}

function __parseInt(s, radix){
  return parseInt(s, radix);
}

defineSeed(504, 1, makeCastMap([Q$Serializable, Q$Number]));
function $clinit_Double(){
  $clinit_Double = nullMethod;
  1.7976931348623157E308;
  4.9E-324;
  2.2250738585072014E-308;
  1023;
  -1022;
  NaN;
  -Infinity;
  Infinity;
  64;
  D_classLit;
  1.3407807929942597E154;
  7.458340731200207E-155;
  1.157920892373162E77;
  8.636168555094445E-78;
  3.4028236692093846E38;
  2.9387358770557188E-39;
  1.8446744073709552E19;
  5.421010862427522E-20;
  4503599627370496;
  2.220446049250313E-16;
  4294967296;
  2.3283064365386963E-10;
  2147483648;
  1048576;
  9.5367431640625E-7;
  65536;
  1.52587890625E-5;
  256;
  0.00390625;
  16;
  0.0625;
  4;
  0.25;
  2;
  0.5;
  2.2250738585072014E-308;
  initValues(_3D_classLit, makeCastMap([Q$Serializable]), -1, [1.3407807929942597E154, 1.157920892373162E77, 3.4028236692093846E38, 1.8446744073709552E19, 4294967296, 65536, 256, 16, 4, 2]);
  initValues(_3D_classLit, makeCastMap([Q$Serializable]), -1, [7.458340731200207E-155, 8.636168555094445E-78, 2.9387358770557188E-39, 5.421010862427522E-20, 2.3283064365386963E-10, 1.52587890625E-5, 0.00390625, 0.0625, 0.25, 0.5]);
}

function $$init_419(){
}

function $hashCode_1(this$static){
  return hashCode_15(this$static.value_0);
}

function Double_0(value_0){
  Number_1.call(this);
  $$init_419();
  this.value_0 = value_0;
}

function hashCode_15(d){
  return round_int(d);
}

function isNaN_0(x_0){
  $clinit_Double();
  return isNaN(x_0);
}

function toString_22(b){
  return valueOf_14(b);
}

function valueOf_11(d){
  $clinit_Double();
  return new Double_0(d);
}

defineSeed(503, 504, makeCastMap([Q$Serializable, Q$Comparable, Q$Double, Q$Number]), Double_0);
_.equals$ = function equals_12(o){
  return instanceOf(o, Q$Double) && dynamicCast(o, Q$Double).value_0 == this.value_0;
}
;
_.hashCode$ = function hashCode_14(){
  return $hashCode_1(this);
}
;
_.toString$ = function toString_21(){
  return toString_22(this.value_0);
}
;
_.value_0 = 0;
function $$init_420(){
}

function IllegalArgumentException_0(){
  RuntimeException_0.call(this);
  $$init_420();
}

function IllegalArgumentException_1(message){
  RuntimeException_1.call(this, message);
  $$init_420();
}

defineSeed(505, 85, makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), IllegalArgumentException_0, IllegalArgumentException_1);
function $$init_421(){
}

function IllegalStateException_0(){
  RuntimeException_0.call(this);
  $$init_421();
}

function IllegalStateException_1(s){
  RuntimeException_1.call(this, s);
  $$init_421();
}

defineSeed(506, 85, makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), IllegalStateException_0, IllegalStateException_1);
function $$init_422(){
}

function IndexOutOfBoundsException_0(){
  RuntimeException_0.call(this);
  $$init_422();
}

function IndexOutOfBoundsException_1(message){
  RuntimeException_1.call(this, message);
  $$init_422();
}

defineSeed(507, 85, makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), IndexOutOfBoundsException_0, IndexOutOfBoundsException_1);
function $clinit_Integer(){
  $clinit_Integer = nullMethod;
  2147483647;
  -2147483648;
  32;
  I_classLit;
}

function $$init_423(){
}

function $intValue(this$static){
  return this$static.value_0;
}

function Integer_0(value_0){
  Number_1.call(this);
  $$init_423();
  this.value_0 = value_0;
}

function hashCode_17(i){
  return i;
}

function numberOfLeadingZeros_0(i){
  $clinit_Integer();
  var m_0, n, y_0;
  if (i < 0) {
    return 0;
  }
   else if (i == 0) {
    return 32;
  }
   else {
    y_0 = -(~~i >> 16);
    m_0 = ~~y_0 >> 16 & 16;
    n = 16 - m_0;
    i = ~~i >> m_0;
    y_0 = i - 256;
    m_0 = ~~y_0 >> 16 & 8;
    n += m_0;
    i <<= m_0;
    y_0 = i - 4096;
    m_0 = ~~y_0 >> 16 & 4;
    n += m_0;
    i <<= m_0;
    y_0 = i - 16384;
    m_0 = ~~y_0 >> 16 & 2;
    n += m_0;
    i <<= m_0;
    y_0 = ~~i >> 14;
    m_0 = y_0 & ~(~~y_0 >> 1);
    return n + 2 - m_0;
  }
}

function numberOfTrailingZeros(i){
  $clinit_Integer();
  var r, rtn;
  if (i == 0) {
    return 32;
  }
   else {
    rtn = 0;
    for (r = 1; (r & i) == 0; r <<= 1) {
      ++rtn;
    }
    return rtn;
  }
}

function parseInt_1(s){
  $clinit_Integer();
  return parseInt_2(s, 10);
}

function parseInt_2(s, radix){
  return __parseAndValidateInt(s, radix, -2147483648, 2147483647);
}

function toHexString(value_0){
  $clinit_Integer();
  return toPowerOfTwoString(value_0, 4);
}

function toPowerOfTwoString(value_0, shift_0){
  var bitMask, buf, bufSize, digits, pos;
  bufSize = narrow_int(32 / shift_0);
  bitMask = (1 << shift_0) - 1;
  buf = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, bufSize, 1);
  digits = ($clinit_Number$__Digits() , digits_0);
  pos = bufSize - 1;
  if (value_0 >= 0) {
    while (value_0 > bitMask) {
      buf[pos--] = digits[value_0 & bitMask];
      value_0 >>= shift_0;
    }
  }
   else {
    while (pos > 0) {
      buf[pos--] = digits[value_0 & bitMask];
      value_0 >>= shift_0;
    }
  }
  buf[pos] = digits[value_0 & bitMask];
  return __valueOf(buf, pos, bufSize);
}

function toString_24(value_0){
  $clinit_Integer();
  return valueOf_15(value_0);
}

function valueOf_12(i){
  $clinit_Integer();
  var rebase, result;
  if (i > -129 && i < 128) {
    rebase = i + 128;
    result = ($clinit_Integer$BoxedValues() , boxedValues_0)[rebase];
    isNull_1(result) && (result = ($clinit_Integer$BoxedValues() , boxedValues_0)[rebase] = new Integer_0(i));
    return result;
  }
  return new Integer_0(i);
}

defineSeed(508, 504, makeCastMap([Q$Serializable, Q$Comparable, Q$Integer, Q$Number]), Integer_0);
_.equals$ = function equals_13(o){
  return instanceOf(o, Q$Integer) && dynamicCast(o, Q$Integer).value_0 == this.value_0;
}
;
_.hashCode$ = function hashCode_16(){
  return hashCode_17(this.value_0);
}
;
_.toString$ = function toString_23(){
  return toString_24(this.value_0);
}
;
_.value_0 = 0;
function $clinit_Integer$BoxedValues(){
  $clinit_Integer$BoxedValues = nullMethod;
  boxedValues_0 = initDim(_3Ljava_lang_Integer_2_classLit, makeCastMap([Q$Serializable]), Q$Integer, 256, 0);
}

var boxedValues_0;
function $clinit_Long(){
  $clinit_Long = nullMethod;
  P7fffffffffffffff_longLit;
  N8000000000000000_longLit;
  64;
  J_classLit;
}

function parseLong(s){
  $clinit_Long();
  return parseLong_0(s, 10);
}

function parseLong_0(s, radix){
  return __parseAndValidateLong(s, radix);
}

function abs_0(x_0){
  return x_0 < 0?-x_0:x_0;
}

function cos_0(x_0){
  return Math.cos(x_0);
}

function max_0(x_0, y_0){
  return x_0 > y_0?x_0:y_0;
}

function min_0(x_0, y_0){
  return x_0 < y_0?x_0:y_0;
}

function pow_0(x_0, exp_0){
  return Math.pow(x_0, exp_0);
}

function round_0(x_0){
  return fromDouble(round0(x_0));
}

function round0(x_0){
  return Math.round(x_0);
}

function $$init_424(){
}

function NullPointerException_0(){
  RuntimeException_0.call(this);
  $$init_424();
}

function NullPointerException_1(message){
  RuntimeException_1.call(this, message);
  $$init_424();
}

defineSeed(512, 85, makeCastMap([Q$Serializable, Q$Exception, Q$NullPointerException, Q$RuntimeException, Q$Throwable]), NullPointerException_0, NullPointerException_1);
function $clinit_Number$__Digits(){
  $clinit_Number$__Digits = nullMethod;
  digits_0 = initValues(_3C_classLit, makeCastMap([Q$Serializable]), -1, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]);
}

var digits_0;
function $clinit_Number$__ParseLong(){
  $clinit_Number$__ParseLong = nullMethod;
  var i;
  maxDigitsForRadix = initValues(_3I_classLit, makeCastMap([Q$Serializable]), -1, [-1, -1, 30, 19, 15, 13, 11, 11, 10, 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5]);
  maxDigitsRadixPower = initDim(_3I_classLit, makeCastMap([Q$Serializable]), -1, 37, 1);
  maxLengthForRadix = initValues(_3I_classLit, makeCastMap([Q$Serializable]), -1, [-1, -1, 63, 40, 32, 28, 25, 23, 21, 20, 19, 19, 18, 18, 17, 17, 16, 16, 16, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 13, 13]);
  maxValueForRadix = initDim(_3J_classLit, makeCastMap([Q$Serializable]), -1, 37, 3);
  for (i = 2; i <= 36; i++) {
    maxDigitsRadixPower[i] = round_int(pow_0(i, maxDigitsForRadix[i]));
    maxValueForRadix[i] = div_0(P7fffffffffffffff_longLit, fromInt(maxDigitsRadixPower[i]));
  }
}

var maxDigitsForRadix, maxDigitsRadixPower, maxLengthForRadix, maxValueForRadix;
function $$init_425(){
}

function NumberFormatException_0(message){
  IllegalArgumentException_1.call(this, message);
  $$init_425();
}

function forInputString(s){
  return new NumberFormatException_0('For input string: "' + s + '"');
}

defineSeed(515, 505, makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), NumberFormatException_0);
function $$init_426(){
}

function $getMethodName(this$static){
  return this$static.methodName;
}

function StackTraceElement_0(className, methodName, fileName, lineNumber){
  Object_1.call(this);
  $$init_426();
  this.className_0 = className;
  this.methodName = methodName;
  this.fileName = fileName;
  this.lineNumber = lineNumber;
}

defineSeed(516, 1, makeCastMap([Q$Serializable, Q$StackTraceElement]), StackTraceElement_0);
_.toString$ = function toString_25(){
  return this.className_0 + '.' + this.methodName + '(' + (jsNotEquals(this.fileName, null)?this.fileName:'Unknown Source') + (this.lineNumber >= 0?':' + this.lineNumber:'') + ')';
}
;
_.lineNumber = 0;
function $clinit_String(){
  $clinit_String = nullMethod;
  new String$1_0;
  'ISO-8859-1';
  'ISO-LATIN-1';
  'UTF-8';
}

function $charAt(this$static, index_0){
  return this$static.charCodeAt(index_0);
}

function $contains_0(this$static, s){
  return $indexOf_3(this$static, s.toString$()) != -1;
}

function $endsWith(this$static, suffix){
  return this$static.lastIndexOf(suffix) != -1 && this$static.lastIndexOf(suffix) == this$static.length - suffix.length;
}

function $equals_2(this$static, other){
  if (!instanceOf(other, Q$String)) {
    return false;
  }
  return __equals(this$static, other);
}

function $equalsIgnoreCase(this$static, other){
  if (other == null)
    return false;
  return this$static == other || this$static.toLowerCase() == other.toLowerCase();
}

function $hashCode_2(this$static){
  return getHashCode_0(this$static);
}

function $indexOf_2(this$static, codePoint){
  return $indexOf_3(this$static, fromCodePoint(codePoint));
}

function $indexOf_3(this$static, str){
  return this$static.indexOf(str);
}

function $indexOf_4(this$static, str, startIndex){
  return this$static.indexOf(str, startIndex);
}

function $isEmpty(this$static){
  return !this$static.length;
}

function $lastIndexOf(this$static, codePoint){
  return $lastIndexOf_1(this$static, fromCodePoint(codePoint));
}

function $lastIndexOf_0(this$static, codePoint, startIndex){
  return $lastIndexOf_2(this$static, fromCodePoint(codePoint), startIndex);
}

function $lastIndexOf_1(this$static, str){
  return this$static.lastIndexOf(str);
}

function $lastIndexOf_2(this$static, str, start_0){
  return this$static.lastIndexOf(str, start_0);
}

function $length_1(this$static){
  return this$static.length;
}

function $replace_0(this$static, from, to){
  var regex;
  if (from < 256) {
    regex = toHexString(from);
    regex = '\\x' + '00'.substring(regex.length) + regex;
  }
   else {
    regex = String.fromCharCode(from);
  }
  return this$static.replace(RegExp(regex, 'g'), String.fromCharCode(to));
}

function $replace_1(this$static, from, to){
  var regex, replacement;
  regex = $replaceAll(from.toString$(), '([/\\\\\\.\\*\\+\\?\\|\\(\\)\\[\\]\\{\\}$^])', '\\\\$1');
  replacement = $replaceAll($replaceAll(to.toString$(), '\\\\', '\\\\\\\\'), '\\$', '\\\\$');
  return $replaceAll(this$static, regex, replacement);
}

function $replaceAll(this$static, regex, replace){
  replace = __translateReplaceString(replace);
  return this$static.replace(RegExp(regex, 'g'), replace);
}

function $split_0(this$static, regex){
  return $split_1(this$static, regex, 0);
}

function $split_1(this$static, regex, maxMatch){
  var compiled = new RegExp(regex, 'g');
  var out = [];
  var count = 0;
  var trail = this$static;
  var lastTrail = null;
  while (true) {
    var matchObj = compiled.exec(trail);
    if (matchObj == null || (trail == '' || count == maxMatch - 1 && maxMatch > 0)) {
      out[count] = trail;
      break;
    }
     else {
      out[count] = trail.substring(0, matchObj.index);
      trail = trail.substring(matchObj.index + matchObj[0].length, trail.length);
      compiled.lastIndex = 0;
      if (lastTrail == trail) {
        out[count] = trail.substring(0, 1);
        trail = trail.substring(1);
      }
      lastTrail = trail;
      count++;
    }
  }
  if (maxMatch == 0 && this$static.length > 0) {
    var lastNonEmpty = out.length;
    while (lastNonEmpty > 0 && out[lastNonEmpty - 1] == '') {
      --lastNonEmpty;
    }
    if (lastNonEmpty < out.length) {
      out.splice(lastNonEmpty, out.length - lastNonEmpty);
    }
  }
  var jr = __createArray(out.length);
  for (var i = 0; i < out.length; ++i) {
    jr[i] = out[i];
  }
  return jr;
}

function $startsWith(this$static, prefix){
  return $indexOf_3(this$static, prefix) == 0;
}

function $substring(this$static, beginIndex){
  return this$static.substr(beginIndex, this$static.length - beginIndex);
}

function $substring_0(this$static, beginIndex, endIndex){
  return this$static.substr(beginIndex, endIndex - beginIndex);
}

function $toLowerCase(this$static){
  return this$static.toLowerCase();
}

function $trim(this$static){
  if (this$static.length == 0 || this$static[0] > ' ' && this$static[this$static.length - 1] > ' ') {
    return this$static;
  }
  var r1 = this$static.replace(/^(\s*)/, '');
  var r2 = r1.replace(/\s*$/, '');
  return r2;
}

function __createArray(numElements){
  return initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, numElements, 0);
}

function __equals(me, other){
  return String(me) == other;
}

function __translateReplaceString(replaceStr){
  var pos;
  pos = 0;
  while (0 <= (pos = $indexOf_4(replaceStr, '\\', pos))) {
    $charAt(replaceStr, pos + 1) == 36?(replaceStr = $substring_0(replaceStr, 0, pos) + '$' + $substring(replaceStr, ++pos)):(replaceStr = $substring_0(replaceStr, 0, pos) + $substring(replaceStr, ++pos));
  }
  return replaceStr;
}

function __valueOf(x_0, start_0, end){
  $clinit_String();
  x_0 = x_0.slice(start_0, end);
  return String.fromCharCode.apply(null, x_0);
}

function fromCharCode(ch_0){
  return String.fromCharCode(ch_0);
}

function fromCodePoint(codePoint){
  var hiSurrogate, loSurrogate;
  if (codePoint >= 65536) {
    hiSurrogate = getHighSurrogate(codePoint);
    loSurrogate = getLowSurrogate(codePoint);
    return fromCharCode(hiSurrogate) + fromCharCode(loSurrogate);
  }
   else {
    return fromCharCode(narrow_char(codePoint));
  }
}

function valueOf_13(x_0){
  $clinit_String();
  return String.fromCharCode(x_0);
}

function valueOf_14(x_0){
  $clinit_String();
  return '' + x_0;
}

function valueOf_15(x_0){
  $clinit_String();
  return '' + x_0;
}

function valueOf_16(x_0){
  $clinit_String();
  return '' + x_0;
}

function valueOf_17(x_0){
  $clinit_String();
  return '' + x_0;
}

_ = String.prototype;
_.castableTypeMap$ = makeCastMap([Q$String, Q$Serializable, Q$CharSequence, Q$Comparable]);
_.equals$ = function equals_14(other){
  return $equals_2(this, other);
}
;
_.hashCode$ = function hashCode_18(){
  return $hashCode_2(this);
}
;
_.toString$ = _.toString;
function $$init_427(){
}

function String$1_0(){
  Object_1.call(this);
  $$init_427();
}

defineSeed(517, 1, {}, String$1_0);
function $clinit_String$HashCache(){
  $clinit_String$HashCache = nullMethod;
  back_0 = createObject();
  front = createObject();
  256;
}

function compute(str){
  var hashCode, i, n, nBatch;
  hashCode = 0;
  n = $length_1(str);
  nBatch = n - 4;
  i = 0;
  while (i < nBatch) {
    hashCode = $charAt(str, i + 3) + 31 * ($charAt(str, i + 2) + 31 * ($charAt(str, i + 1) + 31 * ($charAt(str, i) + 31 * hashCode))) | 0;
    i += 4;
  }
  while (i < n) {
    hashCode = hashCode * 31 + $charAt(str, i++);
  }
  return hashCode | 0;
}

function getHashCode_0(str){
  $clinit_String$HashCache();
  var key = ':' + str;
  var result = front[key];
  if (result != null) {
    return result;
  }
  result = back_0[key];
  if (result == null) {
    result = compute(str);
  }
  increment();
  return front[key] = result;
}

function increment(){
  if (count_0 == 256) {
    back_0 = front;
    front = createObject();
    count_0 = 0;
  }
  ++count_0;
}

var back_0, count_0 = 0, front;
function $$init_428(this$static){
  this$static.impl = new StringBufferImplAppend_0;
  this$static.data_0 = this$static.impl.createData();
}

function $append_0(this$static, x_0){
  this$static.impl.append_0(this$static.data_0, x_0);
  return this$static;
}

function $append_1(this$static, x_0){
  this$static.impl.append_1(this$static.data_0, x_0);
  return this$static;
}

function $toString_1(this$static){
  return this$static.impl.toString_0(this$static.data_0);
}

function StringBuffer_0(){
  Object_1.call(this);
  $$init_428(this);
}

defineSeed(519, 1, makeCastMap([Q$CharSequence]), StringBuffer_0);
_.toString$ = function toString_26(){
  return $toString_1(this);
}
;
function $$init_429(this$static){
  this$static.impl = new StringBufferImplAppend_0;
  this$static.data_0 = this$static.impl.createData();
}

function $append_2(this$static, x_0){
  this$static.impl.appendNonNull(this$static.data_0, valueOf_13(x_0));
  return this$static;
}

function $append_3(this$static, x_0){
  this$static.impl.append_1(this$static.data_0, x_0);
  return this$static;
}

function $toString_2(this$static){
  return this$static.impl.toString_0(this$static.data_0);
}

function StringBuilder_0(){
  Object_1.call(this);
  $$init_429(this);
}

function StringBuilder_1(s){
  Object_1.call(this);
  $$init_429(this);
  $append_3(this, s);
}

defineSeed(520, 1, makeCastMap([Q$CharSequence]), StringBuilder_0, StringBuilder_1);
_.toString$ = function toString_27(){
  return $toString_2(this);
}
;
function $$init_430(){
}

function UnsupportedOperationException_0(){
  RuntimeException_0.call(this);
  $$init_430();
}

function UnsupportedOperationException_1(message){
  RuntimeException_1.call(this, message);
  $$init_430();
}

defineSeed(521, 85, makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), UnsupportedOperationException_0, UnsupportedOperationException_1);
function $$init_431(){
}

function $implFindEntry(this$static, key, remove){
  var entry, iter, k;
  for (iter = this$static.entrySet_0().iterator(); iter.hasNext();) {
    entry = dynamicCast(iter.next_0(), Q$Map$Entry);
    k = entry.getKey();
    if (jsEquals(key, null)?jsEquals(k, null):equals__devirtual$(key, k)) {
      if (remove) {
        entry = new MapEntryImpl_0(entry.getKey(), entry.getValue());
        iter.remove_1();
      }
      return entry;
    }
  }
  return null;
}

function $isEmpty_0(this$static){
  return this$static.size_1() == 0;
}

function AbstractMap_0(){
  Object_1.call(this);
  $$init_431();
}

defineSeed(523, 1, makeCastMap([Q$Map]));
_.clear_0 = function clear_7(){
  this.entrySet_0().clear_0();
}
;
_.containsKey = function containsKey(key){
  return isNotNull($implFindEntry(this, key, false));
}
;
_.equals$ = function equals_15(obj){
  var entry, entry$iterator, otherKey, otherMap, otherValue;
  if (obj === this) {
    return true;
  }
  if (!instanceOf(obj, Q$Map)) {
    return false;
  }
  otherMap = dynamicCast(obj, Q$Map);
  if (this.size_1() != otherMap.size_1()) {
    return false;
  }
  for (entry$iterator = otherMap.entrySet_0().iterator(); entry$iterator.hasNext();) {
    entry = dynamicCast(entry$iterator.next_0(), Q$Map$Entry);
    otherKey = entry.getKey();
    otherValue = entry.getValue();
    if (!this.containsKey(otherKey)) {
      return false;
    }
    if (!equalsWithNullCheck(otherValue, this.get_2(otherKey))) {
      return false;
    }
  }
  return true;
}
;
_.get_2 = function get_11(key){
  var entry;
  entry = $implFindEntry(this, key, false);
  return isNull_1(entry)?null:entry.getValue();
}
;
_.hashCode$ = function hashCode_19(){
  var entry, entry$iterator, hashCode;
  hashCode = 0;
  for (entry$iterator = this.entrySet_0().iterator(); entry$iterator.hasNext();) {
    entry = dynamicCast(entry$iterator.next_0(), Q$Map$Entry);
    hashCode += entry.hashCode$();
    hashCode = ~~hashCode;
  }
  return hashCode;
}
;
_.isEmpty = function isEmpty_1(){
  return $isEmpty_0(this);
}
;
_.keySet_0 = function keySet(){
  var entrySet;
  entrySet = this.entrySet_0();
  return new AbstractMap$1_0(this, entrySet);
}
;
_.put = function put(key, value_0){
  throw new UnsupportedOperationException_1('Put not supported on this map');
}
;
_.remove_3 = function remove_13(key){
  var entry;
  entry = $implFindEntry(this, key, true);
  return isNull_1(entry)?null:entry.getValue();
}
;
_.size_1 = function size_3(){
  return this.entrySet_0().size_1();
}
;
_.toString$ = function toString_28(){
  var comma, entry, iter, s;
  s = '{';
  comma = false;
  for (iter = this.entrySet_0().iterator(); iter.hasNext();) {
    entry = dynamicCast(iter.next_0(), Q$Map$Entry);
    comma?(s += ', '):(comma = true);
    s += valueOf_16(entry.getKey());
    s += '=';
    s += valueOf_16(entry.getValue());
  }
  return s + '}';
}
;
function $$init_432(this$static){
  $clearImpl(this$static);
}

function $addAllHashEntries(this$static, dest){
  var hashCodeMap = this$static.hashCodeMap;
  for (var hashCode in hashCodeMap) {
    var hashCodeInt = parseInt(hashCode, 10);
    if (hashCode == hashCodeInt) {
      var array = hashCodeMap[hashCodeInt];
      for (var i = 0, c = array.length; i < c; ++i) {
        dest.add_0(array[i]);
      }
    }
  }
}

function $addAllStringEntries(this$static, dest){
  var stringMap = this$static.stringMap;
  for (var key in stringMap) {
    if (key.charCodeAt(0) == 58) {
      var entry = new AbstractHashMap$MapEntryString_0(this$static, key.substring(1));
      dest.add_0(entry);
    }
  }
}

function $clear_2(this$static){
  $clearImpl(this$static);
}

function $clearImpl(this$static){
  this$static.hashCodeMap = createArray();
  this$static.stringMap = createObject();
  this$static.nullSlotLive = false;
  this$static.nullSlot = null;
  this$static.size_0 = 0;
}

function $containsKey_0(this$static, key){
  return jsEquals(key, null)?this$static.nullSlotLive:instanceOf(key, Q$String)?$hasStringValue(this$static, dynamicCast(key, Q$String)):$hasHashValue(this$static, key, this$static.getHashCode(key));
}

function $get_6(this$static, key){
  return jsEquals(key, null)?this$static.nullSlot:instanceOf(key, Q$String)?$getStringValue(this$static, dynamicCast(key, Q$String)):$getHashValue(this$static, key, this$static.getHashCode(key));
}

function $getHashValue(this$static, key, hashCode){
  var array = this$static.hashCodeMap[hashCode];
  if (array) {
    for (var i = 0, c = array.length; i < c; ++i) {
      var entry = array[i];
      var entryKey = entry.getKey();
      if (this$static.equalsBridge(key, entryKey)) {
        return entry.getValue();
      }
    }
  }
  return null;
}

function $getStringValue(this$static, key){
  return this$static.stringMap[':' + key];
}

function $hasHashValue(this$static, key, hashCode){
  var array = this$static.hashCodeMap[hashCode];
  if (array) {
    for (var i = 0, c = array.length; i < c; ++i) {
      var entry = array[i];
      var entryKey = entry.getKey();
      if (this$static.equalsBridge(key, entryKey)) {
        return true;
      }
    }
  }
  return false;
}

function $hasStringValue(this$static, key){
  return ':' + key in this$static.stringMap;
}

function $put_0(this$static, key, value_0){
  return jsEquals(key, null)?$putNullSlot(this$static, value_0):instanceOf(key, Q$String)?$putStringValue(this$static, dynamicCast(key, Q$String), value_0):$putHashValue(this$static, key, value_0, this$static.getHashCode(key));
}

function $putHashValue(this$static, key, value_0, hashCode){
  var array = this$static.hashCodeMap[hashCode];
  if (array) {
    for (var i = 0, c = array.length; i < c; ++i) {
      var entry = array[i];
      var entryKey = entry.getKey();
      if (this$static.equalsBridge(key, entryKey)) {
        var previous = entry.getValue();
        entry.setValue_0(value_0);
        return previous;
      }
    }
  }
   else {
    array = this$static.hashCodeMap[hashCode] = [];
  }
  var entry = new MapEntryImpl_0(key, value_0);
  array.push(entry);
  ++this$static.size_0;
  return null;
}

function $putNullSlot(this$static, value_0){
  var result;
  result = this$static.nullSlot;
  this$static.nullSlot = value_0;
  if (!this$static.nullSlotLive) {
    this$static.nullSlotLive = true;
    ++this$static.size_0;
  }
  return result;
}

function $putStringValue(this$static, key, value_0){
  var result, stringMap = this$static.stringMap;
  key = ':' + key;
  if (key in stringMap) {
    result = stringMap[key];
  }
   else {
    ++this$static.size_0;
  }
  stringMap[key] = value_0;
  return result;
}

function $remove_6(this$static, key){
  return jsEquals(key, null)?$removeNullSlot(this$static):instanceOf(key, Q$String)?$removeStringValue(this$static, dynamicCast(key, Q$String)):$removeHashValue(this$static, key, this$static.getHashCode(key));
}

function $removeHashValue(this$static, key, hashCode){
  var array = this$static.hashCodeMap[hashCode];
  if (array) {
    for (var i = 0, c = array.length; i < c; ++i) {
      var entry = array[i];
      var entryKey = entry.getKey();
      if (this$static.equalsBridge(key, entryKey)) {
        if (array.length == 1) {
          delete this$static.hashCodeMap[hashCode];
        }
         else {
          array.splice(i, 1);
        }
        --this$static.size_0;
        return entry.getValue();
      }
    }
  }
  return null;
}

function $removeNullSlot(this$static){
  var result;
  result = this$static.nullSlot;
  this$static.nullSlot = null;
  if (this$static.nullSlotLive) {
    this$static.nullSlotLive = false;
    --this$static.size_0;
  }
  return result;
}

function $removeStringValue(this$static, key){
  var result, stringMap = this$static.stringMap;
  key = ':' + key;
  if (key in stringMap) {
    result = stringMap[key];
    --this$static.size_0;
    delete stringMap[key];
  }
  return result;
}

function $size_2(this$static){
  return this$static.size_0;
}

function AbstractHashMap_0(){
  AbstractMap_0.call(this);
  $$init_432(this);
}

defineSeed(522, 523, makeCastMap([Q$Map]));
_.clear_0 = function clear_8(){
  $clear_2(this);
}
;
_.containsKey = function containsKey_0(key){
  return $containsKey_0(this, key);
}
;
_.entrySet_0 = function entrySet_0(){
  return new AbstractHashMap$EntrySet_0(this);
}
;
_.equalsBridge = function equalsBridge(value1, value2){
  return this.equals(value1, value2);
}
;
_.get_2 = function get_12(key){
  return $get_6(this, key);
}
;
_.put = function put_0(key, value_0){
  return $put_0(this, key, value_0);
}
;
_.remove_3 = function remove_14(key){
  return $remove_6(this, key);
}
;
_.size_1 = function size_4(){
  return $size_2(this);
}
;
_.nullSlotLive = false;
_.size_0 = 0;
function $$init_433(){
}

function $contains_1(this$static, o){
  var entry, key, value_0;
  if (instanceOf(o, Q$Map$Entry)) {
    entry = dynamicCast(o, Q$Map$Entry);
    key = entry.getKey();
    if ($containsKey_0(this$static.this$0, key)) {
      value_0 = $get_6(this$static.this$0, key);
      return this$static.this$0.equals(entry.getValue(), value_0);
    }
  }
  return false;
}

function AbstractHashMap$EntrySet_0(this$0){
  this.this$0 = this$0;
  AbstractSet_0.call(this);
  $$init_433();
}

defineSeed(524, 263, makeCastMap([Q$Set]), AbstractHashMap$EntrySet_0);
_.clear_0 = function clear_9(){
  $clear_2(this.this$0);
}
;
_.contains_0 = function contains_2(o){
  return $contains_1(this, o);
}
;
_.iterator = function iterator_8(){
  return new AbstractHashMap$EntrySetIterator_0(this.this$0);
}
;
_.remove = function remove_15(entry){
  var key;
  if ($contains_1(this, entry)) {
    key = dynamicCast(entry, Q$Map$Entry).getKey();
    $remove_6(this.this$0, key);
    return true;
  }
  return false;
}
;
_.size_1 = function size_5(){
  return $size_2(this.this$0);
}
;
function $$init_434(this$static){
}

function $next_2(this$static){
  return this$static.last = dynamicCast(this$static.iter.next_0(), Q$Map$Entry);
}

function AbstractHashMap$EntrySetIterator_0(this$0){
  var list;
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_434(this);
  list = new ArrayList_0;
  this$0.nullSlotLive && list.add_0(new AbstractHashMap$MapEntryNull_0(this$0));
  $addAllStringEntries(this$0, list);
  $addAllHashEntries(this$0, list);
  this.iter = list.iterator();
}

defineSeed(525, 1, {}, AbstractHashMap$EntrySetIterator_0);
_.hasNext = function hasNext_2(){
  return this.iter.hasNext();
}
;
_.next_0 = function next_3(){
  return $next_2(this);
}
;
_.remove_1 = function remove_16(){
  if (isNull_1(this.last)) {
    throw new IllegalStateException_1('Must call next() before remove().');
  }
   else {
    this.iter.remove_1();
    $remove_6(this.this$0, this.last.getKey());
    this.last = null;
  }
}
;
_.last = null;
function $$init_435(){
}

function AbstractMapEntry_0(){
  Object_1.call(this);
  $$init_435();
}

defineSeed(527, 1, makeCastMap([Q$Map$Entry]));
_.equals$ = function equals_16(other){
  var entry;
  if (instanceOf(other, Q$Map$Entry)) {
    entry = dynamicCast(other, Q$Map$Entry);
    if (equalsWithNullCheck(this.getKey(), entry.getKey()) && equalsWithNullCheck(this.getValue(), entry.getValue())) {
      return true;
    }
  }
  return false;
}
;
_.hashCode$ = function hashCode_20(){
  var keyHash, valueHash;
  keyHash = 0;
  valueHash = 0;
  jsNotEquals(this.getKey(), null) && (keyHash = hashCode__devirtual$(this.getKey()));
  jsNotEquals(this.getValue(), null) && (valueHash = hashCode__devirtual$(this.getValue()));
  return keyHash ^ valueHash;
}
;
_.toString$ = function toString_29(){
  return this.getKey() + '=' + this.getValue();
}
;
function $$init_436(){
}

function AbstractHashMap$MapEntryNull_0(this$0){
  this.this$0 = this$0;
  AbstractMapEntry_0.call(this);
  $$init_436();
}

defineSeed(526, 527, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryNull_0);
_.getKey = function getKey(){
  return null;
}
;
_.getValue = function getValue_1(){
  return this.this$0.nullSlot;
}
;
_.setValue_0 = function setValue_0(object){
  return $putNullSlot(this.this$0, object);
}
;
function $$init_437(){
}

function AbstractHashMap$MapEntryString_0(this$0, key){
  this.this$0 = this$0;
  AbstractMapEntry_0.call(this);
  $$init_437();
  this.key = key;
}

defineSeed(528, 527, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryString_0);
_.getKey = function getKey_0(){
  return this.key;
}
;
_.getValue = function getValue_2(){
  return $getStringValue(this.this$0, this.key);
}
;
_.setValue_0 = function setValue_1(object){
  return $putStringValue(this.this$0, this.key, object);
}
;
function $$init_438(this$static){
}

function $hasNext_0(this$static){
  return this$static.i < this$static.this$0_0.size_1();
}

function AbstractList$IteratorImpl_0(this$0){
  this.this$0_0 = this$0;
  Object_1.call(this);
  $$init_438(this);
}

defineSeed(529, 1, {}, AbstractList$IteratorImpl_0);
_.hasNext = function hasNext_3(){
  return $hasNext_0(this);
}
;
_.next_0 = function next_4(){
  if (!$hasNext_0(this)) {
    throw new NoSuchElementException_0;
  }
  return this.this$0_0.get_1(this.last = this.i++);
}
;
_.remove_1 = function remove_17(){
  if (this.last < 0) {
    throw new IllegalStateException_0;
  }
  this.this$0_0.remove_2(this.last);
  this.i = this.last;
  this.last = -1;
}
;
_.i = 0;
_.last = -1;
function $$init_439(){
}

function $hasPrevious(this$static){
  return this$static.i > 0;
}

function AbstractList$ListIteratorImpl_0(this$0, start_0){
  var size_0;
  this.this$0 = this$0;
  AbstractList$IteratorImpl_0.call(this, this$0);
  $$init_439();
  size_0 = this$0.size_1();
  (start_0 < 0 || start_0 > size_0) && indexOutOfBounds(start_0, size_0);
  this.i = start_0;
}

defineSeed(530, 529, {}, AbstractList$ListIteratorImpl_0);
_.hasPrevious = function hasPrevious(){
  return $hasPrevious(this);
}
;
_.previous = function previous_0(){
  if (!$hasPrevious(this)) {
    throw new NoSuchElementException_0;
  }
  return this.this$0.get_1(this.last = --this.i);
}
;
function $$init_440(){
}

function AbstractMap$1_0(this$0, val$entrySet){
  this.this$0 = this$0;
  this.val$entrySet = val$entrySet;
  AbstractSet_0.call(this);
  $$init_440();
}

defineSeed(531, 263, makeCastMap([Q$Set]), AbstractMap$1_0);
_.contains_0 = function contains_3(key){
  return this.this$0.containsKey(key);
}
;
_.iterator = function iterator_9(){
  var outerIter;
  outerIter = this.val$entrySet.iterator();
  return new AbstractMap$1$1_0(this, outerIter);
}
;
_.size_1 = function size_6(){
  return this.val$entrySet.size_1();
}
;
function $$init_441(){
}

function AbstractMap$1$1_0(this$1, val$outerIter){
  this , this$1;
  this.val$outerIter = val$outerIter;
  Object_1.call(this);
  $$init_441();
}

defineSeed(532, 1, {}, AbstractMap$1$1_0);
_.hasNext = function hasNext_4(){
  return this.val$outerIter.hasNext();
}
;
_.next_0 = function next_5(){
  var entry;
  entry = dynamicCast(this.val$outerIter.next_0(), Q$Map$Entry);
  return entry.getKey();
}
;
_.remove_1 = function remove_18(){
  this.val$outerIter.remove_1();
}
;
function asList(array){
  return new Arrays$ArrayList_0(array);
}

function $$init_442(){
}

function $size_3(this$static){
  return this$static.array.length;
}

function Arrays$ArrayList_0(array){
  AbstractList_0.call(this);
  $$init_442();
  if (jsEquals(array, null)) {
    debugger;
    throw makeAssertionError();
  }
  this.array = array;
}

defineSeed(534, 403, makeCastMap([Q$Serializable, Q$List, Q$RandomAccess]), Arrays$ArrayList_0);
_.contains_0 = function contains_4(o){
  return this.indexOf_0(o) != -1;
}
;
_.get_1 = function get_13(index_0){
  checkIndex(index_0, $size_3(this));
  return this.array[index_0];
}
;
_.size_1 = function size_7(){
  return $size_3(this);
}
;
_.toArray = function toArray_3(){
  return clone(this.array);
}
;
_.toArray_0 = function toArray_4(out){
  var i, size_0;
  size_0 = $size_3(this);
  out.length < size_0 && (out = createFrom(out, size_0));
  for (i = 0; i < size_0; ++i) {
    setCheck(out, i, this.array[i]);
  }
  out.length > size_0 && setCheck(out, size_0, null);
  return out;
}
;
function $clinit_Collections(){
  $clinit_Collections = nullMethod;
  EMPTY_LIST = new Collections$EmptyList_0;
  new Collections$EmptyMap_0;
  EMPTY_SET = new Collections$EmptySet_0;
  new Collections$1_0;
}

function emptyList(){
  $clinit_Collections();
  return EMPTY_LIST;
}

function unmodifiableList(list){
  $clinit_Collections();
  return instanceOf(list, Q$RandomAccess)?new Collections$UnmodifiableRandomAccessList_0(list):new Collections$UnmodifiableList_0(list);
}

function unmodifiableMap(map_0){
  $clinit_Collections();
  return new Collections$UnmodifiableMap_0(map_0);
}

var EMPTY_LIST, EMPTY_SET;
function $$init_443(){
}

function Collections$1_0(){
  Object_1.call(this);
  $$init_443();
}

defineSeed(536, 1, {}, Collections$1_0);
function $$init_444(){
}

function Collections$EmptyList_0(){
  AbstractList_0.call(this);
  $$init_444();
}

defineSeed(537, 403, makeCastMap([Q$Serializable, Q$List, Q$RandomAccess]), Collections$EmptyList_0);
_.contains_0 = function contains_5(object){
  return false;
}
;
_.get_1 = function get_14(location_0){
  throw new IndexOutOfBoundsException_0;
}
;
_.size_1 = function size_8(){
  return 0;
}
;
function $$init_445(){
}

function Collections$EmptyMap_0(){
  AbstractMap_0.call(this);
  $$init_445();
}

defineSeed(538, 523, makeCastMap([Q$Serializable, Q$Map]), Collections$EmptyMap_0);
_.containsKey = function containsKey_1(key){
  return false;
}
;
_.entrySet_0 = function entrySet_1(){
  return $clinit_Collections() , EMPTY_SET;
}
;
_.get_2 = function get_15(key){
  return null;
}
;
_.keySet_0 = function keySet_0(){
  return $clinit_Collections() , EMPTY_SET;
}
;
_.size_1 = function size_9(){
  return 0;
}
;
function $$init_446(){
}

function Collections$EmptySet_0(){
  AbstractSet_0.call(this);
  $$init_446();
}

defineSeed(539, 263, makeCastMap([Q$Serializable, Q$Set]), Collections$EmptySet_0);
_.contains_0 = function contains_6(object){
  return false;
}
;
_.iterator = function iterator_10(){
  return new Collections$EmptySet$1_0(this);
}
;
_.size_1 = function size_10(){
  return 0;
}
;
function $$init_447(){
}

function Collections$EmptySet$1_0(this$1){
  this , this$1;
  Object_1.call(this);
  $$init_447();
}

defineSeed(540, 1, {}, Collections$EmptySet$1_0);
_.hasNext = function hasNext_5(){
  return false;
}
;
_.next_0 = function next_6(){
  throw new NoSuchElementException_0;
}
;
_.remove_1 = function remove_19(){
  throw new UnsupportedOperationException_0;
}
;
function $$init_448(){
}

function $toArray(this$static){
  return this$static.coll.toArray();
}

function $toArray_0(this$static, a){
  return this$static.coll.toArray_0(a);
}

function Collections$UnmodifiableCollection_0(coll){
  Object_1.call(this);
  $$init_448();
  this.coll = coll;
}

defineSeed(541, 1, {});
_.add_0 = function add_13(o){
  throw new UnsupportedOperationException_0;
}
;
_.addAll = function addAll_1(c){
  throw new UnsupportedOperationException_0;
}
;
_.clear_0 = function clear_10(){
  throw new UnsupportedOperationException_0;
}
;
_.contains_0 = function contains_7(o){
  return this.coll.contains_0(o);
}
;
_.iterator = function iterator_11(){
  return new Collections$UnmodifiableCollectionIterator_0(this.coll.iterator());
}
;
_.remove = function remove_20(o){
  throw new UnsupportedOperationException_0;
}
;
_.size_1 = function size_11(){
  return this.coll.size_1();
}
;
_.toArray = function toArray_5(){
  return $toArray(this);
}
;
_.toArray_0 = function toArray_6(a){
  return $toArray_0(this, a);
}
;
_.toString$ = function toString_30(){
  return this.coll.toString$();
}
;
function $$init_449(){
}

function Collections$UnmodifiableCollectionIterator_0(it){
  Object_1.call(this);
  $$init_449();
  this.it = it;
}

defineSeed(542, 1, {}, Collections$UnmodifiableCollectionIterator_0);
_.hasNext = function hasNext_6(){
  return this.it.hasNext();
}
;
_.next_0 = function next_7(){
  return this.it.next_0();
}
;
_.remove_1 = function remove_21(){
  throw new UnsupportedOperationException_0;
}
;
function $$init_450(){
}

function $listIterator_0(this$static, from){
  return new Collections$UnmodifiableListIterator_0(this$static.list.listIterator_0(from));
}

function Collections$UnmodifiableList_0(list){
  Collections$UnmodifiableCollection_0.call(this, list);
  $$init_450();
  this.list = list;
}

defineSeed(543, 541, makeCastMap([Q$List]), Collections$UnmodifiableList_0);
_.equals$ = function equals_17(o){
  return this.list.equals$(o);
}
;
_.get_1 = function get_16(index_0){
  return this.list.get_1(index_0);
}
;
_.hashCode$ = function hashCode_21(){
  return this.list.hashCode$();
}
;
_.isEmpty = function isEmpty_2(){
  return this.list.isEmpty();
}
;
_.listIterator = function listIterator_1(){
  return $listIterator_0(this, 0);
}
;
_.listIterator_0 = function listIterator_2(from){
  return $listIterator_0(this, from);
}
;
function $$init_451(){
}

function Collections$UnmodifiableListIterator_0(lit){
  Collections$UnmodifiableCollectionIterator_0.call(this, lit);
  $$init_451();
  this.lit = lit;
}

defineSeed(544, 542, {}, Collections$UnmodifiableListIterator_0);
_.hasPrevious = function hasPrevious_0(){
  return this.lit.hasPrevious();
}
;
_.previous = function previous_1(){
  return this.lit.previous();
}
;
function $$init_452(){
}

function Collections$UnmodifiableMap_0(map_0){
  Object_1.call(this);
  $$init_452();
  this.map_0 = map_0;
}

defineSeed(545, 1, makeCastMap([Q$Map]), Collections$UnmodifiableMap_0);
_.clear_0 = function clear_11(){
  throw new UnsupportedOperationException_0;
}
;
_.containsKey = function containsKey_2(key){
  return this.map_0.containsKey(key);
}
;
_.entrySet_0 = function entrySet_2(){
  isNull_1(this.entrySet) && (this.entrySet = new Collections$UnmodifiableMap$UnmodifiableEntrySet_0(this.map_0.entrySet_0()));
  return this.entrySet;
}
;
_.equals$ = function equals_18(o){
  return this.map_0.equals$(o);
}
;
_.get_2 = function get_17(key){
  return this.map_0.get_2(key);
}
;
_.hashCode$ = function hashCode_22(){
  return this.map_0.hashCode$();
}
;
_.isEmpty = function isEmpty_3(){
  return this.map_0.isEmpty();
}
;
_.keySet_0 = function keySet_1(){
  isNull_1(this.keySet) && (this.keySet = new Collections$UnmodifiableSet_0(this.map_0.keySet_0()));
  return this.keySet;
}
;
_.put = function put_1(key, value_0){
  throw new UnsupportedOperationException_0;
}
;
_.remove_3 = function remove_22(key){
  throw new UnsupportedOperationException_0;
}
;
_.size_1 = function size_12(){
  return this.map_0.size_1();
}
;
_.toString$ = function toString_31(){
  return this.map_0.toString$();
}
;
function $$init_453(){
}

function Collections$UnmodifiableSet_0(set_0){
  Collections$UnmodifiableCollection_0.call(this, set_0);
  $$init_453();
}

defineSeed(547, 541, makeCastMap([Q$Set]), Collections$UnmodifiableSet_0);
_.equals$ = function equals_19(o){
  return this.coll.equals$(o);
}
;
_.hashCode$ = function hashCode_23(){
  return this.coll.hashCode$();
}
;
function $$init_454(){
}

function $wrap(array, size_0){
  var i;
  for (i = 0; i < size_0; ++i) {
    setCheck(array, i, new Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_0(dynamicCast(array[i], Q$Map$Entry)));
  }
}

function Collections$UnmodifiableMap$UnmodifiableEntrySet_0(s){
  Collections$UnmodifiableSet_0.call(this, s);
  $$init_454();
}

defineSeed(546, 547, makeCastMap([Q$Set]), Collections$UnmodifiableMap$UnmodifiableEntrySet_0);
_.contains_0 = function contains_8(o){
  return this.coll.contains_0(o);
}
;
_.iterator = function iterator_12(){
  var it;
  it = this.coll.iterator();
  return new Collections$UnmodifiableMap$UnmodifiableEntrySet$1_0(this, it);
}
;
_.toArray = function toArray_7(){
  var array;
  array = $toArray(this);
  $wrap(array, array.length);
  return array;
}
;
_.toArray_0 = function toArray_8(a){
  var result;
  result = $toArray_0(this, a);
  $wrap(result, this.coll.size_1());
  return result;
}
;
function $$init_455(){
}

function $next_3(this$static){
  return new Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_0(dynamicCast(this$static.val$it.next_0(), Q$Map$Entry));
}

function Collections$UnmodifiableMap$UnmodifiableEntrySet$1_0(this$2, val$it){
  this , this$2;
  this.val$it = val$it;
  Object_1.call(this);
  $$init_455();
}

defineSeed(548, 1, {}, Collections$UnmodifiableMap$UnmodifiableEntrySet$1_0);
_.hasNext = function hasNext_7(){
  return this.val$it.hasNext();
}
;
_.next_0 = function next_8(){
  return $next_3(this);
}
;
_.remove_1 = function remove_23(){
  throw new UnsupportedOperationException_0;
}
;
function $$init_456(){
}

function Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_0(entry){
  Object_1.call(this);
  $$init_456();
  this.entry = entry;
}

defineSeed(549, 1, makeCastMap([Q$Map$Entry]), Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_0);
_.equals$ = function equals_20(o){
  return this.entry.equals$(o);
}
;
_.getKey = function getKey_1(){
  return this.entry.getKey();
}
;
_.getValue = function getValue_3(){
  return this.entry.getValue();
}
;
_.hashCode$ = function hashCode_24(){
  return this.entry.hashCode$();
}
;
_.setValue_0 = function setValue_2(value_0){
  throw new UnsupportedOperationException_0;
}
;
_.toString$ = function toString_32(){
  return this.entry.toString$();
}
;
function $$init_457(){
}

function Collections$UnmodifiableRandomAccessList_0(list){
  Collections$UnmodifiableList_0.call(this, list);
  $$init_457();
}

defineSeed(550, 543, makeCastMap([Q$List, Q$RandomAccess]), Collections$UnmodifiableRandomAccessList_0);
function $$init_458(){
}

function $getTime_0(this$static){
  return fromDouble($getTime(this$static.jsdate));
}

function $toString_3(this$static){
  var hourOffset, minuteOffset, offset;
  offset = -$getTimezoneOffset(this$static.jsdate);
  hourOffset = (offset >= 0?'+':'') + narrow_int(offset / 60);
  minuteOffset = padTwo(abs_0(offset) % 60);
  return ($clinit_Date$StringData() , DAYS)[$getDay(this$static.jsdate)] + ' ' + ($clinit_Date$StringData() , MONTHS)[$getMonth(this$static.jsdate)] + ' ' + padTwo($getDate(this$static.jsdate)) + ' ' + padTwo($getHours(this$static.jsdate)) + ':' + padTwo($getMinutes(this$static.jsdate)) + ':' + padTwo($getSeconds(this$static.jsdate)) + ' GMT' + hourOffset + minuteOffset + ' ' + $getFullYear(this$static.jsdate);
}

function Date_1(){
  Object_1.call(this);
  $$init_458();
  this.jsdate = create();
}

function Date_2(date){
  Object_1.call(this);
  $$init_458();
  this.jsdate = create_0(toDouble(date));
}

function padTwo(number){
  return number < 10?'0' + number:valueOf_15(number);
}

defineSeed(551, 1, makeCastMap([Q$Serializable, Q$Comparable, Q$Date]), Date_1, Date_2);
_.equals$ = function equals_21(obj){
  return instanceOf(obj, Q$Date) && eq($getTime_0(this), $getTime_0(dynamicCast(obj, Q$Date)));
}
;
_.hashCode$ = function hashCode_25(){
  var time;
  time = $getTime_0(this);
  return toInt(xor(time, shru(time, 32)));
}
;
_.toString$ = function toString_33(){
  return $toString_3(this);
}
;
function $clinit_Date$StringData(){
  $clinit_Date$StringData = nullMethod;
  DAYS = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']);
  MONTHS = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);
}

var DAYS, MONTHS;
function $$init_459(){
}

function HashMap_0(){
  AbstractHashMap_0.call(this);
  $$init_459();
}

defineSeed(553, 522, makeCastMap([Q$Serializable, Q$Map]), HashMap_0);
_.equals = function equals_22(value1, value2){
  return equalsWithNullCheck(value1, value2);
}
;
_.getHashCode = function getHashCode_1(key){
  return ~~hashCode__devirtual$(key);
}
;
function $$init_460(){
}

function HashSet_0(){
  AbstractSet_0.call(this);
  $$init_460();
  this.map_0 = new HashMap_0;
}

defineSeed(554, 263, makeCastMap([Q$Serializable, Q$Set]), HashSet_0);
_.add_0 = function add_14(o){
  var old;
  old = $put_0(this.map_0, o, this);
  return jsEquals(old, null);
}
;
_.clear_0 = function clear_12(){
  $clear_2(this.map_0);
}
;
_.contains_0 = function contains_9(o){
  return $containsKey_0(this.map_0, o);
}
;
_.isEmpty = function isEmpty_4(){
  return $isEmpty_0(this.map_0);
}
;
_.iterator = function iterator_13(){
  return this.map_0.keySet_0().iterator();
}
;
_.remove = function remove_24(o){
  return jsNotEquals($remove_6(this.map_0, o), null);
}
;
_.size_1 = function size_13(){
  return $size_2(this.map_0);
}
;
_.toString$ = function toString_34(){
  return this.map_0.keySet_0().toString$();
}
;
function $$init_461(){
}

function $getValue_2(this$static){
  return this$static.value_0;
}

function MapEntryImpl_0(key, value_0){
  AbstractMapEntry_0.call(this);
  $$init_461();
  this.key = key;
  this.value_0 = value_0;
}

defineSeed(555, 527, makeCastMap([Q$Map$Entry]), MapEntryImpl_0);
_.getKey = function getKey_2(){
  return this.key;
}
;
_.getValue = function getValue_4(){
  return $getValue_2(this);
}
;
_.setValue_0 = function setValue_3(value_0){
  var old;
  old = $getValue_2(this);
  this.value_0 = value_0;
  return old;
}
;
function $$init_462(){
}

function NoSuchElementException_0(){
  RuntimeException_0.call(this);
  $$init_462();
}

function NoSuchElementException_1(s){
  RuntimeException_1.call(this, s);
  $$init_462();
}

defineSeed(556, 85, makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]), NoSuchElementException_0, NoSuchElementException_1);
function equalsWithNullCheck(a, b){
  return maskUndefined(a) === maskUndefined(b) || jsNotEquals(a, null) && equals__devirtual$(a, b);
}

function $clinit_Level(){
  $clinit_Level = nullMethod;
  new LevelImplRegular_0;
  ALL = new Level$LevelAll_0;
  CONFIG = new Level$LevelConfig_0;
  FINE = new Level$LevelFine_0;
  FINER = new Level$LevelFiner_0;
  FINEST = new Level$LevelFinest_0;
  INFO = new Level$LevelInfo_0;
  OFF = new Level$LevelOff_0;
  SEVERE = new Level$LevelSevere_0;
  WARNING = new Level$LevelWarning_0;
}

function $$init_463(){
}

function Level_0(){
  Object_1.call(this);
  $$init_463();
}

defineSeed(558, 1, makeCastMap([Q$Serializable]));
_.getName = function getName_0(){
  return 'DUMMY';
}
;
_.intValue = function intValue(){
  return -1;
}
;
_.toString$ = function toString_35(){
  return this.getName();
}
;
var ALL, CONFIG, FINE, FINER, FINEST, INFO, OFF, SEVERE, WARNING;
function $$init_464(){
}

function Level$LevelAll_0(){
  Level_0.call(this);
  $$init_464();
}

defineSeed(559, 558, makeCastMap([Q$Serializable]), Level$LevelAll_0);
_.getName = function getName_1(){
  return 'ALL';
}
;
_.intValue = function intValue_0(){
  return -2147483648;
}
;
function $$init_465(){
}

function Level$LevelConfig_0(){
  Level_0.call(this);
  $$init_465();
}

defineSeed(560, 558, makeCastMap([Q$Serializable]), Level$LevelConfig_0);
_.getName = function getName_2(){
  return 'CONFIG';
}
;
_.intValue = function intValue_1(){
  return 700;
}
;
function $$init_466(){
}

function Level$LevelFine_0(){
  Level_0.call(this);
  $$init_466();
}

defineSeed(561, 558, makeCastMap([Q$Serializable]), Level$LevelFine_0);
_.getName = function getName_3(){
  return 'FINE';
}
;
_.intValue = function intValue_2(){
  return 500;
}
;
function $$init_467(){
}

function Level$LevelFiner_0(){
  Level_0.call(this);
  $$init_467();
}

defineSeed(562, 558, makeCastMap([Q$Serializable]), Level$LevelFiner_0);
_.getName = function getName_4(){
  return 'FINER';
}
;
_.intValue = function intValue_3(){
  return 400;
}
;
function $$init_468(){
}

function Level$LevelFinest_0(){
  Level_0.call(this);
  $$init_468();
}

defineSeed(563, 558, makeCastMap([Q$Serializable]), Level$LevelFinest_0);
_.getName = function getName_5(){
  return 'FINEST';
}
;
_.intValue = function intValue_4(){
  return 300;
}
;
function $$init_469(){
}

function Level$LevelInfo_0(){
  Level_0.call(this);
  $$init_469();
}

defineSeed(564, 558, makeCastMap([Q$Serializable]), Level$LevelInfo_0);
_.getName = function getName_6(){
  return 'INFO';
}
;
_.intValue = function intValue_5(){
  return 800;
}
;
function $$init_470(){
}

function Level$LevelOff_0(){
  Level_0.call(this);
  $$init_470();
}

defineSeed(565, 558, makeCastMap([Q$Serializable]), Level$LevelOff_0);
_.getName = function getName_7(){
  return 'OFF';
}
;
_.intValue = function intValue_6(){
  return 2147483647;
}
;
function $$init_471(){
}

function Level$LevelSevere_0(){
  Level_0.call(this);
  $$init_471();
}

defineSeed(566, 558, makeCastMap([Q$Serializable]), Level$LevelSevere_0);
_.getName = function getName_8(){
  return 'SEVERE';
}
;
_.intValue = function intValue_7(){
  return 1000;
}
;
function $$init_472(){
}

function Level$LevelWarning_0(){
  Level_0.call(this);
  $$init_472();
}

defineSeed(567, 558, makeCastMap([Q$Serializable]), Level$LevelWarning_0);
_.getName = function getName_9(){
  return 'WARNING';
}
;
_.intValue = function intValue_8(){
  return 900;
}
;
function $$init_473(){
}

function $addLogger(this$static, logger){
  if (isNotNull($getLogger(this$static, $getName_1(logger)))) {
    return false;
  }
  $addLoggerWithoutDuplicationChecking(this$static, logger);
  return true;
}

function $addLoggerWithoutDuplicationChecking(this$static, logger){
  var name_0, parent_0, parentName;
  name_0 = $getName_1(logger);
  parentName = $substring_0(name_0, 0, max_0(0, $lastIndexOf(name_0, 46)));
  parent_0 = $getOrAddLogger(this$static, parentName);
  $put_0(this$static.loggerList, $getName_1(logger), logger);
  $setParent(logger, parent_0);
}

function $getLogger(this$static, name_0){
  return dynamicCast($get_6(this$static.loggerList, name_0), Q$Logger);
}

function $getOrAddLogger(this$static, name_0){
  var logger, newLogger;
  logger = $getLogger(this$static, name_0);
  if (isNull_1(logger)) {
    newLogger = new Logger_0(name_0);
    $addLoggerWithoutDuplicationChecking(this$static, newLogger);
    return newLogger;
  }
  return logger;
}

function LogManager_0(){
  Object_1.call(this);
  $$init_473();
  this.loggerList = new HashMap_0;
  this.rootLogger = new LogManager$RootLogger_0(this);
  $put_0(this.loggerList, '', this.rootLogger);
}

function getLogManager(){
  isNull_1(singleton_0) && (singleton_0 = new LogManager_0);
  return singleton_0;
}

defineSeed(568, 1, {}, LogManager_0);
var singleton_0;
function $$init_474(){
}

function LogManager$RootLogger_0(this$0){
  $clinit_Logger();
  this , this$0;
  Logger_0.call(this, '');
  $$init_474();
  $setLevel_0(this, ($clinit_Level() , ALL));
}

defineSeed(569, 302, makeCastMap([Q$Logger]), LogManager$RootLogger_0);
function $$init_475(this$static){
}

function $getLevel_1(this$static){
  return this$static.level;
}

function $getLoggerName(this$static){
  return this$static.loggerName;
}

function $getMessage_1(this$static){
  return this$static.msg;
}

function $getMillis(this$static){
  return this$static.millis;
}

function $getThrown_0(this$static){
  return this$static.thrown;
}

function $setLoggerName(this$static, newName){
  this$static.loggerName = newName;
}

function $setThrown(this$static, newThrown){
  this$static.thrown = fromThrowable(newThrown);
}

function LogRecord_0(level, msg){
  Object_1.call(this);
  $$init_475(this);
  this.level = level;
  this.msg = msg;
  this.millis = $getTime_0(new Date_1);
}

defineSeed(570, 1, makeCastMap([Q$Serializable]), LogRecord_0);
_.loggerName = '';
_.millis = P0_longLit;
_.thrown = null;
function $$init_476(){
}

function ClientMessages__0(){
  Object_1.call(this);
  $$init_476();
}

defineSeed(571, 1, {}, ClientMessages__0);
_.cruxAlreadyInitializedError = function cruxAlreadyInitializedError(){
  return 'Crux Engine is already loaded.';
}
;
_.resourceCsssInjected = function resourceCsssInjected(arg0){
  return 'Css Resource [' + arg0 + '] injected.';
}
;
_.resourcesInitialized = function resourcesInitialized(arg0){
  return 'Resources [' + arg0 + '] initialized.';
}
;
_.restServiceUnexpectedError = function restServiceUnexpectedError(arg0){
  return 'Unexpected error calling rest service. Error [' + arg0 + '].';
}
;
_.styleErrorInvalidProperty = function styleErrorInvalidProperty(arg0, arg1){
  return 'Invalid value for style property: [' + arg0 + ']:[' + arg1 + ']';
}
;
_.viewContainerCreatingView = function viewContainerCreatingView(arg0){
  return 'Creating the view for screen ' + arg0 + '.';
}
;
_.viewContainerErrorCreatingView = function viewContainerErrorCreatingView(arg0){
  return 'Error creating view [' + arg0 + ']. ';
}
;
_.viewContainerViewCreated = function viewContainerViewCreated(arg0){
  return 'View ' + arg0 + ' created.';
}
;
_.viewContainerViewRendered = function viewContainerViewRendered(arg0){
  return 'View ' + arg0 + ' rendered.';
}
;
_.viewNotInitialized = function viewNotInitialized(arg0, arg1){
  return 'Can not retrieve the widget [' + arg1 + '] from view [' + arg0 + ']. View is not loaded. Load this view into a ViewContainer first.';
}
;
function $clinit_Crux(){
  $clinit_Crux = nullMethod;
  logger_1 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_Crux_2_classLit));
}

function $$init_477(){
}

function $onModuleLoad_3(){
  initializeEngine();
}

function Crux_0(){
  $clinit_Crux();
  Object_1.call(this);
  $$init_477();
}

function getErrorHandler(){
  $clinit_Crux();
  return errorHandler;
}

function getMessages(){
  $clinit_Crux();
  return messages;
}

function initializeEngine(){
  var e;
  try {
    if (initialized) {
      getErrorHandler().handleError_1(new IllegalStateException_1(messages.cruxAlreadyInitializedError()));
    }
     else {
      loggingIsEnabled() && $log_4(logger_1, ($clinit_Level() , INFO), 'Initializing Crux engine...');
      messages = new ClientMessages__0;
      new CruxClientConfig_Impl_0;
      errorHandler = new ErrorHandlerImpl_0;
      new ErrorHandlerImpl_0;
      setUncaughtExceptionHandler(new Crux$1_0);
      $getScreen(getInstance_2());
      initialized = true;
      loggingIsEnabled() && $log_4(logger_1, ($clinit_Level() , INFO), 'Crux engine loaded.');
    }
  }
   catch ($e0) {
    $e0 = wrap($e0);
    if (instanceOf($e0, Q$Throwable)) {
      e = $e0;
      isNotNull(errorHandler) && getErrorHandler().handleError_1(e);
    }
     else 
      throw unwrap($e0);
  }
  stopLoadingProgressBar();
}

function stopLoadingProgressBar(){
  var delay, loadElement, parent_0, transactionDelay;
  loadElement = getElementById('cruxSplashScreen');
  if (isNotNull(loadElement)) {
    transactionDelay = $getAttribute(loadElement, 'transactionDelay');
    delay = 1;
    isEmpty_5(transactionDelay) || (delay = parseInt_1(transactionDelay));
    parent_0 = $getParentElement(loadElement);
    isNotNull(parent_0) && $schedule(new Crux$2_0(parent_0, loadElement), delay);
  }
}

defineSeed(572, 1, {}, Crux_0);
var errorHandler, initialized = false, logger_1, messages;
function $$init_478(){
}

function Crux$1_0(){
  Object_1.call(this);
  $$init_478();
}

defineSeed(573, 1, {}, Crux$1_0);
_.onUncaughtException = function onUncaughtException_0(e){
  ($clinit_Crux() , errorHandler).handleError_1(e);
}
;
function $$init_479(){
}

function Crux$2_0(val$parent, val$loadElement){
  this.val$parent = val$parent;
  this.val$loadElement = val$loadElement;
  Timer_0.call(this);
  $$init_479();
}

defineSeed(574, 10, {}, Crux$2_0);
_.run = function run_1(){
  $removeChild(this.val$parent, this.val$loadElement);
}
;
function $$init_480(){
}

function $decode(json){
  var o;
  o = null;
  isNotNull(json) && isNull_1(json.isNull()) && (o = $stringValue(json.isString()));
  return o;
}

function java_lang_String_JsonEncoder_0(){
  Object_1.call(this);
  $$init_480();
}

defineSeed(575, 1, {}, java_lang_String_JsonEncoder_0);
function $$init_481(){
}

function $decode_0(json){
  var jsonMap, key, key$iterator, o1;
  o1 = null;
  if (isNotNull(json) && isNull_1(json.isNull())) {
    jsonMap = json.isObject();
    o1 = new HashMap_0;
    new java_lang_String_JsonEncoder_0;
    for (key$iterator = $keySet(jsonMap).iterator(); key$iterator.hasNext();) {
      key = dynamicCast(key$iterator.next_0(), Q$String);
      o1.put(key, $decode($get_2(jsonMap, key)));
    }
  }
  return o1;
}

function java_util_Map_java_lang_String__java_lang_String__JsonEncoder_0(){
  Object_1.call(this);
  $$init_481();
}

defineSeed(576, 1, {}, java_util_Map_java_lang_String__java_lang_String__JsonEncoder_0);
function $add_8(this$static, elem){
  $jsniAdd(this$static, elem);
}

function $get_7(this$static, index_0){
  if (0 >= $size_4(this$static)) {
    debugger;
    throw makeAssertionError_Object('Attempt to access an element in an empty array');
  }
  if (!(index_0 >= 0 && index_0 < $size_4(this$static))) {
    debugger;
    throw makeAssertionError_Object('Index ' + index_0 + ' was not in the acceptable range [' + 0 + ', ' + $size_4(this$static) + ')');
  }
  return $jsniGet(this$static, index_0);
}

function $indexOf_5(this$static, elem){
  if (jsEquals(elem, null)) {
    return -1;
  }
  return $jsniIndexOf(this$static, elem);
}

function $jsniAdd(this$static, elem){
  this$static.push(elem);
}

function $jsniGet(this$static, index_0){
  return this$static[index_0];
}

function $jsniIndexOf(this$static, elem){
  for (var i = 0, len = this$static.length; i < len; i++) {
    if (this$static[i] == elem) {
      return i;
    }
  }
  return -1;
}

function $jsniRemove(this$static, index_0){
  this$static.splice(index_0, 1);
}

function $remove_7(this$static, index_0){
  if (0 >= $size_4(this$static)) {
    debugger;
    throw makeAssertionError_Object('Attempt to access an element in an empty array');
  }
  if (!(index_0 >= 0 && index_0 < $size_4(this$static))) {
    debugger;
    throw makeAssertionError_Object('Index ' + index_0 + ' was not in the acceptable range [' + 0 + ', ' + $size_4(this$static) + ')');
  }
  $jsniRemove(this$static, index_0);
}

function $size_4(this$static){
  return this$static?this$static.length:0;
}

function createArray_0(){
  return Array();
}

function createMap(){
  return Object();
}

function $$init_482(){
}

function $add_9(this$static, value_0){
  $add_8(this$static.jsArray, value_0);
}

function $get_8(this$static, index_0){
  return $get_7(this$static.jsArray, index_0);
}

function $indexOf_6(this$static, value_0){
  return $indexOf_5(this$static.jsArray, value_0);
}

function $remove_8(this$static, index_0){
  var ret;
  {
    ret = $get_7(this$static.jsArray, index_0);
    $remove_7(this$static.jsArray, index_0);
    return ret;
  }
}

function $size_5(this$static){
  return $size_4(this$static.jsArray);
}

function FastList_0(){
  Object_1.call(this);
  $$init_482();
  this.jsArray = createArray_0();
}

defineSeed(579, 1, {}, FastList_0);
function $$init_483(){
}

function $containsKey_1(this$static, key){
  return $containsKey_2(this$static.jsMap, key);
}

function $get_9(this$static, key){
  return $get_10(this$static.jsMap, key);
}

function $isEmpty_1(this$static){
  return $isEmpty_2(this$static.jsMap);
}

function $put_1(this$static, key, value_0){
  $put_2(this$static.jsMap, key, value_0);
}

function $remove_9(this$static, key){
  var ret;
  {
    ret = $get_10(this$static.jsMap, key);
    jsNotEquals(ret, null) && $remove_10(this$static.jsMap, key);
    return ret;
  }
}

function FastMap_0(){
  Object_1.call(this);
  $$init_483();
  this.jsMap = createMap();
}

defineSeed(580, 1, makeCastMap([Q$FastMap]), FastMap_0);
function $containsKey_2(this$static, key){
  return jsNotEquals(key, null) && $jsniContainsKey(this$static, key);
}

function $get_10(this$static, key){
  return jsEquals(key, null)?null:$jsniGet_0(this$static, key);
}

function $isEmpty_2(this$static){
  for (var k in this$static) {
    return false;
  }
  return true;
}

function $jsniContainsKey(this$static, index_0){
  return this$static[index_0] !== undefined;
}

function $jsniGet_0(this$static, index_0){
  return this$static[index_0];
}

function $jsniKeys(this$static){
  var result = Array();
  for (var k in this$static) {
    result.push(k);
  }
  return result;
}

function $jsniPut(this$static, index_0, value_0){
  this$static[index_0] = value_0;
}

function $jsniRemove_0(this$static, index_0){
  delete this$static[index_0];
}

function $keys(this$static){
  return $jsniKeys(this$static);
}

function $put_2(this$static, key, value_0){
  if (jsEquals(key, null)) {
    debugger;
    throw makeAssertionError_Object('Unsupported value');
  }
  $jsniPut(this$static, key, value_0);
}

function $remove_10(this$static, key){
  jsNotEquals(key, null) && $jsniRemove_0(this$static, key);
}

function $$init_484(){
}

function CruxClientConfig_Impl_0(){
  Object_1.call(this);
  $$init_484();
}

defineSeed(582, 1, {}, CruxClientConfig_Impl_0);
function $$init_485(this$static){
  this$static.controllers_0 = new FastMap_0;
}

function RegisteredControllers_detailService_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_485(this);
  this.view = view;
  this.iocContainer = iocContainer;
}

defineSeed(583, 1, {}, RegisteredControllers_detailService_largeDisplayMouse_0);
_.getController = function getController(controller){
  var __cont, ret;
  ret = $get_9(this.controllers_0, controller);
  if (jsEquals(ret, null)) {
    if (unsafeEquals(controller, 'detailServiceController')) {
      __cont = new DetailServiceController_ControllerProxy_0(this.view);
      __cont , $geteu_cloudopting_ui_ToscaUI_client_controller_DetailServiceController_DetailServiceView(this.iocContainer, ($clinit_IoCResource$Scope() , LOCAL), null);
      $put_1(this.controllers_0, 'detailServiceController', __cont);
    }
    jsEquals(ret, null) && (ret = $get_9(this.controllers_0, controller));
  }
  return ret;
}
;
function $$init_486(this$static){
  this$static.controllers_0 = new FastMap_0;
}

function RegisteredControllers_login_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_486(this);
  this.view = view;
  this.iocContainer = iocContainer;
}

defineSeed(584, 1, {}, RegisteredControllers_login_largeDisplayMouse_0);
_.getController = function getController_0(controller){
  var __cont, ret;
  ret = $get_9(this.controllers_0, controller);
  if (jsEquals(ret, null)) {
    if (unsafeEquals(controller, 'loginController')) {
      __cont = new LoginController_ControllerProxy_0(this.view);
      __cont.loginView = $geteu_cloudopting_ui_ToscaUI_client_controller_LoginController_LoginView(this.iocContainer, ($clinit_IoCResource$Scope() , LOCAL), null);
      __cont.connectApi = $geteu_cloudopting_ui_ToscaUI_client_remote_IConnect(this.iocContainer, ($clinit_IoCResource$Scope() , LOCAL), null);
      $put_1(this.controllers_0, 'loginController', __cont);
    }
    jsEquals(ret, null) && (ret = $get_9(this.controllers_0, controller));
  }
  return ret;
}
;
function $$init_487(this$static){
  this$static.controllers_0 = new FastMap_0;
}

function RegisteredControllers_main_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_487(this);
  this.view = view;
  this.iocContainer = iocContainer;
}

defineSeed(585, 1, {}, RegisteredControllers_main_largeDisplayMouse_0);
_.getController = function getController_1(controller){
  var __cont, ret;
  ret = $get_9(this.controllers_0, controller);
  if (jsEquals(ret, null)) {
    if (unsafeEquals(controller, 'mainController')) {
      __cont = new MainController_ControllerProxy_0(this.view);
      __cont.mainView = $geteu_cloudopting_ui_ToscaUI_client_controller_MainController_MainView(this.iocContainer, ($clinit_IoCResource$Scope() , LOCAL), null);
      __cont , $geteu_cloudopting_ui_ToscaUI_client_remote_impl_ToscaProviderService(this.iocContainer, ($clinit_IoCResource$Scope() , LOCAL), null);
      __cont , $geteu_cloudopting_ui_ToscaUI_client_remote_IApi(this.iocContainer, ($clinit_IoCResource$Scope() , LOCAL), null);
      __cont.connectApi = $geteu_cloudopting_ui_ToscaUI_client_remote_IConnect_0(this.iocContainer, ($clinit_IoCResource$Scope() , LOCAL), null);
      __cont.userInfo = $geteu_cloudopting_ui_ToscaUI_client_remote_IUserInfo(this.iocContainer, ($clinit_IoCResource$Scope() , LOCAL), null);
      $put_1(this.controllers_0, 'mainController', __cont);
    }
    jsEquals(ret, null) && (ret = $get_9(this.controllers_0, controller));
  }
  return ret;
}
;
function $$init_488(this$static){
  this$static.controllers_0 = new FastMap_0;
}

function RegisteredControllers_menu_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_488(this);
  this.view = view;
  this.iocContainer = iocContainer;
}

defineSeed(586, 1, {}, RegisteredControllers_menu_largeDisplayMouse_0);
_.getController = function getController_2(controller){
  var __cont, ret;
  ret = $get_9(this.controllers_0, controller);
  if (jsEquals(ret, null)) {
    if (unsafeEquals(controller, 'menuController')) {
      __cont = new MenuController_ControllerProxy_0(this.view);
      __cont , $geteu_cloudopting_ui_ToscaUI_client_controller_MenuController_MenuView(this.iocContainer, ($clinit_IoCResource$Scope() , LOCAL), null);
      $put_1(this.controllers_0, 'menuController', __cont);
    }
    jsEquals(ret, null) && (ret = $get_9(this.controllers_0, controller));
  }
  return ret;
}
;
function $$init_489(this$static){
  this$static.controllers_0 = new FastMap_0;
}

function RegisteredControllers_publishService_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_489(this);
  this.view = view;
  this.iocContainer = iocContainer;
}

defineSeed(587, 1, {}, RegisteredControllers_publishService_largeDisplayMouse_0);
_.getController = function getController_3(controller){
  var __cont, ret;
  ret = $get_9(this.controllers_0, controller);
  if (jsEquals(ret, null)) {
    if (unsafeEquals(controller, 'publishServiceController')) {
      __cont = new PublishServiceController_ControllerProxy_0(this.view);
      __cont , $geteu_cloudopting_ui_ToscaUI_client_controller_PublishServiceController_PublishServiceView(this.iocContainer, ($clinit_IoCResource$Scope() , LOCAL), null);
      $put_1(this.controllers_0, 'publishServiceController', __cont);
    }
    jsEquals(ret, null) && (ret = $get_9(this.controllers_0, controller));
  }
  return ret;
}
;
function $$init_490(this$static){
  this$static.controllers_0 = new FastMap_0;
}

function RegisteredControllers_serviceCatalogList_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_490(this);
  this.view = view;
  this.iocContainer = iocContainer;
}

defineSeed(588, 1, {}, RegisteredControllers_serviceCatalogList_largeDisplayMouse_0);
_.getController = function getController_4(controller){
  var __cont, ret;
  ret = $get_9(this.controllers_0, controller);
  if (jsEquals(ret, null)) {
    if (unsafeEquals(controller, 'serviceCatalogListController')) {
      __cont = new ServiceCatalogListController_ControllerProxy_0(this.view);
      __cont.serviceCatalogList = $geteu_cloudopting_ui_ToscaUI_client_controller_ServiceCatalogListController_ServiceCatalogList(this.iocContainer, ($clinit_IoCResource$Scope() , LOCAL), null);
      $put_1(this.controllers_0, 'serviceCatalogListController', __cont);
    }
    jsEquals(ret, null) && (ret = $get_9(this.controllers_0, controller));
  }
  return ret;
}
;
function $$init_491(this$static){
  this$static.controllers_0 = new FastMap_0;
}

function RegisteredControllers_subscribeServiceTaylorForm_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_491(this);
  this.view = view;
  this.iocContainer = iocContainer;
}

defineSeed(589, 1, {}, RegisteredControllers_subscribeServiceTaylorForm_largeDisplayMouse_0);
_.getController = function getController_5(controller){
  var __cont, ret;
  ret = $get_9(this.controllers_0, controller);
  if (jsEquals(ret, null)) {
    if (unsafeEquals(controller, 'subscribeServiceTaylorFormController')) {
      __cont = new SubscribeServiceTaylorFormController_ControllerProxy_0(this.view);
      __cont , $geteu_cloudopting_ui_ToscaUI_client_controller_SubscribeServiceTaylorFormController_SubscribeServiceTaylorFormView(this.iocContainer, ($clinit_IoCResource$Scope() , LOCAL), null);
      $put_1(this.controllers_0, 'subscribeServiceTaylorFormController', __cont);
    }
    jsEquals(ret, null) && (ret = $get_9(this.controllers_0, controller));
  }
  return ret;
}
;
function $$init_492(this$static){
  this$static.controllers_0 = new FastMap_0;
}

function RegisteredControllers_toscalist_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_492(this);
  this.view = view;
  this , iocContainer;
}

defineSeed(590, 1, {}, RegisteredControllers_toscalist_largeDisplayMouse_0);
_.getController = function getController_6(controller){
  var __cont, ret;
  ret = $get_9(this.controllers_0, controller);
  if (jsEquals(ret, null)) {
    if (unsafeEquals(controller, 'toscaListController')) {
      __cont = new ToscaListController_ControllerProxy_0(this.view);
      $put_1(this.controllers_0, 'toscaListController', __cont);
    }
    jsEquals(ret, null) && (ret = $get_9(this.controllers_0, controller));
  }
  return ret;
}
;
function $$init_493(this$static){
  this$static.controllers_0 = new FastMap_0;
}

function RegisteredControllers_toscaui_index_html_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_493(this);
  this , view;
  this , iocContainer;
}

defineSeed(591, 1, {}, RegisteredControllers_toscaui_index_html_largeDisplayMouse_0);
_.getController = function getController_7(controller){
  var ret;
  ret = $get_9(this.controllers_0, controller);
  jsEquals(ret, null) && (jsEquals(ret, null) && (ret = $get_9(this.controllers_0, controller)));
  return ret;
}
;
function $$init_494(){
}

function $asWidget(this$static){
  return this$static.boundWidget;
}

function $getChildWidget(this$static, id_0){
  return $getWidget_2($getControllerView(this$static), id_0);
}

function $getControllerView(this$static){
  return dynamicCast(this$static, Q$ViewAware).getBoundCruxView();
}

function $setBoundWidget(this$static, boundWidget){
  this$static.boundWidget = boundWidget;
}

function $setStyleName_0(this$static, style){
  this$static.boundWidget.setStyleName(style);
}

function DeviceAdaptiveController_0(){
  Object_1.call(this);
  $$init_494();
}

defineSeed(592, 1, {});
_.asWidget = function asWidget_0(){
  return $asWidget(this);
}
;
_.fireEvent = function fireEvent_3(event_0){
  $fireEvent_1(this.boundWidget, event_0);
}
;
_.init_0 = function init_3(){
}
;
_.setHeight = function setHeight_1(height){
  this.boundWidget.setHeight(height);
}
;
_.setWidth = function setWidth_1(width_0){
  this.boundWidget.setWidth(width_0);
}
;
function $clinit_ViewContainer(){
  $clinit_ViewContainer = nullMethod;
  $clinit_UIObject();
  logger_2 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_ViewContainer_2_classLit));
}

function $$init_495(this$static){
  this$static.views = new FastMap_0;
}

function $activate(this$static, view, containerPanel, parameter){
  $isLoaded(view) || $load(view, parameter);
  view.render_0(containerPanel, new ViewContainer$4_0(this$static, view, parameter));
  ensureViewContainerHandlers(this$static);
  return true;
}

function $add_10(this$static, view, render, parameter){
  if ($addView(this$static, view, false, parameter)) {
    render && this$static.renderView(view, parameter);
    return true;
  }
  return false;
}

function $addView(this$static, view, lazy, parameter){
  if (isNull_1(view)) {
    debugger;
    throw makeAssertionError_Object('Can not add a null view to the ViewContainer');
  }
  if (isNotNull($getView(this$static, $getId_0(view)))) {
    debugger;
    throw makeAssertionError_Object('This container already contains a view with the given identifier [' + $getId_0(view) + '].');
  }
  if (this$static.doAdd(view, lazy, parameter)) {
    $adoptView(this$static, view);
    return true;
  }
  return false;
}

function $adoptView(this$static, view){
  $setContainer(view, this$static);
}

function $bindToDOM(this$static){
  bindToDOM(this$static);
}

function $deactivate(this$static, view, containerPanel, skipEvent){
  if ($isActive(view)) {
    if ($setDeactivated(view, skipEvent)) {
      this$static.clearPanelsForDeactivatedViews && containerPanel.clear_0();
      removeViewContainerHandlers();
      return true;
    }
    return false;
  }
  return true;
}

function $doAdd_0(this$static, view, lazy, parameter){
  if (!$containsKey_1(this$static.views, $getId_0(view))) {
    $put_1(this$static.views, $getId_0(view), view);
    lazy || $load(view, parameter);
    return true;
  }
  return false;
}

function $doRemove_0(this$static, view, skipEvent){
  var active, containerPanel;
  if ($containsKey_1(this$static.views, $getId_0(view))) {
    containerPanel = this$static.getContainerPanel(view);
    active = $isActive(view);
    if (this$static.deactivate(view, containerPanel, skipEvent) && (skipEvent || $unload(view))) {
      $remove_9(this$static.views, $getId_0(view));
      active && containerPanel.clear_0();
      return true;
    }
  }
  return false;
}

function $getMainWidget(this$static){
  return this$static.mainWidget;
}

function $getView(this$static, viewId){
  if (jsEquals(viewId, null)) {
    return null;
  }
  return dynamicCast($get_9(this$static.views, viewId), Q$View);
}

function $loadAndRenderView(this$static, viewName, viewId, parameter){
  var e;
  try {
    loggingIsEnabled() && $info_0(logger_2, getMessages().viewContainerCreatingView(viewId));
    createView(viewName, viewId, new ViewContainer$3_0(this$static, parameter, viewId));
  }
   catch ($e0) {
    $e0 = wrap($e0);
    if (instanceOf($e0, Q$InterfaceConfigException)) {
      e = $e0;
      getErrorHandler().handleError_0(getMessages().viewContainerErrorCreatingView(viewId), e);
    }
     else 
      throw unwrap($e0);
  }
}

function $loadView(this$static, viewName, viewId, render){
  this$static.loadView(viewName, viewId, render, null);
}

function $loadView_0(this$static, viewName, viewId, render, parameter){
  var e;
  try {
    loggingIsEnabled() && $info_0(logger_2, getMessages().viewContainerCreatingView(viewId));
    createView(viewName, viewId, new ViewContainer$2_0(this$static, render, parameter, viewId));
  }
   catch ($e0) {
    $e0 = wrap($e0);
    if (instanceOf($e0, Q$InterfaceConfigException)) {
      e = $e0;
      getErrorHandler().handleError_0(getMessages().viewContainerErrorCreatingView(viewId), e);
    }
     else 
      throw unwrap($e0);
  }
}

function $loadView_1(this$static, viewName, render){
  $loadView(this$static, viewName, viewName, render);
}

function $remove_11(this$static, view){
  return $remove_12(this$static, view, false);
}

function $remove_12(this$static, view, skipEvents){
  if (isNull_1(view)) {
    debugger;
    throw makeAssertionError_Object('Can not remove a null view from the ViewContainer');
  }
  if (this$static.doRemove_0(view, skipEvents)) {
    $setContainer(view, null);
    return true;
  }
  return false;
}

function $renderView(this$static, view, parameter){
  var activated, containerPanel, title_0;
  if (!(isNotNull(view) && $containsKey_1(this$static.views, $getId_0(view)))) {
    debugger;
    throw makeAssertionError_Object('Can not render the view[' + $getId_0(view) + ']. It was not added to the container');
  }
  containerPanel = this$static.getContainerPanel(view);
  activated = this$static.activate(view, containerPanel, parameter);
  if (activated) {
    title_0 = $getTitle(view);
    isEmpty_5(title_0) || this$static.handleViewTitle(title_0, containerPanel, $getId_0(view));
  }
  return activated;
}

function $showView(this$static, viewName){
  $showView_0(this$static, viewName, viewName);
}

function $showView_0(this$static, viewName, viewId){
  this$static.showView(viewName, viewId, null);
}

function $showView_1(this$static, viewName, viewId, parameter){
  var view;
  view = $getView(this$static, viewId);
  isNotNull(view)?$isActive(view) || this$static.renderView(view, parameter):$loadAndRenderView(this$static, viewName, viewId, parameter);
}

function $unbindToDOM(this$static){
  unbindToDOM(this$static);
}

function ViewContainer_0(mainWidget, clearPanelsForDeactivatedViews){
  Composite_0.call(this);
  $$init_495(this);
  this.mainWidget = mainWidget;
  if (isNotNull(mainWidget)) {
    $addAttachHandler(this.mainWidget, new ViewContainer$1_0(this));
    $initWidget(this, this.mainWidget);
    this.setStyleName('crux-ViewContainer');
  }
  this.clearPanelsForDeactivatedViews = clearPanelsForDeactivatedViews;
  initializeWindowContainers();
}

function createView(viewName, viewId, callback){
  getViewFactory().createView(viewName, viewId, callback);
}

function getViewFactory(){
  $clinit_ViewContainer();
  isNull_1(viewFactory) && (viewFactory = new ViewFactory_Impl_largeDisplayMouse_0);
  return viewFactory;
}

defineSeed(596, 365, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$ViewContainer]));
_.activate = function activate(view, containerPanel, parameter){
  return $activate(this, view, containerPanel, parameter);
}
;
_.add_3 = function add_15(view, render, parameter){
  return $add_10(this, view, render, parameter);
}
;
_.deactivate = function deactivate(view, containerPanel, skipEvent){
  return $deactivate(this, view, containerPanel, skipEvent);
}
;
_.doAdd = function doAdd(view, lazy, parameter){
  return $doAdd_0(this, view, lazy, parameter);
}
;
_.doRemove_0 = function doRemove_1(view, skipEvent){
  return $doRemove_0(this, view, skipEvent);
}
;
_.loadView = function loadView(viewName, viewId, render, parameter){
  $loadView_0(this, viewName, viewId, render, parameter);
}
;
_.renderView = function renderView(view, parameter){
  return $renderView(this, view, parameter);
}
;
_.showView = function showView(viewName, viewId, parameter){
  $showView_1(this, viewName, viewId, parameter);
}
;
_.clearPanelsForDeactivatedViews = false;
var logger_2, viewFactory;
function $$init_496(){
}

function $add_11(this$static, view, render, parameter){
  return $add_10(this$static, view, render, parameter);
}

function $showView_2(this$static, viewName, viewId, parameter){
  $showView_1(this$static, viewName, viewId, parameter);
}

function ParameterizedViewContainer_0(mainWidget, clearPanelsForDeactivatedViews){
  ViewContainer_0.call(this, mainWidget, clearPanelsForDeactivatedViews);
  $$init_496();
}

defineSeed(595, 596, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$ViewContainer]));
_.add_3 = function add_16(view, render, parameter){
  return $add_11(this, view, render, parameter);
}
;
_.loadView = function loadView_0(viewName, viewId, render, parameter){
  $loadView_0(this, viewName, viewId, render, parameter);
}
;
_.showView = function showView_0(viewName, viewId, parameter){
  $showView_2(this, viewName, viewId, parameter);
}
;
function $$init_497(this$static){
  this$static.activeView = null;
}

function $activate_0(this$static, view, containerPanel, parameter){
  if (isNotNull(this$static.activeView)) {
    if ($deactivate_0(this$static, this$static.activeView, this$static.getContainerPanel(this$static.activeView), false)) {
      this$static.activeView = view;
      return $activate(this$static, view, containerPanel, parameter);
    }
    return false;
  }
   else {
    this$static.activeView = view;
    return $activate(this$static, view, containerPanel, parameter);
  }
}

function $deactivate_0(this$static, view, containerPanel, skipEvent){
  var deactivated;
  if (isNull_1(view)) {
    debugger;
    throw makeAssertionError_Object('Can not deactive a null view');
  }
  deactivated = true;
  if (isNotNull(this$static.activeView) && $equals_2($getId_0(view), $getId_0(this$static.activeView))) {
    deactivated = $deactivate(this$static, view, containerPanel, skipEvent);
    deactivated && (this$static.activeView = null);
  }
  return deactivated;
}

function $getActiveView(this$static){
  return this$static.activeView;
}

function SingleViewContainer_0(mainWidget, clearPanelsForDeactivatedViews){
  ParameterizedViewContainer_0.call(this, mainWidget, clearPanelsForDeactivatedViews);
  $$init_497(this);
}

defineSeed(594, 595, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$ViewContainer]));
_.activate = function activate_0(view, containerPanel, parameter){
  return $activate_0(this, view, containerPanel, parameter);
}
;
_.deactivate = function deactivate_0(view, containerPanel, skipEvent){
  return $deactivate_0(this, view, containerPanel, skipEvent);
}
;
_.hasHistoryHandlers = function hasHistoryHandlers_0(){
  return isNotNull(this.activeView) && $hasHistoryHandlers(this.activeView);
}
;
_.hasOrientationChangeHandlers = function hasOrientationChangeHandlers(){
  return isNotNull(this.activeView) && $hasOrientationChangeHandlers(this.activeView);
}
;
_.hasResizeHandlers = function hasResizeHandlers_0(){
  return isNotNull(this.activeView) && $hasResizeHandlers(this.activeView);
}
;
_.hasWindowCloseHandlers = function hasWindowCloseHandlers(){
  return isNotNull(this.activeView) && $hasWindowCloseHandlers(this.activeView);
}
;
_.hasWindowClosingHandlers = function hasWindowClosingHandlers(){
  return isNotNull(this.activeView) && $hasWindowClosingHandlers(this.activeView);
}
;
_.notifyViewsAboutHistoryChange = function notifyViewsAboutHistoryChange(event_0){
  isNotNull(this.activeView) && $fireHistoryChangeEvent(this.activeView, event_0);
}
;
_.notifyViewsAboutOrientationChange = function notifyViewsAboutOrientationChange(){
  isNotNull(this.activeView) && $fireOrientationEvent(this.activeView);
}
;
_.notifyViewsAboutWindowClose = function notifyViewsAboutWindowClose(event_0){
  isNotNull(this.activeView) && $fireWindowCloseEvent(this.activeView, event_0);
}
;
_.notifyViewsAboutWindowClosing = function notifyViewsAboutWindowClosing(event_0){
  isNotNull(this.activeView) && $fireWindowClosingEvent(this.activeView, event_0);
}
;
_.notifyViewsAboutWindowResize = function notifyViewsAboutWindowResize(event_0){
  isNotNull(this.activeView) && $fireResizeEvent(this.activeView, event_0);
}
;
function $$init_498(){
}

function $getContainerPanel(this$static){
  return this$static.containerPanel;
}

function DeviceAdaptiveViewContainer_0(){
  $clinit_ViewContainer();
  SingleViewContainer_0.call(this, new SimplePanel_0, true);
  $$init_498();
  this.containerPanel = dynamicCast($getMainWidget(this), Q$SimplePanel);
}

defineSeed(593, 594, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$ViewContainer]), DeviceAdaptiveViewContainer_0);
_.getContainerPanel = function getContainerPanel(view){
  return $getContainerPanel(this);
}
;
_.handleViewTitle = function handleViewTitle(title_0, containerPanel, viewId){
}
;
function $clinit_Storyboard_Impl_largeDisplayMouse(){
  $clinit_Storyboard_Impl_largeDisplayMouse = nullMethod;
  $clinit_UIObject();
  getLogger($getName_2(Lorg_cruxframework_crux_core_client_controller_crossdevice_Storyboard_1Impl_1largeDisplayMouse_2_classLit));
}

function $$init_499(this$static){
  this$static.viewContainer = new DeviceAdaptiveViewContainer_0;
}

function Storyboard_Impl_largeDisplayMouse_0(){
  $clinit_Storyboard_Impl_largeDisplayMouse();
  var view0;
  Composite_0.call(this);
  $$init_499(this);
  view0 = new org_cruxframework_crux_widgets_client_storyboard_Storyboard_largeDisplayMouse_0('Storyboard' + _idGen++);
  this._controller = new StoryboardLargeMouseController_ControllerProxy_0(view0);
  $setBoundWidget(this._controller, this);
  $setController_0(view0, this._controller);
  $initWidget(this, this.viewContainer.asWidget());
  $add_11(this.viewContainer, view0, true, null);
  this._controller.init_0();
}

defineSeed(597, 365, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$Storyboard]), Storyboard_Impl_largeDisplayMouse_0);
_.add_1 = function add_17(w){
  $add_12(this._controller, w);
}
;
_.asWidget = function asWidget_1(){
  return $asWidget(this._controller);
}
;
_.iterator = function iterator_14(){
  return $iterator_1(this._controller);
}
;
_.remove_0 = function remove_25(w){
  return $remove_14(this._controller, w);
}
;
var _idGen = 0;
function $clinit_TopMenuDisposal_Impl_largeDisplayMouse(){
  $clinit_TopMenuDisposal_Impl_largeDisplayMouse = nullMethod;
  $clinit_UIObject();
  getLogger($getName_2(Lorg_cruxframework_crux_core_client_controller_crossdevice_TopMenuDisposal_1Impl_1largeDisplayMouse_2_classLit));
}

function $$init_500(this$static){
  this$static.viewContainer = new DeviceAdaptiveViewContainer_0;
}

function TopMenuDisposal_Impl_largeDisplayMouse_0(){
  $clinit_TopMenuDisposal_Impl_largeDisplayMouse();
  var view;
  Composite_0.call(this);
  $$init_500(this);
  view = new org_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposal_largeDisplayMouse_0('TopMenuDisposal' + _idGen_0++);
  this._controller = new TopMenuDisposalLargeController_ControllerProxy_0(view);
  $setBoundWidget(this._controller, this);
  $setController(view, this._controller);
  $initWidget(this, this.viewContainer.asWidget());
  $add_11(this.viewContainer, view, true, null);
  this._controller.init_0();
}

defineSeed(598, 365, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]), TopMenuDisposal_Impl_largeDisplayMouse_0);
_.addMenuEntry = function addMenuEntry(label_0, targetView){
  $addMenuEntry(this._controller, label_0, targetView);
}
;
_.asWidget = function asWidget_2(){
  return $asWidget(this._controller);
}
;
_.setDefaultView = function setDefaultView(viewName){
  $setDefaultView(this._controller, viewName);
}
;
var _idGen_0 = 0;
function $$init_501(){
}

function $addCallbackHandler(this$static, duration, callback){
  isNotNull(callback) && (duration <= 0?callback.onTransitionCompleted():$schedule(new BaseTransitionHandler$6_0(this$static, callback), duration + 10));
}

function $setHeight_1(this$static, widget, height, duration, callback){
  var element;
  if (isNull_1(widget)) {
    return;
  }
  element = $getElement(widget);
  $addCallbackHandler(this$static, duration, new BaseTransitionHandler$1_0(this$static, element, callback));
  this$static.setHeight_0(element, height, duration);
}

function BaseTransitionHandler_0(){
  Object_1.call(this);
  $$init_501();
}

defineSeed(599, 1, {});
_.hideBackface = function hideBackface(widget){
  if (isNull_1(widget)) {
    return;
  }
  $setProperty_0($getStyle($getElement(widget)), 'webkitBackfaceVisibility', 'hidden');
}
;
_.resetTransition_0 = function resetTransition(widget){
  if (isNull_1(widget)) {
    return;
  }
  this.resetTransition($getElement(widget));
}
;
_.setHeight_1 = function setHeight_2(widget, height, duration, callback){
  if (isNull_1(widget)) {
    return;
  }
  $setHeight_1(this, widget, height + 'px', duration, callback);
}
;
_.translateX_1 = function translateX(widget, diff, duration, callback){
  var element;
  if (isNull_1(widget)) {
    return;
  }
  element = $getElement(widget);
  isNotNull(callback) && $addCallbackHandler(this, duration, callback);
  this.translateX_0(element, diff, duration);
}
;
_.translateX_2 = function translateX_0(widget, diff, callback){
  var element;
  if (isNull_1(widget)) {
    return;
  }
  element = $getElement(widget);
  isNotNull(callback) && $addCallbackHandler(this, 0, callback);
  this.translateX(element, diff);
}
;
function $$init_502(){
}

function BaseTransitionHandler$1_0(this$0, val$element, val$callback){
  this.this$0 = this$0;
  this.val$element = val$element;
  this.val$callback = val$callback;
  Object_1.call(this);
  $$init_502();
}

defineSeed(600, 1, {}, BaseTransitionHandler$1_0);
_.onTransitionCompleted = function onTransitionCompleted(){
  this.this$0.clearTransitionProperties(this.val$element);
  isNotNull(this.val$callback) && this.val$callback.onTransitionCompleted();
}
;
function $$init_503(){
}

function BaseTransitionHandler$6_0(this$0, val$callback){
  this , this$0;
  this.val$callback = val$callback;
  Timer_0.call(this);
  $$init_503();
}

defineSeed(601, 10, {}, BaseTransitionHandler$6_0);
_.run = function run_2(){
  this.val$callback.onTransitionCompleted();
}
;
function getTransitionHandler(){
  isNull_1(transitionHandler) && (transitionHandler = new WebkitTransitionHandler_0);
  return transitionHandler;
}

function hideBackface_0(widget){
  getTransitionHandler().hideBackface(widget);
}

function resetTransition_0(widget){
  getTransitionHandler().resetTransition_0(widget);
}

function setHeight_3(widget, height, duration, callback){
  getTransitionHandler().setHeight_1(widget, height, duration, callback);
}

function translateX_1(widget, diff, duration, callback){
  getTransitionHandler().translateX_1(widget, diff, duration, callback);
}

function translateX_2(widget, diff, callback){
  getTransitionHandler().translateX_2(widget, diff, callback);
}

var transitionHandler = null;
function $$init_504(){
}

function WebkitTransitionHandler_0(){
  BaseTransitionHandler_0.call(this);
  $$init_504();
}

defineSeed(603, 599, {}, WebkitTransitionHandler_0);
_.clearTransitionProperties = function clearTransitionProperties(el){
  el.style.webkitTransitionProperty = 'all';
  el.style.webkitTransitionDuration = '';
  el.style.webkitTransitionTimingFunction = '';
}
;
_.resetTransition = function resetTransition_1(el){
  el.style.webkitTransform = 'translate3d(0px,0px,0px)';
}
;
_.setHeight_0 = function setHeight_4(el, height, duration){
  el.style.webkitTransitionProperty = 'height';
  el.style.webkitTransitionDelay = '0';
  if (duration == 0) {
    el.style.webkitTransitionDuration = '';
    el.style.webkitTransitionTimingFunction = '';
  }
   else {
    el.style.webkitTransitionDuration = duration + 'ms';
    el.style.webkitTransitionTimingFunction = 'ease-out';
  }
  el.style.height = height;
}
;
_.translateX = function translateX_3(el, diff){
  el.style.webkitTransitionProperty = 'all';
  el.style.webkitTransitionDuration = '';
  el.style.webkitTransitionTimingFunction = '';
  el.style.webkitTransitionDelay = '0';
  el.style.webkitTransform = 'translate3d(' + diff + 'px,0px,0px)';
}
;
_.translateX_0 = function translateX_4(el, diff, duration){
  el.style.webkitTransitionProperty = 'all';
  el.style.webkitTransitionDelay = '0';
  if (duration == 0) {
    el.style.webkitTransitionDuration = '';
    el.style.webkitTransitionTimingFunction = '';
  }
   else {
    el.style.webkitTransitionDuration = duration + 'ms';
    el.style.webkitTransitionTimingFunction = 'ease-out';
  }
  el.style.webkitTransform = 'translate3d(' + diff + 'px,0px,0px)';
}
;
function $$init_505(){
}

function RegisteredDataSources_detailService_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_505();
  this , view;
  this , iocContainer;
}

defineSeed(604, 1, {}, RegisteredDataSources_detailService_largeDisplayMouse_0);
function $$init_506(){
}

function RegisteredDataSources_login_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_506();
  this , view;
  this , iocContainer;
}

defineSeed(605, 1, {}, RegisteredDataSources_login_largeDisplayMouse_0);
function $$init_507(){
}

function RegisteredDataSources_main_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_507();
  this , view;
  this , iocContainer;
}

defineSeed(606, 1, {}, RegisteredDataSources_main_largeDisplayMouse_0);
function $$init_508(){
}

function RegisteredDataSources_menu_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_508();
  this , view;
  this , iocContainer;
}

defineSeed(607, 1, {}, RegisteredDataSources_menu_largeDisplayMouse_0);
function $$init_509(){
}

function RegisteredDataSources_publishService_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_509();
  this , view;
  this , iocContainer;
}

defineSeed(608, 1, {}, RegisteredDataSources_publishService_largeDisplayMouse_0);
function $$init_510(){
}

function RegisteredDataSources_serviceCatalogList_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_510();
  this , view;
  this , iocContainer;
}

defineSeed(609, 1, {}, RegisteredDataSources_serviceCatalogList_largeDisplayMouse_0);
function $$init_511(){
}

function RegisteredDataSources_subscribeServiceTaylorForm_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_511();
  this , view;
  this , iocContainer;
}

defineSeed(610, 1, {}, RegisteredDataSources_subscribeServiceTaylorForm_largeDisplayMouse_0);
function $$init_512(){
}

function RegisteredDataSources_toscalist_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_512();
  this , view;
  this , iocContainer;
}

defineSeed(611, 1, {}, RegisteredDataSources_toscalist_largeDisplayMouse_0);
function $$init_513(){
}

function RegisteredDataSources_toscaui_index_html_largeDisplayMouse_0(view, iocContainer){
  Object_1.call(this);
  $$init_513();
  this , view;
  this , iocContainer;
}

defineSeed(612, 1, {}, RegisteredDataSources_toscaui_index_html_largeDisplayMouse_0);
function $clinit_ErrorHandlerImpl(){
  $clinit_ErrorHandlerImpl = nullMethod;
  logger_3 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_Crux_2_classLit));
}

function $$init_514(){
}

function $handleError(errorMessage, t){
  if (isNotNull(t)) {
    loggingIsEnabled() && $log_5(logger_3, ($clinit_Level() , SEVERE), jsEquals(errorMessage, null)?'':errorMessage, t);
    log_2(errorMessage, t);
  }
  jsNotEquals(errorMessage, null) && alert_0(errorMessage);
}

function $handleError_0(this$static, t){
  $handleError(t.getMessage(), t);
}

function ErrorHandlerImpl_0(){
  $clinit_ErrorHandlerImpl();
  Object_1.call(this);
  $$init_514();
}

defineSeed(613, 1, {}, ErrorHandlerImpl_0);
_.handleError = function handleError(errorMessage){
  $handleError(errorMessage, null);
}
;
_.handleError_0 = function handleError_0(errorMessage, t){
  $handleError(errorMessage, t);
}
;
_.handleError_1 = function handleError_1(t){
  $handleError_0(this, t);
}
;
var logger_3;
function $$init_515(){
}

function BaseEvent_0(source){
  Object_1.call(this);
  $$init_515();
  this , source;
}

defineSeed(614, 1, {});
function $$init_516(){
}

function CruxEvent_0(source, senderId){
  BaseEvent_0.call(this, source);
  $$init_516();
  this , senderId;
}

defineSeed(615, 614, {});
function $$init_517(this$static){
  this$static.lastExec = $getTime_0(new Date_1);
  this$static.timer = new BeginEndExecutor$1_0(this$static);
}

function $execute(this$static){
  var delta, now_0;
  now_0 = $getTime_0(new Date_1);
  isNotNull(this$static.timer) && $cancel_0(this$static.timer);
  if (this$static.isRunning) {
    isNotNull(this$static.timer) && $cancel_0(this$static.timer);
    delta = sub_0(now_0, this$static.lastExec);
    if (lt(delta, fromInt(this$static.maxIntervalBetweenStartAndEnd))) {
      $schedule(this$static.timer, this$static.maxIntervalBetweenStartAndEnd);
    }
     else {
      this$static.doEndAction();
      this$static.isRunning = false;
      this$static.doEndActionExecuted = true;
    }
  }
   else {
    if (this$static.doEndActionExecuted) {
      delta = sub_0(now_0, this$static.lastExec);
      if (gt(delta, fromInt(this$static.maxIntervalBetweenStartAndEnd))) {
        this$static.isRunning = true;
        this$static.doBeginAction();
        $schedule(this$static.timer, this$static.maxIntervalBetweenStartAndEnd);
      }
    }
     else {
      this$static.isRunning = true;
      this$static.doBeginAction();
      $schedule(this$static.timer, this$static.maxIntervalBetweenStartAndEnd);
    }
  }
  this$static.lastExec = now_0;
}

function BeginEndExecutor_0(maxIntervalBetweenStartAndEnd){
  Object_1.call(this);
  $$init_517(this);
  this.maxIntervalBetweenStartAndEnd = maxIntervalBetweenStartAndEnd;
}

defineSeed(616, 1, {});
_.doEndActionExecuted = false;
_.isRunning = false;
_.lastExec = P0_longLit;
_.maxIntervalBetweenStartAndEnd = 0;
function $$init_518(){
}

function BeginEndExecutor$1_0(this$0){
  this.this$0 = this$0;
  Timer_0.call(this);
  $$init_518();
}

defineSeed(617, 10, {}, BeginEndExecutor$1_0);
_.run = function run_3(){
  $execute(this.this$0);
}
;
function $getType_0(this$static){
  return this$static.type;
}

function $getName_3(this$static){
  return this$static.name;
}

function isSupported_0(){
  if ($wnd.File) {
    return true;
  }
  return false;
}

function isSupported_1(){
  if ($wnd.FileList) {
    return true;
  }
  return false;
}

function $readAsDataURL(this$static, blob, callback){
  this$static.readAsDataURL(blob);
  this$static.onload = function(e){
    callback.onComplete_0(e.target.result);
  }
  ;
}

function create_9(){
  return new $wnd.FileReader;
}

function createIfSupported(){
  if (isSupported_2()) {
    return create_9();
  }
  return null;
}

function isSupported_2(){
  if ($wnd.FileReader) {
    return true;
  }
  return false;
}

function $clinit_IoCResource$Scope(){
  $clinit_IoCResource$Scope = nullMethod;
  LOCAL = new IoCResource$Scope_0('LOCAL', 0);
  SINGLETON = new IoCResource$Scope_0('SINGLETON', 1);
  VIEW = new IoCResource$Scope_0('VIEW', 2);
  $VALUES_10 = initValues(_3Lorg_cruxframework_crux_core_client_ioc_IoCResource$Scope_2_classLit, makeCastMap([Q$Serializable]), Q$IoCResource$Scope, [LOCAL, SINGLETON, VIEW]);
}

function $$init_519(){
}

function IoCResource$Scope_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_519();
}

function valueOf_18(name_0){
  $clinit_IoCResource$Scope();
  return valueOf(($clinit_IoCResource$Scope$Map() , $MAP_10), name_0);
}

function values_11(){
  $clinit_IoCResource$Scope();
  return $VALUES_10;
}

defineSeed(622, 134, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$IoCResource$Scope]), IoCResource$Scope_0);
var $VALUES_10, LOCAL, SINGLETON, VIEW;
function $clinit_IoCResource$Scope$Map(){
  $clinit_IoCResource$Scope$Map = nullMethod;
  $MAP_10 = createValueOfMap(($clinit_IoCResource$Scope() , $VALUES_10));
}

var $MAP_10;
function $clinit_IocContainer(){
  $clinit_IocContainer = nullMethod;
  _localScope = new IocLocalScope_0;
  _documentScope = new IocPersistentScope_0;
}

function $$init_520(this$static){
  this$static._viewScope = new IocPersistentScope_0;
}

function $_getScope(this$static, scope_0){
  switch ($ordinal(scope_0)) {
    case 0:
      return _localScope;
    case 1:
      return _documentScope;
    case 2:
      return this$static._viewScope;
    default:return _localScope;
  }
}

function $getBoundCruxViewId(this$static){
  return isNull_1(this$static.view)?null:$getId_0(this$static.view);
}

function IocContainer_0(view){
  Object_1.call(this);
  $$init_520(this);
  this.view = view;
  this.runtimeIoCContainer = new IocContainer__largeDisplayMouse_0;
  this.runtimeIoCContainer.setIoCContainer(this);
}

defineSeed(624, 1, {});
_.getBoundCruxView = function getBoundCruxView_18(){
  return this.view;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_18(){
  return $getBoundCruxViewId(this);
}
;
_.runtimeIoCContainer = null;
var _documentScope, _localScope;
function $$init_521(){
}

function IocContainer__largeDisplayMouse_0(){
  Object_1.call(this);
  $$init_521();
}

defineSeed(625, 1, {}, IocContainer__largeDisplayMouse_0);
_.setIoCContainer = function setIoCContainer(iocContainer){
  this , iocContainer;
}
;
function $$init_522(){
}

function $geteu_cloudopting_ui_ToscaUI_client_controller_DetailServiceController_DetailServiceView(this$static, scope_0, subscope){
  var result;
  result = dynamicCast($_getScope(this$static, scope_0).getValue_0(new IocContainer_detailService_largeDisplayMouse$1_0(this$static), 'eu.cloudopting.ui.ToscaUI.client.controller.DetailServiceController.DetailServiceView', subscope, new IocContainer_detailService_largeDisplayMouse$2_0(this$static)), Q$DetailServiceController$DetailServiceView);
  jsNotEquals(scope_0, ($clinit_IoCResource$Scope() , SINGLETON)) && jsEquals(result.getBoundCruxViewId(), null) && result.bindCruxView($getBoundCruxViewId(this$static));
  return result;
}

function IocContainer_detailService_largeDisplayMouse_0(view){
  $clinit_IocContainer();
  IocContainer_0.call(this, view);
  $$init_522();
}

defineSeed(626, 624, {}, IocContainer_detailService_largeDisplayMouse_0);
function $$init_523(){
}

function $get_11(){
  return new DetailServiceController_DetailServiceView_Impl_0;
}

function IocContainer_detailService_largeDisplayMouse$1_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_523();
}

defineSeed(627, 1, {}, IocContainer_detailService_largeDisplayMouse$1_0);
_.get_3 = function get_18(){
  return $get_11();
}
;
function $$init_524(){
}

function $onCreate(){
}

function IocContainer_detailService_largeDisplayMouse$2_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_524();
}

defineSeed(628, 1, {}, IocContainer_detailService_largeDisplayMouse$2_0);
_.onCreate = function onCreate(newObject){
  $onCreate(dynamicCast(newObject, Q$DetailServiceController$DetailServiceView));
}
;
function $$init_525(){
}

function $geteu_cloudopting_ui_ToscaUI_client_controller_LoginController_LoginView(this$static, scope_0, subscope){
  var result;
  result = dynamicCast($_getScope(this$static, scope_0).getValue_0(new IocContainer_login_largeDisplayMouse$3_0(this$static), 'eu.cloudopting.ui.ToscaUI.client.controller.LoginController.LoginView', subscope, new IocContainer_login_largeDisplayMouse$4_0(this$static)), Q$LoginController$LoginView);
  jsNotEquals(scope_0, ($clinit_IoCResource$Scope() , SINGLETON)) && jsEquals(result.getBoundCruxViewId(), null) && result.bindCruxView($getBoundCruxViewId(this$static));
  return result;
}

function $geteu_cloudopting_ui_ToscaUI_client_remote_IConnect(this$static, scope_0, subscope){
  var result;
  result = dynamicCast($_getScope(this$static, scope_0).getValue_0(new IocContainer_login_largeDisplayMouse$1_0(this$static), 'eu.cloudopting.ui.ToscaUI.client.remote.IConnect', subscope, new IocContainer_login_largeDisplayMouse$2_0(this$static)), Q$IConnect);
  jsNotEquals(scope_0, ($clinit_IoCResource$Scope() , SINGLETON)) && jsEquals(result.getBoundCruxViewId(), null) && result.bindCruxView($getBoundCruxViewId(this$static));
  return result;
}

function IocContainer_login_largeDisplayMouse_0(view){
  $clinit_IocContainer();
  IocContainer_0.call(this, view);
  $$init_525();
}

defineSeed(629, 624, {}, IocContainer_login_largeDisplayMouse_0);
function $$init_526(){
}

function $get_12(){
  return new IConnect_Impl_0;
}

function IocContainer_login_largeDisplayMouse$1_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_526();
}

defineSeed(630, 1, {}, IocContainer_login_largeDisplayMouse$1_0);
_.get_3 = function get_19(){
  return $get_12();
}
;
function $$init_527(){
}

function $onCreate_0(){
}

function IocContainer_login_largeDisplayMouse$2_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_527();
}

defineSeed(631, 1, {}, IocContainer_login_largeDisplayMouse$2_0);
_.onCreate = function onCreate_0(newObject){
  $onCreate_0(dynamicCast(newObject, Q$IConnect));
}
;
function $$init_528(){
}

function $get_13(){
  return new LoginController_LoginView_Impl_0;
}

function IocContainer_login_largeDisplayMouse$3_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_528();
}

defineSeed(632, 1, {}, IocContainer_login_largeDisplayMouse$3_0);
_.get_3 = function get_20(){
  return $get_13();
}
;
function $$init_529(){
}

function $onCreate_1(){
}

function IocContainer_login_largeDisplayMouse$4_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_529();
}

defineSeed(633, 1, {}, IocContainer_login_largeDisplayMouse$4_0);
_.onCreate = function onCreate_1(newObject){
  $onCreate_1(dynamicCast(newObject, Q$LoginController$LoginView));
}
;
function $$init_530(){
}

function $geteu_cloudopting_ui_ToscaUI_client_controller_MainController_MainView(this$static, scope_0, subscope){
  var result;
  result = dynamicCast($_getScope(this$static, scope_0).getValue_0(new IocContainer_main_largeDisplayMouse$1_0(this$static), 'eu.cloudopting.ui.ToscaUI.client.controller.MainController.MainView', subscope, new IocContainer_main_largeDisplayMouse$2_0(this$static)), Q$MainController$MainView);
  jsNotEquals(scope_0, ($clinit_IoCResource$Scope() , SINGLETON)) && jsEquals(result.getBoundCruxViewId(), null) && result.bindCruxView($getBoundCruxViewId(this$static));
  return result;
}

function $geteu_cloudopting_ui_ToscaUI_client_remote_IApi(this$static, scope_0, subscope){
  var result;
  result = dynamicCast($_getScope(this$static, scope_0).getValue_0(new IocContainer_main_largeDisplayMouse$5_0(this$static), 'eu.cloudopting.ui.ToscaUI.client.remote.IApi', subscope, new IocContainer_main_largeDisplayMouse$6_0(this$static)), Q$IApi);
  jsNotEquals(scope_0, ($clinit_IoCResource$Scope() , SINGLETON)) && jsEquals(result.getBoundCruxViewId(), null) && result.bindCruxView($getBoundCruxViewId(this$static));
  return result;
}

function $geteu_cloudopting_ui_ToscaUI_client_remote_IConnect_0(this$static, scope_0, subscope){
  var result;
  result = dynamicCast($_getScope(this$static, scope_0).getValue_0(new IocContainer_main_largeDisplayMouse$3_0(this$static), 'eu.cloudopting.ui.ToscaUI.client.remote.IConnect', subscope, new IocContainer_main_largeDisplayMouse$4_0(this$static)), Q$IConnect);
  jsNotEquals(scope_0, ($clinit_IoCResource$Scope() , SINGLETON)) && jsEquals(result.getBoundCruxViewId(), null) && result.bindCruxView($getBoundCruxViewId(this$static));
  return result;
}

function $geteu_cloudopting_ui_ToscaUI_client_remote_IUserInfo(this$static, scope_0, subscope){
  var result;
  result = dynamicCast($_getScope(this$static, scope_0).getValue_0(new IocContainer_main_largeDisplayMouse$9_0(this$static), 'eu.cloudopting.ui.ToscaUI.client.remote.IUserInfo', subscope, new IocContainer_main_largeDisplayMouse$10_0(this$static)), Q$IUserInfo);
  jsNotEquals(scope_0, ($clinit_IoCResource$Scope() , SINGLETON)) && jsEquals(result.getBoundCruxViewId(), null) && result.bindCruxView($getBoundCruxViewId(this$static));
  return result;
}

function $geteu_cloudopting_ui_ToscaUI_client_remote_impl_ToscaProviderService(this$static, scope_0, subscope){
  var result;
  result = dynamicCast($_getScope(this$static, scope_0).getValue_0(new IocContainer_main_largeDisplayMouse$7_0(this$static), 'eu.cloudopting.ui.ToscaUI.client.remote.impl.ToscaProviderService', subscope, new IocContainer_main_largeDisplayMouse$8_0(this$static)), Q$ToscaProviderService);
  jsNotEquals(scope_0, ($clinit_IoCResource$Scope() , SINGLETON)) && jsEquals(result.getBoundCruxViewId(), null) && result.bindCruxView($getBoundCruxViewId(this$static));
  return result;
}

function IocContainer_main_largeDisplayMouse_0(view){
  $clinit_IocContainer();
  IocContainer_0.call(this, view);
  $$init_530();
}

defineSeed(634, 624, {}, IocContainer_main_largeDisplayMouse_0);
function $$init_531(){
}

function $get_14(){
  return new MainController_MainView_Impl_0;
}

function IocContainer_main_largeDisplayMouse$1_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_531();
}

defineSeed(635, 1, {}, IocContainer_main_largeDisplayMouse$1_0);
_.get_3 = function get_21(){
  return $get_14();
}
;
function $$init_532(){
}

function $onCreate_2(){
}

function IocContainer_main_largeDisplayMouse$10_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_532();
}

defineSeed(636, 1, {}, IocContainer_main_largeDisplayMouse$10_0);
_.onCreate = function onCreate_2(newObject){
  $onCreate_2(dynamicCast(newObject, Q$IUserInfo));
}
;
function $$init_533(){
}

function $onCreate_3(){
}

function IocContainer_main_largeDisplayMouse$2_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_533();
}

defineSeed(637, 1, {}, IocContainer_main_largeDisplayMouse$2_0);
_.onCreate = function onCreate_3(newObject){
  $onCreate_3(dynamicCast(newObject, Q$MainController$MainView));
}
;
function $$init_534(){
}

function $get_15(){
  return new IConnect_Impl_0;
}

function IocContainer_main_largeDisplayMouse$3_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_534();
}

defineSeed(638, 1, {}, IocContainer_main_largeDisplayMouse$3_0);
_.get_3 = function get_22(){
  return $get_15();
}
;
function $$init_535(){
}

function $onCreate_4(){
}

function IocContainer_main_largeDisplayMouse$4_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_535();
}

defineSeed(639, 1, {}, IocContainer_main_largeDisplayMouse$4_0);
_.onCreate = function onCreate_4(newObject){
  $onCreate_4(dynamicCast(newObject, Q$IConnect));
}
;
function $$init_536(){
}

function $get_16(){
  return new IApi_Impl_0;
}

function IocContainer_main_largeDisplayMouse$5_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_536();
}

defineSeed(640, 1, {}, IocContainer_main_largeDisplayMouse$5_0);
_.get_3 = function get_23(){
  return $get_16();
}
;
function $$init_537(){
}

function $onCreate_5(){
}

function IocContainer_main_largeDisplayMouse$6_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_537();
}

defineSeed(641, 1, {}, IocContainer_main_largeDisplayMouse$6_0);
_.onCreate = function onCreate_5(newObject){
  $onCreate_5(dynamicCast(newObject, Q$IApi));
}
;
function $$init_538(){
}

function $get_17(){
  return new ToscaProviderService_Impl_0;
}

function IocContainer_main_largeDisplayMouse$7_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_538();
}

defineSeed(642, 1, {}, IocContainer_main_largeDisplayMouse$7_0);
_.get_3 = function get_24(){
  return $get_17();
}
;
function $$init_539(){
}

function $onCreate_6(){
}

function IocContainer_main_largeDisplayMouse$8_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_539();
}

defineSeed(643, 1, {}, IocContainer_main_largeDisplayMouse$8_0);
_.onCreate = function onCreate_6(newObject){
  $onCreate_6(dynamicCast(newObject, Q$ToscaProviderService));
}
;
function $$init_540(){
}

function $get_18(){
  return new IUserInfo_Impl_0;
}

function IocContainer_main_largeDisplayMouse$9_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_540();
}

defineSeed(644, 1, {}, IocContainer_main_largeDisplayMouse$9_0);
_.get_3 = function get_25(){
  return $get_18();
}
;
function $$init_541(){
}

function $geteu_cloudopting_ui_ToscaUI_client_controller_MenuController_MenuView(this$static, scope_0, subscope){
  var result;
  result = dynamicCast($_getScope(this$static, scope_0).getValue_0(new IocContainer_menu_largeDisplayMouse$1_0(this$static), 'eu.cloudopting.ui.ToscaUI.client.controller.MenuController.MenuView', subscope, new IocContainer_menu_largeDisplayMouse$2_0(this$static)), Q$MenuController$MenuView);
  jsNotEquals(scope_0, ($clinit_IoCResource$Scope() , SINGLETON)) && jsEquals(result.getBoundCruxViewId(), null) && result.bindCruxView($getBoundCruxViewId(this$static));
  return result;
}

function IocContainer_menu_largeDisplayMouse_0(view){
  $clinit_IocContainer();
  IocContainer_0.call(this, view);
  $$init_541();
}

defineSeed(645, 624, {}, IocContainer_menu_largeDisplayMouse_0);
function $$init_542(){
}

function $get_19(){
  return new MenuController_MenuView_Impl_0;
}

function IocContainer_menu_largeDisplayMouse$1_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_542();
}

defineSeed(646, 1, {}, IocContainer_menu_largeDisplayMouse$1_0);
_.get_3 = function get_26(){
  return $get_19();
}
;
function $$init_543(){
}

function $onCreate_7(){
}

function IocContainer_menu_largeDisplayMouse$2_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_543();
}

defineSeed(647, 1, {}, IocContainer_menu_largeDisplayMouse$2_0);
_.onCreate = function onCreate_7(newObject){
  $onCreate_7(dynamicCast(newObject, Q$MenuController$MenuView));
}
;
function $$init_544(){
}

function IocContainer_org_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposal_largeDisplayMouse_0(view){
  $clinit_IocContainer();
  IocContainer_0.call(this, view);
  $$init_544();
}

defineSeed(648, 624, {}, IocContainer_org_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposal_largeDisplayMouse_0);
function $$init_545(){
}

function IocContainer_org_cruxframework_crux_widgets_client_storyboard_Storyboard_largeDisplayMouse_0(view){
  $clinit_IocContainer();
  IocContainer_0.call(this, view);
  $$init_545();
}

defineSeed(649, 624, {}, IocContainer_org_cruxframework_crux_widgets_client_storyboard_Storyboard_largeDisplayMouse_0);
function $$init_546(){
}

function $geteu_cloudopting_ui_ToscaUI_client_controller_PublishServiceController_PublishServiceView(this$static, scope_0, subscope){
  var result;
  result = dynamicCast($_getScope(this$static, scope_0).getValue_0(new IocContainer_publishService_largeDisplayMouse$1_0(this$static), 'eu.cloudopting.ui.ToscaUI.client.controller.PublishServiceController.PublishServiceView', subscope, new IocContainer_publishService_largeDisplayMouse$2_0(this$static)), Q$PublishServiceController$PublishServiceView);
  jsNotEquals(scope_0, ($clinit_IoCResource$Scope() , SINGLETON)) && jsEquals(result.getBoundCruxViewId(), null) && result.bindCruxView($getBoundCruxViewId(this$static));
  return result;
}

function IocContainer_publishService_largeDisplayMouse_0(view){
  $clinit_IocContainer();
  IocContainer_0.call(this, view);
  $$init_546();
}

defineSeed(650, 624, {}, IocContainer_publishService_largeDisplayMouse_0);
function $$init_547(){
}

function $get_20(){
  return new PublishServiceController_PublishServiceView_Impl_0;
}

function IocContainer_publishService_largeDisplayMouse$1_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_547();
}

defineSeed(651, 1, {}, IocContainer_publishService_largeDisplayMouse$1_0);
_.get_3 = function get_27(){
  return $get_20();
}
;
function $$init_548(){
}

function $onCreate_8(){
}

function IocContainer_publishService_largeDisplayMouse$2_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_548();
}

defineSeed(652, 1, {}, IocContainer_publishService_largeDisplayMouse$2_0);
_.onCreate = function onCreate_8(newObject){
  $onCreate_8(dynamicCast(newObject, Q$PublishServiceController$PublishServiceView));
}
;
function $$init_549(){
}

function $geteu_cloudopting_ui_ToscaUI_client_controller_ServiceCatalogListController_ServiceCatalogList(this$static, scope_0, subscope){
  var result;
  result = dynamicCast($_getScope(this$static, scope_0).getValue_0(new IocContainer_serviceCatalogList_largeDisplayMouse$1_0(this$static), 'eu.cloudopting.ui.ToscaUI.client.controller.ServiceCatalogListController.ServiceCatalogList', subscope, new IocContainer_serviceCatalogList_largeDisplayMouse$2_0(this$static)), Q$ServiceCatalogListController$ServiceCatalogList);
  jsNotEquals(scope_0, ($clinit_IoCResource$Scope() , SINGLETON)) && jsEquals(result.getBoundCruxViewId(), null) && result.bindCruxView($getBoundCruxViewId(this$static));
  return result;
}

function IocContainer_serviceCatalogList_largeDisplayMouse_0(view){
  $clinit_IocContainer();
  IocContainer_0.call(this, view);
  $$init_549();
}

defineSeed(653, 624, {}, IocContainer_serviceCatalogList_largeDisplayMouse_0);
function $$init_550(){
}

function $get_21(){
  return new ServiceCatalogListController_ServiceCatalogList_Impl_0;
}

function IocContainer_serviceCatalogList_largeDisplayMouse$1_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_550();
}

defineSeed(654, 1, {}, IocContainer_serviceCatalogList_largeDisplayMouse$1_0);
_.get_3 = function get_28(){
  return $get_21();
}
;
function $$init_551(){
}

function $onCreate_9(){
}

function IocContainer_serviceCatalogList_largeDisplayMouse$2_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_551();
}

defineSeed(655, 1, {}, IocContainer_serviceCatalogList_largeDisplayMouse$2_0);
_.onCreate = function onCreate_9(newObject){
  $onCreate_9(dynamicCast(newObject, Q$ServiceCatalogListController$ServiceCatalogList));
}
;
function $$init_552(){
}

function $geteu_cloudopting_ui_ToscaUI_client_controller_SubscribeServiceTaylorFormController_SubscribeServiceTaylorFormView(this$static, scope_0, subscope){
  var result;
  result = dynamicCast($_getScope(this$static, scope_0).getValue_0(new IocContainer_subscribeServiceTaylorForm_largeDisplayMouse$1_0(this$static), 'eu.cloudopting.ui.ToscaUI.client.controller.SubscribeServiceTaylorFormController.SubscribeServiceTaylorFormView', subscope, new IocContainer_subscribeServiceTaylorForm_largeDisplayMouse$2_0(this$static)), Q$SubscribeServiceTaylorFormController$SubscribeServiceTaylorFormView);
  jsNotEquals(scope_0, ($clinit_IoCResource$Scope() , SINGLETON)) && jsEquals(result.getBoundCruxViewId(), null) && result.bindCruxView($getBoundCruxViewId(this$static));
  return result;
}

function IocContainer_subscribeServiceTaylorForm_largeDisplayMouse_0(view){
  $clinit_IocContainer();
  IocContainer_0.call(this, view);
  $$init_552();
}

defineSeed(656, 624, {}, IocContainer_subscribeServiceTaylorForm_largeDisplayMouse_0);
function $$init_553(){
}

function $get_22(){
  return new SubscribeServiceTaylorFormController_SubscribeServiceTaylorFormView_Impl_0;
}

function IocContainer_subscribeServiceTaylorForm_largeDisplayMouse$1_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_553();
}

defineSeed(657, 1, {}, IocContainer_subscribeServiceTaylorForm_largeDisplayMouse$1_0);
_.get_3 = function get_29(){
  return $get_22();
}
;
function $$init_554(){
}

function $onCreate_10(){
}

function IocContainer_subscribeServiceTaylorForm_largeDisplayMouse$2_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_554();
}

defineSeed(658, 1, {}, IocContainer_subscribeServiceTaylorForm_largeDisplayMouse$2_0);
_.onCreate = function onCreate_10(newObject){
  $onCreate_10(dynamicCast(newObject, Q$SubscribeServiceTaylorFormController$SubscribeServiceTaylorFormView));
}
;
function $$init_555(){
}

function IocContainer_toscalist_largeDisplayMouse_0(view){
  $clinit_IocContainer();
  IocContainer_0.call(this, view);
  $$init_555();
}

defineSeed(659, 624, {}, IocContainer_toscalist_largeDisplayMouse_0);
function $$init_556(){
}

function IocContainer_toscaui_index_html_largeDisplayMouse_0(view){
  $clinit_IocContainer();
  IocContainer_0.call(this, view);
  $$init_556();
}

defineSeed(660, 624, {}, IocContainer_toscaui_index_html_largeDisplayMouse_0);
function $$init_557(){
}

function IocLocalScope_0(){
  Object_1.call(this);
  $$init_557();
}

defineSeed(661, 1, {}, IocLocalScope_0);
_.getValue_0 = function getValue_5(provider, className, subscope, callback){
  var t;
  t = provider.get_3();
  callback.onCreate(t);
  return t;
}
;
function $$init_558(this$static){
  this$static.scopes = new FastMap_0;
}

function IocPersistentScope_0(){
  Object_1.call(this);
  $$init_558(this);
}

defineSeed(662, 1, {}, IocPersistentScope_0);
_.getValue_0 = function getValue_6(provider, className, subscope, callback){
  var result, values;
  isEmpty_5(subscope) && (subscope = '__default__');
  values = dynamicCast($get_9(this.scopes, subscope), Q$FastMap);
  if (isNull_1(values)) {
    values = new FastMap_0;
    $put_1(this.scopes, subscope, values);
  }
  result = $get_9(values, className);
  if (jsEquals(result, null)) {
    result = provider.get_3();
    $put_1(values, className, result);
    callback.onCreate(result);
  }
  return result;
}
;
function $$init_559(){
}

function RestError_0(status_0, message){
  Exception_1.call(this, message);
  $$init_559();
  this , status_0;
}

defineSeed(663, 86, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), RestError_0);
function $clinit_DeviceAdaptive$Device(){
  $clinit_DeviceAdaptive$Device = nullMethod;
  largeDisplayMouse = new DeviceAdaptive$Device_0('largeDisplayMouse', 0, ($clinit_DeviceAdaptive$Input() , mouse), ($clinit_DeviceAdaptive$Size() , large));
  largeDisplayTouch = new DeviceAdaptive$Device_0('largeDisplayTouch', 1, ($clinit_DeviceAdaptive$Input() , touch), ($clinit_DeviceAdaptive$Size() , large));
  largeDisplayArrows = new DeviceAdaptive$Device_0('largeDisplayArrows', 2, ($clinit_DeviceAdaptive$Input() , arrows), ($clinit_DeviceAdaptive$Size() , large));
  smallDisplayTouch = new DeviceAdaptive$Device_0('smallDisplayTouch', 3, ($clinit_DeviceAdaptive$Input() , touch), ($clinit_DeviceAdaptive$Size() , small_0));
  smallDisplayArrows = new DeviceAdaptive$Device_0('smallDisplayArrows', 4, ($clinit_DeviceAdaptive$Input() , arrows), ($clinit_DeviceAdaptive$Size() , small_0));
  all = new DeviceAdaptive$Device_0('all', 5, null, null);
  $VALUES_11 = initValues(_3Lorg_cruxframework_crux_core_client_screen_DeviceAdaptive$Device_2_classLit, makeCastMap([Q$Serializable]), Q$DeviceAdaptive$Device, [largeDisplayMouse, largeDisplayTouch, largeDisplayArrows, smallDisplayTouch, smallDisplayArrows, all]);
}

function $$init_560(){
}

function DeviceAdaptive$Device_0(enum$name, enum$ordinal, input_0, size_0){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_560();
  this , input_0;
  this , size_0;
}

function valueOf_19(name_0){
  $clinit_DeviceAdaptive$Device();
  return valueOf(($clinit_DeviceAdaptive$Device$Map() , $MAP_11), name_0);
}

function values_12(){
  $clinit_DeviceAdaptive$Device();
  return $VALUES_11;
}

defineSeed(664, 134, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$DeviceAdaptive$Device]), DeviceAdaptive$Device_0);
var $VALUES_11, all, largeDisplayArrows, largeDisplayMouse, largeDisplayTouch, smallDisplayArrows, smallDisplayTouch;
function $clinit_DeviceAdaptive$Device$Map(){
  $clinit_DeviceAdaptive$Device$Map = nullMethod;
  $MAP_11 = createValueOfMap(($clinit_DeviceAdaptive$Device() , $VALUES_11));
}

var $MAP_11;
function $clinit_DeviceAdaptive$Input(){
  $clinit_DeviceAdaptive$Input = nullMethod;
  touch = new DeviceAdaptive$Input_0('touch', 0);
  mouse = new DeviceAdaptive$Input_0('mouse', 1);
  arrows = new DeviceAdaptive$Input_0('arrows', 2);
  $VALUES_12 = initValues(_3Lorg_cruxframework_crux_core_client_screen_DeviceAdaptive$Input_2_classLit, makeCastMap([Q$Serializable]), Q$DeviceAdaptive$Input, [touch, mouse, arrows]);
}

function $$init_561(){
}

function DeviceAdaptive$Input_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_561();
}

function valueOf_20(name_0){
  $clinit_DeviceAdaptive$Input();
  return valueOf(($clinit_DeviceAdaptive$Input$Map() , $MAP_12), name_0);
}

function values_13(){
  $clinit_DeviceAdaptive$Input();
  return $VALUES_12;
}

defineSeed(666, 134, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$DeviceAdaptive$Input]), DeviceAdaptive$Input_0);
var $VALUES_12, arrows, mouse, touch;
function $clinit_DeviceAdaptive$Input$Map(){
  $clinit_DeviceAdaptive$Input$Map = nullMethod;
  $MAP_12 = createValueOfMap(($clinit_DeviceAdaptive$Input() , $VALUES_12));
}

var $MAP_12;
function $clinit_DeviceAdaptive$Size(){
  $clinit_DeviceAdaptive$Size = nullMethod;
  small_0 = new DeviceAdaptive$Size_0('small', 0);
  large = new DeviceAdaptive$Size_0('large', 1);
  $VALUES_13 = initValues(_3Lorg_cruxframework_crux_core_client_screen_DeviceAdaptive$Size_2_classLit, makeCastMap([Q$Serializable]), Q$DeviceAdaptive$Size, [small_0, large]);
}

function $$init_562(){
}

function DeviceAdaptive$Size_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_562();
}

function valueOf_21(name_0){
  $clinit_DeviceAdaptive$Size();
  return valueOf(($clinit_DeviceAdaptive$Size$Map() , $MAP_13), name_0);
}

function values_14(){
  $clinit_DeviceAdaptive$Size();
  return $VALUES_13;
}

defineSeed(668, 134, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$DeviceAdaptive$Size]), DeviceAdaptive$Size_0);
var $VALUES_13, large, small_0;
function $clinit_DeviceAdaptive$Size$Map(){
  $clinit_DeviceAdaptive$Size$Map = nullMethod;
  $MAP_13 = createValueOfMap(($clinit_DeviceAdaptive$Size() , $VALUES_13));
}

var $MAP_13;
function configureViewport(content_0){
  isEmpty_5(content_0) || createViewport(content_0);
}

function createViewport(content_0){
  createViewport_0(content_0, getCurrentWindow());
}

function createViewport_0(content_0, wnd){
  var document_0, parentWindow, viewport;
  document_0 = getWindowDocument(wnd);
  viewport = $createMetaElement(document_0);
  $setContent(viewport, content_0);
  $setName(viewport, 'viewport');
  $appendChild($getItem($getElementsByTagName(document_0, 'head'), 0), viewport);
  parentWindow = getParentWindow(wnd);
  isNotNull(parentWindow) && isCruxWindow(parentWindow) && createViewport_0(content_0, parentWindow);
}

function getCurrentWindow(){
  return $wnd;
}

function getParentWindow(wnd){
  return wnd.parent !== wnd?wnd.parent:null;
}

function getWindowDocument(wnd){
  return wnd.document;
}

function isCruxWindow(wnd){
  if (wnd && wnd.__Crux_Frame) {
    return true;
  }
  return false;
}

function attachToDom(panel){
  var origParent, origSibling, panelInfo;
  if (isNull_1(hiddenDiv_0)) {
    hiddenDiv_0 = $createDivElement(get_2());
    setVisible(hiddenDiv_0, false);
    $appendChild(getBodyElement(), hiddenDiv_0);
  }
  origParent = $getParentElement($getElement(panel));
  origSibling = $getNextSiblingElement($getElement(panel));
  panelInfo = new HTMLPanelHelper$HTMLPanelInfo_0(origParent, origSibling);
  $appendChild(hiddenDiv_0, $getElement(panel));
  return panelInfo;
}

function restorePanelParent(panel, panelInfo){
  isNotNull(panelInfo.origParent)?$insertBefore(panelInfo.origParent, $getElement(panel), panelInfo.origSibling):$removeChild(hiddenDiv_0, $getElement(panel));
}

var hiddenDiv_0;
function $$init_563(){
}

function HTMLPanelHelper$HTMLPanelInfo_0(origParent, origSibling){
  Object_1.call(this);
  $$init_563();
  this.origParent = origParent;
  this.origSibling = origSibling;
}

defineSeed(672, 1, {}, HTMLPanelHelper$HTMLPanelInfo_0);
function $$init_564(){
}

function InterfaceConfigException_0(message){
  RuntimeException_1.call(this, message);
  $$init_564();
}

defineSeed(673, 85, makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable, Q$InterfaceConfigException]), InterfaceConfigException_0);
function $clinit_LazyPanelWrappingType(){
  $clinit_LazyPanelWrappingType = nullMethod;
  wrapChildren = new LazyPanelWrappingType_0('wrapChildren', 0);
  wrapWholeWidget = new LazyPanelWrappingType_0('wrapWholeWidget', 1);
  $VALUES_14 = initValues(_3Lorg_cruxframework_crux_core_client_screen_LazyPanelWrappingType_2_classLit, makeCastMap([Q$Serializable]), Q$LazyPanelWrappingType, [wrapChildren, wrapWholeWidget]);
}

function $$init_565(){
}

function LazyPanelWrappingType_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_565();
}

function valueOf_22(name_0){
  $clinit_LazyPanelWrappingType();
  return valueOf(($clinit_LazyPanelWrappingType$Map() , $MAP_14), name_0);
}

function values_15(){
  $clinit_LazyPanelWrappingType();
  return $VALUES_14;
}

defineSeed(674, 134, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$LazyPanelWrappingType]), LazyPanelWrappingType_0);
var $VALUES_14, wrapChildren, wrapWholeWidget;
function $clinit_LazyPanelWrappingType$Map(){
  $clinit_LazyPanelWrappingType$Map = nullMethod;
  $MAP_14 = createValueOfMap(($clinit_LazyPanelWrappingType() , $VALUES_14));
}

var $MAP_14;
function $$init_566(){
}

function $getContainerPanel_0(this$static){
  return this$static.containerPanel;
}

function $getView_0(this$static){
  return this$static.rootView;
}

function RootViewContainer_0(){
  $clinit_ViewContainer();
  SingleViewContainer_0.call(this, null, true);
  $$init_566();
  this.containerPanel = get_9();
  $bindToDOM(this);
}

defineSeed(676, 594, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$ViewContainer]), RootViewContainer_0);
_.doAdd = function doAdd_0(view, lazy, parameter){
  var added;
  if (!$isEmpty_1(this.views)) {
    debugger;
    throw makeAssertionError_Object('RootViewContainer can not contain more then one view');
  }
  this.rootView = view;
  added = $doAdd_0(this, view, lazy, parameter);
  added || (this.rootView = null);
  return added;
}
;
_.doRemove_0 = function doRemove_2(view, skipEvents){
  var removed;
  removed = $doRemove_0(this, view, skipEvents);
  removed && (this.rootView = null);
  return removed;
}
;
_.getContainerPanel = function getContainerPanel_0(view){
  return $getContainerPanel_0(this);
}
;
_.handleViewTitle = function handleViewTitle_0(title_0, containerPanel, viewId){
  setTitle(title_0);
}
;
function $clinit_Screen(){
  $clinit_Screen = nullMethod;
  '__CRUX_VIEW_TEST_PAGE__';
  getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_Screen_2_classLit));
}

function $$init_567(this$static){
  this$static.blockingDivs = new FastList_0;
  this$static , new URLRewriter_0;
}

function $addWindowHistoryChangedHandler(this$static, handler){
  return $addWindowHistoryChangedHandler_0($getView_1(this$static), handler);
}

function $createRootView(this$static, id_0){
  var viewId;
  viewId = id_0;
  get_1().scheduleDeferred(new Screen$1_0(this$static, viewId));
}

function $getView_1(this$static){
  return $getView_0(this$static.rootViewContainer);
}

function $getWidget_1(this$static, id_0){
  return $getWidget_2($getView_1(this$static), id_0);
}

function $hideBlockDiv(this$static){
  var blockingDiv, body_0, last;
  if ($size_5(this$static.blockingDivs) > 0) {
    last = $size_5(this$static.blockingDivs) - 1;
    blockingDiv = dynamicCastJso($get_8(this$static.blockingDivs, last));
    $remove_8(this$static.blockingDivs, last);
    body_0 = getBodyElement();
    $removeChild(body_0, blockingDiv);
    $setProperty_0($getStyle(body_0), 'cursor', '');
  }
  if ($size_5(this$static.blockingDivs) > 0) {
    blockingDiv = dynamicCastJso($get_8(this$static.blockingDivs, $size_5(this$static.blockingDivs) - 1));
    $setProperty_0($getStyle(blockingDiv), 'display', 'block');
  }
}

function $showBlockDiv(this$static, blockingDivStyleName){
  var blockingDiv, body_0, screenBlocker;
  if ($size_5(this$static.blockingDivs) > 0) {
    blockingDiv = dynamicCastJso($get_8(this$static.blockingDivs, $size_5(this$static.blockingDivs) - 1));
    $setProperty_0($getStyle(blockingDiv), 'display', 'none');
  }
  body_0 = getBodyElement();
  screenBlocker = new ScreenBlocker_0(blockingDivStyleName);
  $add_9(this$static.blockingDivs, $getElement(screenBlocker));
  $appendChild(body_0, $getElement(screenBlocker));
}

function Screen_1(id_0){
  $clinit_Screen();
  Object_1.call(this);
  $$init_567(this);
  this , id_0;
  this.rootViewContainer = new RootViewContainer_0;
  $createRootView(this, id_0);
}

function addHistoryChangedHandler(handler){
  $clinit_Screen();
  return $addWindowHistoryChangedHandler(get_30(), handler);
}

function blockToUser(){
  $clinit_Screen();
  $showBlockDiv(get_30(), 'crux-DefaultScreenBlocker');
}

function get_30(){
  return $getScreen(getInstance_2());
}

function get_31(id_0){
  $clinit_Screen();
  return $getWidget_1(get_30(), id_0);
}

function getCurrentDevice(){
  $clinit_Screen();
  return $getCurrentDevice(getInstance_2());
}

function getLocale(){
  $clinit_Screen();
  var locale;
  locale = $getLocaleName(getCurrentLocale());
  $equals_2('', locale) && (locale = null);
  return locale;
}

function isIos(){
  $clinit_Screen();
  var userAgent;
  userAgent = $toLowerCase(getUserAgent());
  return $indexOf_3(userAgent, 'iphone') > 0 || $indexOf_3(userAgent, 'ipod') > 0 || $indexOf_3(userAgent, 'ipad') > 0;
}

function unblockToUser(){
  $clinit_Screen();
  $hideBlockDiv(get_30());
}

defineSeed(677, 1, {}, Screen_1);
_.rootViewContainer = null;
function $$init_568(){
}

function Screen$1_0(this$0, val$viewId){
  this.this$0 = this$0;
  this.val$viewId = val$viewId;
  Object_1.call(this);
  $$init_568();
}

defineSeed(678, 1, {}, Screen$1_0);
_.execute_1 = function execute_13(){
  $loadView_1(this.this$0.rootViewContainer, this.val$viewId, true);
}
;
function $clinit_ScreenFactory(){
  $clinit_ScreenFactory = nullMethod;
  getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_ScreenFactory_2_classLit));
}

function $$init_569(this$static){
  this$static , null;
}

function $create(this$static){
  this$static.screen_0 = new Screen_1($getCurrentScreenName());
}

function $getCurrentDevice(){
  return getViewFactory().getCurrentDevice();
}

function $getCurrentScreenName(){
  return $wnd.__CruxScreen_;
}

function $getScreen(this$static){
  isNull_1(this$static.screen_0) && $create(this$static);
  return this$static.screen_0;
}

function ScreenFactory_0(){
  Object_1.call(this);
  $$init_569(this);
}

function getInstance_2(){
  $clinit_ScreenFactory();
  isNull_1(instance_4) && (instance_4 = new ScreenFactory_0);
  return instance_4;
}

defineSeed(679, 1, {}, ScreenFactory_0);
_.screen_0 = null;
var instance_4 = null;
function $$init_570(){
}

function URLRewriter_0(){
  Object_1.call(this);
  $$init_570();
}

defineSeed(680, 1, {}, URLRewriter_0);
function $clinit_ChangeViewEvent(){
  $clinit_ChangeViewEvent = nullMethod;
  TYPE_23 = new GwtEvent$Type_0;
}

function $$init_571(){
}

function $dispatch_23(){
  null.nullMethod();
}

function ChangeViewEvent_0(previous, next){
  GwtEvent_0.call(this);
  $$init_571();
  this , previous;
  this , next;
}

function fire_8(source, previous, next){
  $clinit_ChangeViewEvent();
  var event_0;
  if (isNotNull(TYPE_23)) {
    event_0 = new ChangeViewEvent_0(previous, next);
    source.fireEvent(event_0);
  }
}

defineSeed(681, 183, {}, ChangeViewEvent_0);
_.dispatch_0 = function dispatch_24(handler){
  $dispatch_23(dynamicCast(handler, Q$ChangeViewHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_25(){
  return TYPE_23;
}
;
var TYPE_23;
function $clinit_View(){
  $clinit_View = nullMethod;
  logger_4 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_View_2_classLit));
  loadedViews = new FastMap_0;
  resources_0 = new FastMap_0;
}

function $$init_572(this$static){
  this$static.widgets = new FastMap_0;
  this$static.resizeHandlers = new FastList_0;
  this$static.windowCloseHandlers = new FastList_0;
  this$static.windowClosingHandlers = new FastList_0;
  this$static.attachHandlers = new FastList_0;
  this$static.detachHandlers = new FastList_0;
  this$static.historyHandlers = new FastList_0;
  this$static.orientationHandlers = new FastList_0;
  this$static.loadHandlers = new FastList_0;
  this$static.unloadHandlers = new FastList_0;
}

function $addViewLoadHandler(this$static, handler){
  $add_9(this$static.loadHandlers, handler);
  return new View$7_0(this$static, handler);
}

function $addWidget(this$static, id_0, widget){
  $put_1(this$static.widgets, id_0, widget.asWidget());
}

function $addWidget_0(this$static, id_0, widget){
  $put_1(this$static.widgets, id_0, widget);
}

function $addWindowHistoryChangedHandler_0(this$static, handler){
  $add_9(this$static.historyHandlers, handler);
  $isActive(this$static) && ensureViewContainerHistoryHandler($getContainer(this$static));
  return new View$9_0(this$static, handler);
}

function $cleanLazyDependentWidgets(this$static, widgetId){
  var dependentWidgets, i;
  loggingIsEnabled() && $log_4(logger_4, ($clinit_Level() , FINE), 'Cleaning lazy dependencies of lazyPanel [' + widgetId + ']...');
  dependentWidgets = $getDependentWidgets(this$static, widgetId);
  for (i = 0; i < $size_5(dependentWidgets); i++) {
    $remove_10(this$static.lazyWidgets, dynamicCast($get_8(dependentWidgets, i), Q$String));
  }
  loggingIsEnabled() && $log_4(logger_4, ($clinit_Level() , FINE), 'Lazy dependencies of lazyPanel [' + widgetId + '] removed.');
}

function $clearViewObjects(this$static){
  this$static.lazyWidgets = null;
  this$static.widgets = null;
  this$static.windowClosingHandlers = null;
  this$static.windowCloseHandlers = null;
  this$static.resizeHandlers = null;
  this$static.attachHandlers = null;
  this$static.detachHandlers = null;
  this$static.historyHandlers = null;
  this$static.orientationHandlers = null;
  this$static.loadHandlers = null;
  this$static.unloadHandlers = null;
}

function $fireHistoryChangeEvent(this$static, event_0){
  var handler, i;
  for (i = 0; i < $size_5(this$static.historyHandlers); i++) {
    handler = dynamicCast($get_8(this$static.historyHandlers, i), Q$ValueChangeHandler);
    handler.onValueChange(event_0);
  }
}

function $fireLoadEvent(this$static, paramenter){
  var event_0, handler, i;
  event_0 = new ViewLoadEvent_0(this$static, paramenter);
  for (i = 0; i < $size_5(this$static.loadHandlers); i++) {
    handler = dynamicCast($get_8(this$static.loadHandlers, i), Q$ViewLoadHandler);
    handler.onLoad_0(event_0);
  }
}

function $fireOrientationEvent(this$static){
  var handler, i;
  for (i = 0; i < $size_5(this$static.orientationHandlers); i++) {
    handler = dynamicCast($get_8(this$static.orientationHandlers, i), Q$OrientationChangeHandler);
    handler.onOrientationChange();
  }
}

function $fireResizeEvent(this$static, event_0){
  var handler, i;
  for (i = 0; i < $size_5(this$static.resizeHandlers); i++) {
    handler = dynamicCast($get_8(this$static.resizeHandlers, i), Q$ResizeHandler);
    handler.onResize(event_0);
  }
}

function $fireUnloadEvent(this$static){
  var canceled, event_0, i;
  canceled = false;
  event_0 = new ViewUnloadEvent_0(this$static);
  for (i = 0; i < $size_5(this$static.unloadHandlers); i++) {
    dynamicCast($get_8(this$static.unloadHandlers, i), Q$ViewUnloadHandler);
    null.nullMethod();
    $isCanceled_2(event_0) && (canceled = true);
  }
  return !canceled;
}

function $fireWindowCloseEvent(this$static, event_0){
  var handler, i;
  for (i = 0; i < $size_5(this$static.windowCloseHandlers); i++) {
    handler = dynamicCast($get_8(this$static.windowCloseHandlers, i), Q$CloseHandler);
    handler.onClose(event_0);
  }
}

function $fireWindowClosingEvent(this$static, event_0){
  var handler, i;
  $fireUnloadEvent(this$static);
  for (i = 0; i < $size_5(this$static.windowClosingHandlers); i++) {
    handler = dynamicCast($get_8(this$static.windowClosingHandlers, i), Q$Window$ClosingHandler);
    handler.onWindowClosing(event_0);
  }
}

function $getContainer(this$static){
  return this$static.viewContainer;
}

function $getDependentWidgets(this$static, widgetId){
  var dependentWidgets, i, key, keys_0, size_0;
  dependentWidgets = new FastList_0;
  keys_0 = $keys(this$static.lazyWidgets);
  size_0 = $size_4(keys_0);
  for (i = 0; i < size_0; i++) {
    key = dynamicCast($get_7(keys_0, i), Q$String);
    $equals_2(dynamicCast($get_10(this$static.lazyWidgets, key), Q$String), widgetId) && $add_9(dependentWidgets, key);
  }
  return dependentWidgets;
}

function $getId_0(this$static){
  return this$static.id_0;
}

function $getPrefix(this$static){
  return this$static.prefix;
}

function $getRuntimeDependencyWidget(this$static, id_0, lazyPanelId){
  var widget;
  widget = null;
  if (isWholeWidgetLazyWrapper(lazyPanelId)) {
    lazyPanelId = getWrappedWidgetIdFromLazyPanel(lazyPanelId);
    lazyPanelId = getLazyPanelId(lazyPanelId, ($clinit_LazyPanelWrappingType() , wrapChildren));
    if ($containsKey_1(this$static.widgets, lazyPanelId)) {
      $put_2(this$static.lazyWidgets, id_0, lazyPanelId);
      widget = $getWidget_2(this$static, id_0);
    }
     else {
      widget = $getRuntimeDependencyWidgetFromWholeWidget(this$static, id_0);
    }
  }
   else {
    widget = $getRuntimeDependencyWidgetFromWholeWidget(this$static, id_0);
  }
  return widget;
}

function $getRuntimeDependencyWidgetFromWholeWidget(this$static, id_0){
  var lazyPanelId, widget;
  widget = null;
  lazyPanelId = getLazyPanelId(id_0, ($clinit_LazyPanelWrappingType() , wrapWholeWidget));
  if ($containsKey_1(this$static.widgets, lazyPanelId)) {
    $put_2(this$static.lazyWidgets, id_0, lazyPanelId);
    widget = $getWidget_2(this$static, id_0);
  }
  return widget;
}

function $getTitle(this$static){
  return this$static.title_0;
}

function $getWidget_2(this$static, id_0){
  var lazyPanelId, widget;
  if (!this$static.loaded_0) {
    debugger;
    throw makeAssertionError_Object(getMessages().viewNotInitialized($getId_0(this$static), id_0));
  }
  widget = dynamicCast($get_9(this$static.widgets, id_0), Q$Widget);
  if (isNull_1(widget)) {
    lazyPanelId = dynamicCast($get_10(this$static.lazyWidgets, id_0), Q$String);
    if (jsNotEquals(lazyPanelId, null)) {
      loggingIsEnabled() && $log_4(logger_4, ($clinit_Level() , FINE), 'Found a lazy dependency. Widget[' + id_0 + '] depends on [' + lazyPanelId + '].');
      if ($initializeLazyDependentWidget(this$static, lazyPanelId)) {
        widget = dynamicCast($get_9(this$static.widgets, id_0), Q$Widget);
        isNull_1(widget) && (widget = $getRuntimeDependencyWidget(this$static, id_0, lazyPanelId));
      }
    }
  }
  return widget;
}

function $hasHistoryHandlers(this$static){
  return $size_5(this$static.historyHandlers) > 0;
}

function $hasOrientationChangeHandlers(this$static){
  return $size_5(this$static.orientationHandlers) > 0;
}

function $hasResizeHandlers(this$static){
  return $size_5(this$static.resizeHandlers) > 0;
}

function $hasWindowCloseHandlers(this$static){
  return $size_5(this$static.windowCloseHandlers) > 0;
}

function $hasWindowClosingHandlers(this$static){
  return $size_5(this$static.windowClosingHandlers) > 0;
}

function $initializeLazyDependentWidget(this$static, widgetId){
  var lazyPanel, ret;
  ret = false;
  loggingIsEnabled() && $log_4(logger_4, ($clinit_Level() , FINE), 'Initializing lazy dependents widgets of lazyPanel [' + widgetId + ']...');
  lazyPanel = dynamicCast($get_9(this$static.widgets, widgetId), Q$LazyPanel);
  isNull_1(lazyPanel) && (isNotNull($getWidget_2(this$static, getWrappedWidgetIdFromLazyPanel(widgetId))) && (lazyPanel = dynamicCast($get_9(this$static.widgets, widgetId), Q$LazyPanel)));
  if (isNotNull(lazyPanel)) {
    null.nullMethod();
    ret = true;
  }
   else {
    $cleanLazyDependentWidgets(this$static, widgetId);
  }
  loggingIsEnabled() && $log_4(logger_4, ($clinit_Level() , FINE), ' Lazy dependents widgets of lazyPanel [' + widgetId + '] are now loaded.');
  return ret;
}

function $isActive(this$static){
  return this$static.active;
}

function $isLoaded(this$static){
  return this$static.loaded_0;
}

function $load(this$static, paramenter){
  if (!this$static.loaded_0) {
    $prepareViewObjects(this$static);
    this$static.registerLoadedView();
    this$static.createWidgets();
    this$static.loaded_0 = true;
    $fireLoadEvent(this$static, paramenter);
  }
}

function $prepareViewObjects(this$static){
  this$static.lazyWidgets = this$static.initializeLazyDependencies();
  this$static.widgets = new FastMap_0;
  this$static.resizeHandlers = new FastList_0;
  this$static.windowCloseHandlers = new FastList_0;
  this$static.windowClosingHandlers = new FastList_0;
  this$static.attachHandlers = new FastList_0;
  this$static.detachHandlers = new FastList_0;
  this$static.historyHandlers = new FastList_0;
  this$static.orientationHandlers = new FastList_0;
  this$static.loadHandlers = new FastList_0;
  this$static.unloadHandlers = new FastList_0;
}

function $removeFromContainer(this$static){
  if (isNotNull(this$static.viewContainer)) {
    return $remove_11(this$static.viewContainer, this$static);
  }
  return false;
}

function $setActive(this$static, parameter){
  var event_0;
  if (!this$static.active) {
    this$static.active = true;
    event_0 = new ViewActivateEvent_0(this$static, $getId_0(this$static), parameter);
    get_1().scheduleDeferred(new View$10_0(this$static, event_0));
  }
}

function $setContainer(this$static, viewContainer){
  this$static.viewContainer = viewContainer;
}

function $setDeactivated(this$static, skipEvent){
  var event_0, i;
  if (this$static.active) {
    if (skipEvent) {
      this$static.active = false;
    }
     else {
      event_0 = new ViewDeactivateEvent_0(this$static, $getId_0(this$static));
      for (i = 0; i < $size_5(this$static.detachHandlers); i++) {
        dynamicCast($get_8(this$static.detachHandlers, i), Q$ViewDeactivateHandler);
        null.nullMethod();
      }
      this$static.active = $isCanceled_1(event_0);
      return !this$static.active;
    }
  }
  return true;
}

function $setHeight_2(this$static, height){
  this$static.height_0 = height;
  $isActive(this$static) && !isEmpty_5(height) && this$static.updateViewHeight(height);
}

function $setTitle(this$static, title_0){
  this$static.title_0 = title_0;
}

function $unload(this$static){
  var unloaded;
  unloaded = true;
  if (this$static.loaded_0) {
    unloaded = $fireUnloadEvent(this$static);
    if (unloaded) {
      this$static.unregisterLoadedView();
      $clearViewObjects(this$static);
      this$static.loaded_0 = false;
    }
  }
  return unloaded;
}

function View_0(id_0){
  $clinit_View();
  Object_1.call(this);
  $$init_572(this);
  this.id_0 = id_0;
  this.prefix = toString_24(prefixCounter++);
}

function addResource(id_0, resource){
  $clinit_View();
  $put_1(resources_0, id_0, resource);
}

function containsResource(id_0){
  $clinit_View();
  return $containsKey_1(resources_0, id_0);
}

function getView(id_0){
  $clinit_View();
  return dynamicCast($get_9(loadedViews, id_0), Q$View);
}

function isOrientationChangeSupported(){
  $clinit_View();
  return 'onorientationchange' in $wnd || ('orientationchange' in $wnd || ('ondeviceorientation' in $wnd || 'deviceorientation' in $wnd));
}

defineSeed(682, 1, makeCastMap([Q$View]));
_.getController = function getController_8(controller){
  return this.getRegisteredControllers().getController(controller);
}
;
_.registerLoadedView = function registerLoadedView(){
  $put_1(loadedViews, $getId_0(this), this);
}
;
_.unregisterLoadedView = function unregisterLoadedView(){
  $remove_9(loadedViews, $getId_0(this));
}
;
_.active = false;
_.lazyWidgets = null;
_.loaded_0 = false;
var loadedViews, logger_4, prefixCounter = 0, resources_0;
function $$init_573(this$static){
  this$static.handlers = this$static.this$0.attachHandlers;
}

function View$10_0(this$0, val$event){
  this.this$0 = this$0;
  this , val$event;
  Object_1.call(this);
  $$init_573(this);
}

defineSeed(683, 1, {}, View$10_0);
_.execute_1 = function execute_14(){
  var i;
  for (i = 0; i < $size_5(this.handlers); i++) {
    dynamicCast($get_8(this.handlers, i), Q$ViewActivateHandler);
    null.nullMethod();
  }
}
;
function $$init_574(){
}

function View$7_0(this$0, val$handler){
  this.this$0 = this$0;
  this.val$handler = val$handler;
  Object_1.call(this);
  $$init_574();
}

defineSeed(684, 1, {}, View$7_0);
_.removeHandler = function removeHandler_1(){
  var index_0;
  index_0 = $indexOf_6(this.this$0.loadHandlers, this.val$handler);
  index_0 >= 0 && $remove_8(this.this$0.loadHandlers, index_0);
}
;
function $$init_575(){
}

function View$9_0(this$0, val$handler){
  this.this$0 = this$0;
  this.val$handler = val$handler;
  Object_1.call(this);
  $$init_575();
}

defineSeed(685, 1, {}, View$9_0);
_.removeHandler = function removeHandler_2(){
  var index_0;
  index_0 = $indexOf_6(this.this$0.historyHandlers, this.val$handler);
  index_0 >= 0 && $remove_8(this.this$0.historyHandlers, index_0);
}
;
function $$init_576(){
}

function ViewActivateEvent_0(view, viewId, parameter){
  CruxEvent_0.call(this, view, viewId);
  $$init_576();
  this , parameter;
}

defineSeed(686, 615, {}, ViewActivateEvent_0);
function $$init_577(){
}

function ViewContainer$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_577();
}

defineSeed(687, 1, makeCastMap([Q$AttachEvent$Handler, Q$EventHandler]), ViewContainer$1_0);
_.onAttachOrDetach = function onAttachOrDetach(event_0){
  $isAttached(event_0)?$bindToDOM(this.this$0):$unbindToDOM(this.this$0);
}
;
function $$init_578(){
}

function ViewContainer$2_0(this$0, val$render, val$parameter, val$viewId){
  this.this$0 = this$0;
  this.val$render = val$render;
  this.val$parameter = val$parameter;
  this.val$viewId = val$viewId;
  Object_1.call(this);
  $$init_578();
}

defineSeed(688, 1, {}, ViewContainer$2_0);
_.onViewCreated = function onViewCreated(view){
  this.this$0.add_3(view, this.val$render, this.val$parameter) || getErrorHandler().handleError(getMessages().viewContainerErrorCreatingView(this.val$viewId));
}
;
_.val$render = false;
function $$init_579(){
}

function ViewContainer$3_0(this$0, val$parameter, val$viewId){
  this.this$0 = this$0;
  this.val$parameter = val$parameter;
  this.val$viewId = val$viewId;
  Object_1.call(this);
  $$init_579();
}

defineSeed(689, 1, {}, ViewContainer$3_0);
_.onViewCreated = function onViewCreated_0(view){
  $addView(this.this$0, view, false, this.val$parameter)?this.this$0.renderView(view, this.val$parameter):getErrorHandler().handleError(getMessages().viewContainerErrorCreatingView(this.val$viewId));
}
;
function $$init_580(){
}

function ViewContainer$4_0(this$0, val$view, val$parameter){
  this , this$0;
  this.val$view = val$view;
  this.val$parameter = val$parameter;
  Object_1.call(this);
  $$init_580();
}

defineSeed(690, 1, {}, ViewContainer$4_0);
_.onRendered = function onRendered(){
  $setActive(this.val$view, this.val$parameter);
}
;
function $$init_581(this$static){
}

function $isCanceled_1(this$static){
  return this$static.canceled;
}

function ViewDeactivateEvent_0(view, viewId){
  CruxEvent_0.call(this, view, viewId);
  $$init_581(this);
}

defineSeed(691, 615, {}, ViewDeactivateEvent_0);
_.canceled = false;
function $clinit_ViewFactory$CreateCallback(){
  $clinit_ViewFactory$CreateCallback = nullMethod;
  EMPTY_CALLBACK = new ViewFactory$CreateCallback$EmptyCallback_0;
}

var EMPTY_CALLBACK;
function $$init_582(){
}

function ViewFactory$CreateCallback$EmptyCallback_0(){
  Object_1.call(this);
  $$init_582();
}

defineSeed(692, 1, {}, ViewFactory$CreateCallback$EmptyCallback_0);
_.onViewCreated = function onViewCreated_1(view){
}
;
function $clinit_ViewFactoryUtils(){
  $clinit_ViewFactoryUtils = nullMethod;
  '_crux_';
  '_chld_';
  '_lazy_';
  6;
}

function getEnclosingPanelId(widgetId, view){
  $clinit_ViewFactoryUtils();
  return '_crux_' + $getPrefix(view) + widgetId;
}

function getLazyPanelId(wrappedWidgetId, wrappingType){
  $clinit_ViewFactoryUtils();
  return jsEquals(wrappingType, ($clinit_LazyPanelWrappingType() , wrapChildren))?'_chld_' + wrappedWidgetId:'_lazy_' + wrappedWidgetId;
}

function getWrappedWidgetIdFromLazyPanel(lazyPanelId){
  $clinit_ViewFactoryUtils();
  if (!(jsNotEquals(lazyPanelId, null) && $length_1(lazyPanelId) > 6)) {
    debugger;
    throw makeAssertionError();
  }
  return $substring(lazyPanelId, 6);
}

function isWholeWidgetLazyWrapper(wrappedWidgetId){
  $clinit_ViewFactoryUtils();
  if (jsEquals(wrappedWidgetId, null)) {
    debugger;
    throw makeAssertionError();
  }
  return $startsWith(wrappedWidgetId, '_lazy_');
}

function $$init_583(){
}

function ViewFactory_Impl_largeDisplayMouse_0(){
  Object_1.call(this);
  $$init_583();
}

defineSeed(694, 1, {}, ViewFactory_Impl_largeDisplayMouse_0);
_.createView = function createView_0(name_0, id_0, callback){
  isNull_1(callback) && (callback = ($clinit_ViewFactory$CreateCallback() , EMPTY_CALLBACK));
  if (unsafeEquals(name_0, 'toscaui/index.html')) {
    callback.onViewCreated(new toscaui_index_html_largeDisplayMouse_0(id_0));
    configureViewport('user-scalable=no, width=device-width, height=device-height');
  }
   else if (unsafeEquals(name_0, 'subscribeServiceTaylorForm')) {
    callback.onViewCreated(new subscribeServiceTaylorForm_largeDisplayMouse_0(id_0));
  }
   else if (unsafeEquals(name_0, 'detailService')) {
    callback.onViewCreated(new detailService_largeDisplayMouse_0(id_0));
  }
   else if (unsafeEquals(name_0, 'menu')) {
    callback.onViewCreated(new menu_largeDisplayMouse_0(id_0));
  }
   else if (unsafeEquals(name_0, 'publishService')) {
    callback.onViewCreated(new publishService_largeDisplayMouse_0(id_0));
  }
   else if (unsafeEquals(name_0, 'login')) {
    callback.onViewCreated(new login_largeDisplayMouse_0(id_0));
  }
   else if (unsafeEquals(name_0, 'serviceCatalogList')) {
    callback.onViewCreated(new serviceCatalogList_largeDisplayMouse_0(id_0));
  }
   else if (unsafeEquals(name_0, 'toscalist')) {
    callback.onViewCreated(new toscalist_largeDisplayMouse_0(id_0));
  }
   else if (unsafeEquals(name_0, 'main')) {
    callback.onViewCreated(new main_largeDisplayMouse_0(id_0));
  }
   else 
    throw new InterfaceConfigException_0('View [' + name_0 + '] was not found. Check if you import it using useView attribute.');
}
;
_.getCurrentDevice = function getCurrentDevice_0(){
  return $clinit_DeviceAdaptive$Device() , largeDisplayMouse;
}
;
function addWindowOrientationChangeHandler(handler){
  var orientationHandler;
  orientationHandler = attachOrientationChangeHandler(handler);
  if (isNull_1(orientationHandler)) {
    return null;
  }
  return new ViewHandlers$6_0(orientationHandler);
}

function addWindowResizeHandler(handler, lazyCheck){
  var resizeHandler, resizeHandlerRegistration;
  resizeHandler = new ViewHandlers$7_0(lazyCheck, handler);
  resizeHandlerRegistration = addResizeHandler(resizeHandler);
  return new ViewHandlers$8_0(resizeHandlerRegistration);
}

function attachOrientationChangeHandler(handler){
  if (!isOrientationChangeSupported()) {
    return null;
  }
  var attachEvent_0, eventListener, orientationHandler;
  if ('onorientationchange' in $wnd || 'orientationchange' in $wnd) {
    attachEvent_0 = 'onorientationchange';
    eventListener = 'orientationchange';
    orientationHandler = function(){
      handler.onOrientationChange();
    }
    ;
  }
   else if ('ondeviceorientation' in $wnd || 'deviceorientation' in $wnd) {
    var delta = 15;
    attachEvent_0 = 'ondeviceorientation';
    eventListener = 'deviceorientation';
    orientationHandler = function(event_0){
      var position = Math.abs(event_0.gamma);
      if (position >= -delta && position <= delta) {
        $wnd.orientation = 'horizontal';
        if ($wnd.orientation !== $wnd.previousOrientation) {
          $wnd.previousOrientation = $wnd.orientation;
          handler.onOrientationChange();
        }
      }
       else if (position >= 90 - delta && position <= 90 + delta) {
        $wnd.orientation = 'vertical';
        if ($wnd.orientation !== $wnd.previousOrientation) {
          $wnd.previousOrientation = $wnd.orientation;
          handler.onOrientationChange();
        }
      }
    }
    ;
  }
  if ($wnd.attachEvent) {
    $wnd.attachEvent(attachEvent_0, orientationHandler);
  }
   else if ($wnd.addEventListener) {
    $wnd.addEventListener(eventListener, orientationHandler, false);
  }
}

function bindToDOM(container){
  $add_9(boundContainers, container);
  ensureViewContainerHandlers(container);
}

function ensureViewContainerCloseHandler(viewContainer){
  if (!hasWindowCloseHandler && viewContainer.hasWindowCloseHandlers()) {
    hasWindowCloseHandler = true;
    closeHandler_0 = addCloseHandler(new ViewHandlers$4_0);
  }
}

function ensureViewContainerClosingHandler(viewContainer){
  if (!hasWindowClosingHandler && viewContainer.hasWindowClosingHandlers()) {
    hasWindowClosingHandler = true;
    closingHandler = addWindowClosingHandler(new ViewHandlers$5_0);
  }
}

function ensureViewContainerHandlers(viewContainer){
  ensureViewContainerResizeHandler(viewContainer);
  ensureViewContainerOrientationChangeHandler(viewContainer);
  ensureViewContainerCloseHandler(viewContainer);
  ensureViewContainerClosingHandler(viewContainer);
  ensureViewContainerHistoryHandler(viewContainer);
}

function ensureViewContainerHistoryHandler(viewContainer){
  if (!hasHistoryHandler && viewContainer.hasHistoryHandlers()) {
    prepareHistoryFrame();
    hasHistoryHandler = true;
    historyHandler = addValueChangeHandler(new ViewHandlers$2_0);
  }
}

function ensureViewContainerOrientationChangeHandler(viewContainer){
  if (!hasOrientationChangeHandler && viewContainer.hasOrientationChangeHandlers()) {
    hasOrientationChangeHandler = true;
    orientationChangeHandler = addWindowOrientationChangeHandler(new ViewHandlers$3_0);
  }
}

function ensureViewContainerResizeHandler(viewContainer){
  if (!hasWindowResizeHandler && viewContainer.hasResizeHandlers()) {
    hasWindowResizeHandler = true;
    resizeHandler_0 = addWindowResizeHandler(new ViewHandlers$1_0, false);
  }
}

function initializeWindowContainers(){
  if (!initialized_0) {
    boundContainers = new FastList_0;
    initialized_0 = true;
  }
}

function prepareHistoryFrame(){
  var body_0, historyFrame;
  if (!historyFrameInitialized) {
    body_0 = getBodyElement();
    historyFrame = $cast(createIFrame_0());
    $setSrc(historyFrame, "javascript:''");
    $setId(historyFrame, '__gwt_historyFrame');
    $setProperty_0($getStyle(historyFrame), 'position', 'absolute');
    $setProperty_0($getStyle(historyFrame), 'width', '0');
    $setProperty_0($getStyle(historyFrame), 'height', '0');
    $setProperty_0($getStyle(historyFrame), 'border', '0');
    $appendChild(body_0, historyFrame);
    fireCurrentHistoryState();
    historyFrameInitialized = true;
  }
}

function removeOrientationChangeHandler(orientationHandler){
  var orientationEvent = 'onorientationchange' in $wnd?'onorientationchange':'orientationchange' in $wnd?'orientationchange':'ondeviceorientation' in $wnd?'ondeviceorientation':'deviceorientation' in $wnd?'deviceorientation':null;
  if (orientationEvent != null) {
    $wnd.removeEventListener(orientationEvent, orientationHandler);
  }
}

function removeViewContainerCloseHandler(){
  var hasCloseHandlers, i;
  if (hasWindowCloseHandler) {
    hasCloseHandlers = false;
    for (i = 0; i < $size_5(boundContainers); i++) {
      if (dynamicCast($get_8(boundContainers, i), Q$ViewContainer).hasWindowCloseHandlers()) {
        hasCloseHandlers = true;
        break;
      }
    }
    if (!hasCloseHandlers) {
      isNotNull(closeHandler_0) && closeHandler_0.removeHandler();
      closeHandler_0 = null;
      hasWindowCloseHandler = false;
    }
  }
}

function removeViewContainerClosingHandler(){
  var hasClosingHandlers, i;
  if (hasWindowClosingHandler) {
    hasClosingHandlers = false;
    for (i = 0; i < $size_5(boundContainers); i++) {
      if (dynamicCast($get_8(boundContainers, i), Q$ViewContainer).hasWindowClosingHandlers()) {
        hasClosingHandlers = true;
        break;
      }
    }
    if (!hasClosingHandlers) {
      isNotNull(closingHandler) && closingHandler.removeHandler();
      closingHandler = null;
      hasWindowClosingHandler = false;
    }
  }
}

function removeViewContainerHandlers(){
  removeViewContainerResizeHandler();
  removeViewContainerOrientationChangeHandler();
  removeViewContainerCloseHandler();
  removeViewContainerClosingHandler();
  removeViewContainerHistoryHandler();
}

function removeViewContainerHistoryHandler(){
  var hasHistoryHandlers, i;
  if (hasHistoryHandler) {
    hasHistoryHandlers = false;
    for (i = 0; i < $size_5(boundContainers); i++) {
      if (dynamicCast($get_8(boundContainers, i), Q$ViewContainer).hasHistoryHandlers()) {
        hasHistoryHandlers = true;
        break;
      }
    }
    if (!hasHistoryHandlers) {
      isNotNull(historyHandler) && historyHandler.removeHandler();
      historyHandler = null;
      hasHistoryHandler = false;
    }
  }
}

function removeViewContainerOrientationChangeHandler(){
  var hasOrientationHandlers, i;
  if (hasOrientationChangeHandler) {
    hasOrientationHandlers = false;
    for (i = 0; i < $size_5(boundContainers); i++) {
      if (dynamicCast($get_8(boundContainers, i), Q$ViewContainer).hasOrientationChangeHandlers()) {
        hasOrientationHandlers = true;
        break;
      }
    }
    if (!hasOrientationHandlers) {
      isNotNull(orientationChangeHandler) && orientationChangeHandler.removeHandler();
      orientationChangeHandler = null;
      hasOrientationChangeHandler = false;
    }
  }
}

function removeViewContainerResizeHandler(){
  var hasResizeHandlers, i;
  if (hasWindowResizeHandler) {
    hasResizeHandlers = false;
    for (i = 0; i < $size_5(boundContainers); i++) {
      if (dynamicCast($get_8(boundContainers, i), Q$ViewContainer).hasResizeHandlers()) {
        hasResizeHandlers = true;
        break;
      }
    }
    if (!hasResizeHandlers) {
      isNotNull(resizeHandler_0) && resizeHandler_0.removeHandler();
      resizeHandler_0 = null;
      hasWindowResizeHandler = false;
    }
  }
}

function unbindToDOM(container){
  $remove_8(boundContainers, $indexOf_6(boundContainers, container));
  removeViewContainerHandlers();
}

var boundContainers = null, closeHandler_0, closingHandler, hasHistoryHandler = false, hasOrientationChangeHandler = false, hasWindowCloseHandler = false, hasWindowClosingHandler = false, hasWindowResizeHandler = false, historyFrameInitialized = false, historyHandler, initialized_0 = false, orientationChangeHandler, resizeHandler_0;
function $$init_584(){
}

function ViewHandlers$1_0(){
  Object_1.call(this);
  $$init_584();
}

defineSeed(696, 1, makeCastMap([Q$ResizeHandler, Q$EventHandler]), ViewHandlers$1_0);
_.onResize = function onResize_2(event_0){
  var i;
  for (i = 0; i < $size_5(boundContainers); i++) {
    dynamicCast($get_8(boundContainers, i), Q$ViewContainer).notifyViewsAboutWindowResize(event_0);
  }
}
;
function $$init_585(){
}

function ViewHandlers$2_0(){
  Object_1.call(this);
  $$init_585();
}

defineSeed(697, 1, makeCastMap([Q$ValueChangeHandler, Q$EventHandler]), ViewHandlers$2_0);
_.onValueChange = function onValueChange_0(event_0){
  var i;
  for (i = 0; i < $size_5(boundContainers); i++) {
    dynamicCast($get_8(boundContainers, i), Q$ViewContainer).notifyViewsAboutHistoryChange(event_0);
  }
}
;
function $$init_586(){
}

function ViewHandlers$3_0(){
  Object_1.call(this);
  $$init_586();
}

defineSeed(698, 1, makeCastMap([Q$OrientationChangeHandler]), ViewHandlers$3_0);
_.onOrientationChange = function onOrientationChange(){
  var i;
  for (i = 0; i < $size_5(boundContainers); i++) {
    dynamicCast($get_8(boundContainers, i), Q$ViewContainer).notifyViewsAboutOrientationChange();
  }
}
;
function $$init_587(){
}

function ViewHandlers$4_0(){
  Object_1.call(this);
  $$init_587();
}

defineSeed(699, 1, makeCastMap([Q$CloseHandler, Q$EventHandler]), ViewHandlers$4_0);
_.onClose = function onClose_1(event_0){
  var i;
  for (i = 0; i < $size_5(boundContainers); i++) {
    dynamicCast($get_8(boundContainers, i), Q$ViewContainer).notifyViewsAboutWindowClose(event_0);
  }
}
;
function $$init_588(){
}

function ViewHandlers$5_0(){
  Object_1.call(this);
  $$init_588();
}

defineSeed(700, 1, makeCastMap([Q$EventHandler, Q$Window$ClosingHandler]), ViewHandlers$5_0);
_.onWindowClosing = function onWindowClosing(event_0){
  var i;
  for (i = 0; i < $size_5(boundContainers); i++) {
    dynamicCast($get_8(boundContainers, i), Q$ViewContainer).notifyViewsAboutWindowClosing(event_0);
  }
}
;
function $$init_589(){
}

function ViewHandlers$6_0(val$orientationHandler){
  this.val$orientationHandler = val$orientationHandler;
  Object_1.call(this);
  $$init_589();
}

defineSeed(701, 1, {}, ViewHandlers$6_0);
_.removeHandler = function removeHandler_3(){
  isNotNull(this.val$orientationHandler) && removeOrientationChangeHandler(this.val$orientationHandler);
}
;
function $$init_590(){
}

function ViewHandlers$7_0(val$lazyCheck, val$handler){
  this.val$lazyCheck = val$lazyCheck;
  this.val$handler = val$handler;
  Object_1.call(this);
  $$init_590();
}

defineSeed(702, 1, makeCastMap([Q$ResizeHandler, Q$EventHandler]), ViewHandlers$7_0);
_.onResize = function onResize_3(event_0){
  var executor;
  if (!this.val$lazyCheck) {
    this.val$handler.onResize(event_0);
    return;
  }
  executor = new ViewHandlers$7$1_0(this, 100, event_0, this.val$handler);
  $execute(executor);
}
;
_.val$lazyCheck = false;
function $$init_591(){
}

function $getResizeEvent(this$static){
  return this$static.resizeEvent;
}

function ViewHandlers$ResizeBeginEndExecutor_0(maxIntervalBetweenStartAndEnd, resizeEvent){
  BeginEndExecutor_0.call(this, maxIntervalBetweenStartAndEnd);
  $$init_591();
  this.resizeEvent = resizeEvent;
}

defineSeed(704, 616, {});
function $$init_592(this$static){
  this$static.clientHeight_0 = getClientHeight();
  this$static.clientWidth_0 = getClientWidth();
}

function ViewHandlers$7$1_0(this$1, $anonymous0, $anonymous1, val$handler){
  this , this$1;
  this.val$handler = val$handler;
  ViewHandlers$ResizeBeginEndExecutor_0.call(this, $anonymous0, $anonymous1);
  $$init_592(this);
}

defineSeed(703, 704, {}, ViewHandlers$7$1_0);
_.doBeginAction = function doBeginAction(){
}
;
_.doEndAction = function doEndAction(){
  var newClientHeight, newClientWidth;
  if ($equals_1(getCurrentDevice(), ($clinit_DeviceAdaptive$Device() , largeDisplayMouse))) {
    this.val$handler.onResize($getResizeEvent(this));
  }
   else {
    newClientHeight = getClientHeight();
    newClientWidth = getClientWidth();
    (this.clientHeight_0 != newClientHeight || this.clientWidth_0 != newClientWidth || isIos()) && this.val$handler.onResize($getResizeEvent(this));
    this.clientHeight_0 = newClientHeight;
    this.clientWidth_0 = newClientWidth;
  }
}
;
_.clientHeight_0 = 0;
_.clientWidth_0 = 0;
function $$init_593(){
}

function ViewHandlers$8_0(val$resizeHandlerRegistration){
  this.val$resizeHandlerRegistration = val$resizeHandlerRegistration;
  Object_1.call(this);
  $$init_593();
}

defineSeed(705, 1, {}, ViewHandlers$8_0);
_.removeHandler = function removeHandler_4(){
  isNotNull(this.val$resizeHandlerRegistration) && this.val$resizeHandlerRegistration.removeHandler();
}
;
function $$init_594(){
}

function ViewLoadEvent_0(view, parameter){
  CruxEvent_0.call(this, view, $getId_0(view));
  $$init_594();
  this , parameter;
}

defineSeed(706, 615, {}, ViewLoadEvent_0);
function $$init_595(this$static){
}

function $isCanceled_2(this$static){
  return this$static.canceled;
}

function ViewUnloadEvent_0(view){
  CruxEvent_0.call(this, view, $getId_0(view));
  $$init_595(this);
}

defineSeed(707, 615, {}, ViewUnloadEvent_0);
_.canceled = false;
function $clinit_detailService_largeDisplayMouse(){
  $clinit_detailService_largeDisplayMouse = nullMethod;
  $clinit_View();
  logger3 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_detailService_1largeDisplayMouse_2_classLit));
}

function $$init_596(this$static){
  this$static.__view = this$static;
  this$static.viewPanel1 = null;
}

function $updateViewHeight(this$static, height){
  isNotNull(this$static.viewPanel1) && this$static.viewPanel1.setHeight(height);
}

function $updateViewWidth(this$static, width_0){
  isNotNull(this$static.viewPanel1) && this$static.viewPanel1.setWidth(width_0);
}

function detailService_largeDisplayMouse_0(id_0){
  $clinit_detailService_largeDisplayMouse();
  View_0.call(this, id_0);
  $$init_596(this);
  $setTitle(this, null);
  this.iocContainer = new IocContainer_detailService_largeDisplayMouse_0(this);
  this.registeredControllers = new RegisteredControllers_detailService_largeDisplayMouse_0(this, this.iocContainer);
  this , new RegisteredDataSources_detailService_largeDisplayMouse_0(this, this.iocContainer);
}

defineSeed(708, 682, makeCastMap([Q$View]), detailService_largeDisplayMouse_0);
_.createWidgets = function createWidgets(){
  $addViewLoadHandler(this.__view, new detailService_largeDisplayMouse$1_0(this));
  loggingIsEnabled() && $info_0(logger3, getMessages().viewContainerViewCreated($getId_0(this)));
}
;
_.getRegisteredControllers = function getRegisteredControllers(){
  return this.registeredControllers;
}
;
_.initializeLazyDependencies = function initializeLazyDependencies(){
  return {};
}
;
_.render_0 = function render_1(rootPanel1, renderCallback){
  if (isNull_1(this.viewPanel1)) {
    this.viewPanel1 = new HTMLPanel_0(' <link href="css/main.css" rel="stylesheet" type="text/css"/> <center> <div class="crux-StyledPanelOuter storeItem" style="display: table; box-sizing: border-box;"> <div class="crux-StyledPanel" style="display: table-cell; width: 100%; vertical-align: middle;"> <div class="cf" style="margin-left: auto; margin-right: auto;"> <div class="productName">Service<\/div> <div class="productImage"><\/div> <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<\/div> <button class="gwt-Button productButton" type="button">SUBSCRIBE<\/button> <\/div> <\/div> <\/div> <\/center> ');
    rootPanel1.add_1(this.viewPanel1);
    renderCallback.onRendered();
  }
   else {
    rootPanel1.add_1(this.viewPanel1);
    renderCallback.onRendered();
  }
  isEmpty_5(this.width_0) || $updateViewWidth(this, this.width_0);
  isEmpty_5(this.height_0) || $updateViewHeight(this, this.height_0);
  loggingIsEnabled() && $info_0(logger3, getMessages().viewContainerViewRendered($getId_0(this)));
}
;
_.updateViewHeight = function updateViewHeight(height){
  $updateViewHeight(this, height);
}
;
var logger3;
function $$init_597(){
}

function detailService_largeDisplayMouse$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_597();
}

defineSeed(709, 1, makeCastMap([Q$ViewLoadHandler]), detailService_largeDisplayMouse$1_0);
_.onLoad_0 = function onLoad_2(event_0){
  $onLoad_Exposed_(dynamicCast(this.this$0.__view.getController('detailServiceController'), Q$DetailServiceController_ControllerProxy));
}
;
function $clinit_login_largeDisplayMouse(){
  $clinit_login_largeDisplayMouse = nullMethod;
  $clinit_View();
  logger6 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_login_1largeDisplayMouse_2_classLit));
}

function $$init_598(this$static){
  this$static.__view = this$static;
  this$static.viewPanel4 = null;
}

function $updateViewHeight_0(this$static, height){
  isNotNull(this$static.viewPanel4) && this$static.viewPanel4.setHeight(height);
}

function $updateViewWidth_0(this$static, width_0){
  isNotNull(this$static.viewPanel4) && this$static.viewPanel4.setWidth(width_0);
}

function login_largeDisplayMouse_0(id_0){
  $clinit_login_largeDisplayMouse();
  View_0.call(this, id_0);
  $$init_598(this);
  $setTitle(this, null);
  this.iocContainer = new IocContainer_login_largeDisplayMouse_0(this);
  this.registeredControllers = new RegisteredControllers_login_largeDisplayMouse_0(this, this.iocContainer);
  this , new RegisteredDataSources_login_largeDisplayMouse_0(this, this.iocContainer);
}

defineSeed(710, 682, makeCastMap([Q$View]), login_largeDisplayMouse_0);
_.createWidgets = function createWidgets_0(){
  var elem2, widget25, widget26, widget27, widget28, widget29;
  $addViewLoadHandler(this.__view, new login_largeDisplayMouse$1_0(this));
  widget25 = new StyledPanel_0;
  $addWidget_0(this.__view, 'panel', widget25);
  widget26 = new FormDisplay_0;
  $addWidget_0(this.__view, 'form', widget26);
  elem2 = $getElement(widget26);
  addStyleProperty(elem2, 'display', 'block');
  addStyleProperty(elem2, ' margin', ' 50px');
  widget27 = new TextBox_0;
  $addWidget_0(this.__view, 'nameTextBox', widget27);
  $addEntry(widget26, 'Name', widget27, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget28 = new PasswordTextBox_0;
  $addWidget_0(this.__view, 'passwordTextBox', widget28);
  $addEntry(widget26, 'Password', widget28, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget29 = new Button_2;
  $addWidget_0(this.__view, 'okButton', widget29);
  $setText_5(widget29, 'login');
  $addSelectHandler(widget29, new login_largeDisplayMouse$2_0(this));
  $addEntry(widget26, null, widget29, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  $add_13(widget25, widget26);
  loggingIsEnabled() && $info_0(logger6, getMessages().viewContainerViewCreated($getId_0(this)));
}
;
_.getRegisteredControllers = function getRegisteredControllers_0(){
  return this.registeredControllers;
}
;
_.initializeLazyDependencies = function initializeLazyDependencies_0(){
  return {};
}
;
_.render_0 = function render_2(rootPanel4, renderCallback){
  if (isNull_1(this.viewPanel4)) {
    this.viewPanel4 = new HTMLPanel_0(' <link href="css/main.css" rel="stylesheet" type="text/css"/> <center> <div id="_crux_' + $getPrefix(this.__view) + 'panel"><\/div> <\/center> ');
    rootPanel4.add_1(this.viewPanel4);
    $addAndReplaceElement_2(this.viewPanel4, dynamicCast($get_9(this.widgets, 'panel'), Q$Widget), getEnclosingPanelId('panel', this.__view));
    renderCallback.onRendered();
  }
   else {
    rootPanel4.add_1(this.viewPanel4);
    renderCallback.onRendered();
  }
  isEmpty_5(this.width_0) || $updateViewWidth_0(this, this.width_0);
  isEmpty_5(this.height_0) || $updateViewHeight_0(this, this.height_0);
  loggingIsEnabled() && $info_0(logger6, getMessages().viewContainerViewRendered($getId_0(this)));
}
;
_.updateViewHeight = function updateViewHeight_0(height){
  $updateViewHeight_0(this, height);
}
;
var logger6;
function $$init_599(){
}

function login_largeDisplayMouse$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_599();
}

defineSeed(711, 1, makeCastMap([Q$ViewLoadHandler]), login_largeDisplayMouse$1_0);
_.onLoad_0 = function onLoad_3(event_0){
  $onLoad_Exposed__0(dynamicCast(this.this$0.__view.getController('loginController'), Q$LoginController_ControllerProxy));
}
;
function $$init_600(){
}

function login_largeDisplayMouse$2_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_600();
}

defineSeed(712, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), login_largeDisplayMouse$2_0);
_.onSelect = function onSelect(event_0){
  $login_Exposed_(dynamicCast(this.this$0.__view.getController('loginController'), Q$LoginController_ControllerProxy));
}
;
function $clinit_main_largeDisplayMouse(){
  $clinit_main_largeDisplayMouse = nullMethod;
  $clinit_View();
  logger9 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_main_1largeDisplayMouse_2_classLit));
}

function $$init_601(this$static){
  this$static.__view = this$static;
  this$static.viewPanel7 = null;
}

function $updateViewHeight_1(this$static, height){
  isNotNull(this$static.viewPanel7) && this$static.viewPanel7.setHeight(height);
}

function $updateViewWidth_1(this$static, width_0){
  isNotNull(this$static.viewPanel7) && this$static.viewPanel7.setWidth(width_0);
}

function main_largeDisplayMouse_0(id_0){
  $clinit_main_largeDisplayMouse();
  View_0.call(this, id_0);
  $$init_601(this);
  $setTitle(this, null);
  this.iocContainer = new IocContainer_main_largeDisplayMouse_0(this);
  this.registeredControllers = new RegisteredControllers_main_largeDisplayMouse_0(this, this.iocContainer);
  this , new RegisteredDataSources_main_largeDisplayMouse_0(this, this.iocContainer);
}

defineSeed(713, 682, makeCastMap([Q$View]), main_largeDisplayMouse_0);
_.createWidgets = function createWidgets_1(){
  var elem4, panelInfo2, widget37, widget38, widget39, widget40, widget41, widget42, widget43, widget44, widget45, widget46, widget47, widget48, widget49, widget50, widget51, widget52, widget53, widget54, widget55, widget56, widget57, widget58, widget59, widget60;
  $addViewLoadHandler(this.__view, new main_largeDisplayMouse$1_0(this));
  widget37 = new HTMLPanel_0(' <div id="_crux_' + $getPrefix(this.__view) + 'gwtSimplePanel"><\/div> <div id="_crux_' + $getPrefix(this.__view) + 'panel"><\/div> <div id="_crux_' + $getPrefix(this.__view) + 'panelUploader"><\/div> ');
  panelInfo2 = attachToDom(widget37);
  widget38 = new SimplePanel_0;
  $addWidget_0(this.__view, 'gwtSimplePanel', widget38);
  widget39 = new FormPanel_0;
  $addWidget_0(this.__view, 'gwtFormPanel', widget39);
  $add_2(widget38, widget39);
  $addAndReplaceElement_2(widget37, widget38, '_crux_' + $getPrefix(this.__view) + 'gwtSimplePanel');
  widget40 = new StyledPanel_0;
  $addWidget_0(this.__view, 'panel', widget40);
  widget41 = new FormDisplay_0;
  $addWidget_0(this.__view, 'form', widget41);
  elem4 = $getElement(widget41);
  addStyleProperty(elem4, 'display', 'block');
  addStyleProperty(elem4, ' margin', ' 50px');
  widget42 = new TextBox_0;
  $addWidget_0(this.__view, 'nameTextBox', widget42);
  $setValue_0(widget42, 'name');
  $addEntry(widget41, 'What is your name?', widget42, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget43 = new Button_2;
  $addWidget_0(this.__view, 'okButton', widget43);
  $setText_5(widget43, 'getInfoUser');
  $addSelectHandler(widget43, new main_largeDisplayMouse$2_0(this));
  $addEntry(widget41, null, widget43, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget44 = new Button_2;
  $addWidget_0(this.__view, 'okButton2', widget44);
  $setText_5(widget44, 'cleanInfoUser');
  $addSelectHandler(widget44, new main_largeDisplayMouse$3_0(this));
  $addEntry(widget41, null, widget44, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget45 = new Button_2;
  $addWidget_0(this.__view, 'okButton3', widget45);
  $setText_5(widget45, 'createField');
  $addSelectHandler(widget45, new main_largeDisplayMouse$4_0(this));
  $addEntry(widget41, null, widget45, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget46 = new TextBox_0;
  $addWidget_0(this.__view, 'createdBy', widget46);
  $addEntry(widget41, 'createdBy', widget46, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget47 = new TextBox_0;
  $addWidget_0(this.__view, 'createdDate', widget47);
  $addEntry(widget41, 'createdDate', widget47, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget48 = new TextBox_0;
  $addWidget_0(this.__view, 'lastModifiedBy', widget48);
  $addEntry(widget41, 'lastModifiedBy', widget48, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget49 = new TextBox_0;
  $addWidget_0(this.__view, 'lastModifiedDate', widget49);
  $addEntry(widget41, 'lastModifiedDate', widget49, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget50 = new TextBox_0;
  $addWidget_0(this.__view, 'id', widget50);
  $addEntry(widget41, 'id', widget50, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget51 = new TextBox_0;
  $addWidget_0(this.__view, 'login', widget51);
  $addEntry(widget41, 'login', widget51, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget52 = new TextBox_0;
  $addWidget_0(this.__view, 'firstName', widget52);
  $addEntry(widget41, 'firstName', widget52, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget53 = new TextBox_0;
  $addWidget_0(this.__view, 'lastName', widget53);
  $addEntry(widget41, 'lastName', widget53, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget54 = new TextBox_0;
  $addWidget_0(this.__view, 'email', widget54);
  $addEntry(widget41, 'email', widget54, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget55 = new TextBox_0;
  $addWidget_0(this.__view, 'activated', widget55);
  $addEntry(widget41, 'activated', widget55, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget56 = new TextBox_0;
  $addWidget_0(this.__view, 'langKey', widget56);
  $addEntry(widget41, 'langKey', widget56, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget57 = new TextBox_0;
  $addWidget_0(this.__view, 'activationKey', widget57);
  $addEntry(widget41, 'activationKey', widget57, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget58 = new Button_2;
  $addWidget_0(this.__view, 'changeButton', widget58);
  $setText_5(widget58, 'ToscaList');
  $addSelectHandler(widget58, new main_largeDisplayMouse$5_0(this));
  $addEntry(widget41, null, widget58, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  $add_13(widget40, widget41);
  $addAndReplaceElement_2(widget37, widget40, '_crux_' + $getPrefix(this.__view) + 'panel');
  widget59 = new StyledPanel_0;
  $addWidget_0(this.__view, 'panelUploader', widget59);
  widget60 = createIfSupported_1();
  $addWidget_0(this.__view, 'fileUploader', widget60);
  if (isSupported_6()) {
    $setMultiple_3(widget60, true);
    $setAutoUploadFiles_0(widget60, true);
    $setFileInputText_0(widget60, 'Choose files');
    $setUrl_1(widget60, '/upload-endpoint');
  }
  isSupported_6() && $add_13(widget59, widget60);
  $addAndReplaceElement_2(widget37, widget59, '_crux_' + $getPrefix(this.__view) + 'panelUploader');
  restorePanelParent(widget37, panelInfo2);
  $addWidget_0(this.__view, 'mainPanel', widget37);
  loggingIsEnabled() && $info_0(logger9, getMessages().viewContainerViewCreated($getId_0(this)));
}
;
_.getRegisteredControllers = function getRegisteredControllers_1(){
  return this.registeredControllers;
}
;
_.initializeLazyDependencies = function initializeLazyDependencies_1(){
  return {};
}
;
_.render_0 = function render_3(rootPanel7, renderCallback){
  if (isNull_1(this.viewPanel7)) {
    this.viewPanel7 = new HTMLPanel_0(' <center> <div id="_crux_' + $getPrefix(this.__view) + 'mainPanel"><\/div> <\/center> ');
    rootPanel7.add_1(this.viewPanel7);
    $addAndReplaceElement_2(this.viewPanel7, dynamicCast($get_9(this.widgets, 'mainPanel'), Q$Widget), getEnclosingPanelId('mainPanel', this.__view));
    renderCallback.onRendered();
  }
   else {
    rootPanel7.add_1(this.viewPanel7);
    renderCallback.onRendered();
  }
  isEmpty_5(this.width_0) || $updateViewWidth_1(this, this.width_0);
  isEmpty_5(this.height_0) || $updateViewHeight_1(this, this.height_0);
  loggingIsEnabled() && $info_0(logger9, getMessages().viewContainerViewRendered($getId_0(this)));
}
;
_.updateViewHeight = function updateViewHeight_1(height){
  $updateViewHeight_1(this, height);
}
;
var logger9;
function $$init_602(){
}

function main_largeDisplayMouse$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_602();
}

defineSeed(714, 1, makeCastMap([Q$ViewLoadHandler]), main_largeDisplayMouse$1_0);
_.onLoad_0 = function onLoad_4(event_0){
  $onLoad_Exposed__1(dynamicCast(this.this$0.__view.getController('mainController'), Q$MainController_ControllerProxy));
}
;
function $$init_603(){
}

function main_largeDisplayMouse$2_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_603();
}

defineSeed(715, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), main_largeDisplayMouse$2_0);
_.onSelect = function onSelect_0(event_0){
  $getInfoUser_Exposed_(dynamicCast(this.this$0.__view.getController('mainController'), Q$MainController_ControllerProxy));
}
;
function $$init_604(){
}

function main_largeDisplayMouse$3_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_604();
}

defineSeed(716, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), main_largeDisplayMouse$3_0);
_.onSelect = function onSelect_1(event_0){
  $clean_Exposed_(dynamicCast(this.this$0.__view.getController('mainController'), Q$MainController_ControllerProxy));
}
;
function $$init_605(){
}

function main_largeDisplayMouse$4_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_605();
}

defineSeed(717, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), main_largeDisplayMouse$4_0);
_.onSelect = function onSelect_2(event_0){
  $createField_Exposed_(dynamicCast(this.this$0.__view.getController('mainController'), Q$MainController_ControllerProxy));
}
;
function $$init_606(){
}

function main_largeDisplayMouse$5_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_606();
}

defineSeed(718, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), main_largeDisplayMouse$5_0);
_.onSelect = function onSelect_3(event_0){
  $changeView_Exposed_(dynamicCast(this.this$0.__view.getController('mainController'), Q$MainController_ControllerProxy));
}
;
function $clinit_menu_largeDisplayMouse(){
  $clinit_menu_largeDisplayMouse = nullMethod;
  $clinit_View();
  logger4 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_menu_1largeDisplayMouse_2_classLit));
}

function $$init_607(this$static){
  this$static.__view = this$static;
  this$static.viewPanel2 = null;
}

function $updateViewHeight_2(this$static, height){
  isNotNull(this$static.viewPanel2) && this$static.viewPanel2.setHeight(height);
}

function $updateViewWidth_2(this$static, width_0){
  isNotNull(this$static.viewPanel2) && this$static.viewPanel2.setWidth(width_0);
}

function menu_largeDisplayMouse_0(id_0){
  $clinit_menu_largeDisplayMouse();
  View_0.call(this, id_0);
  $$init_607(this);
  $setTitle(this, null);
  this.iocContainer = new IocContainer_menu_largeDisplayMouse_0(this);
  this.registeredControllers = new RegisteredControllers_menu_largeDisplayMouse_0(this, this.iocContainer);
  this , new RegisteredDataSources_menu_largeDisplayMouse_0(this, this.iocContainer);
}

defineSeed(719, 682, makeCastMap([Q$View]), menu_largeDisplayMouse_0);
_.createWidgets = function createWidgets_2(){
  var panelInfo0, widget11, widget12, widget13;
  $addViewLoadHandler(this.__view, new menu_largeDisplayMouse$1_0(this));
  widget11 = new StyledPanel_0;
  $addWidget_0(this.__view, 'panel', widget11);
  widget12 = new HTMLPanel_0(' <div id="_crux_' + $getPrefix(this.__view) + 'menu"><\/div> ');
  panelInfo0 = attachToDom(widget12);
  widget13 = new TopMenuDisposal_Impl_largeDisplayMouse_0;
  $addWidget(this.__view, 'menu', widget13);
  widget13.addMenuEntry('Main', 'main');
  widget13.addMenuEntry('Publish Service', 'publishService');
  widget13.addMenuEntry('Service Catalog List', 'serviceCatalogList');
  widget13.addMenuEntry('Other', 'toscalist');
  widget13.addMenuEntry('Login', 'login');
  widget13.addMenuEntry('Subscribe Service - Taylor Form', 'subscribeServiceTaylorForm');
  widget13.setDefaultView('main');
  $addAndReplaceElement(widget12, widget13, '_crux_' + $getPrefix(this.__view) + 'menu');
  restorePanelParent(widget12, panelInfo0);
  $addWidget_0(this.__view, 'innerPanel', widget12);
  $add_13(widget11, widget12);
  loggingIsEnabled() && $info_0(logger4, getMessages().viewContainerViewCreated($getId_0(this)));
}
;
_.getRegisteredControllers = function getRegisteredControllers_2(){
  return this.registeredControllers;
}
;
_.initializeLazyDependencies = function initializeLazyDependencies_2(){
  return {};
}
;
_.render_0 = function render_4(rootPanel2, renderCallback){
  if (isNull_1(this.viewPanel2)) {
    this.viewPanel2 = new HTMLPanel_0(' <center> <div id="_crux_' + $getPrefix(this.__view) + 'panel"><\/div> <\/center> ');
    rootPanel2.add_1(this.viewPanel2);
    $addAndReplaceElement_2(this.viewPanel2, dynamicCast($get_9(this.widgets, 'panel'), Q$Widget), getEnclosingPanelId('panel', this.__view));
    renderCallback.onRendered();
  }
   else {
    rootPanel2.add_1(this.viewPanel2);
    renderCallback.onRendered();
  }
  isEmpty_5(this.width_0) || $updateViewWidth_2(this, this.width_0);
  isEmpty_5(this.height_0) || $updateViewHeight_2(this, this.height_0);
  loggingIsEnabled() && $info_0(logger4, getMessages().viewContainerViewRendered($getId_0(this)));
}
;
_.updateViewHeight = function updateViewHeight_2(height){
  $updateViewHeight_2(this, height);
}
;
var logger4;
function $$init_608(){
}

function menu_largeDisplayMouse$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_608();
}

defineSeed(720, 1, makeCastMap([Q$ViewLoadHandler]), menu_largeDisplayMouse$1_0);
_.onLoad_0 = function onLoad_5(event_0){
  $onLoad_Exposed__2(dynamicCast(this.this$0.__view.getController('menuController'), Q$MenuController_ControllerProxy));
}
;
function $clinit_org_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposal_largeDisplayMouse(){
  $clinit_org_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposal_largeDisplayMouse = nullMethod;
  $clinit_View();
  logger10 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_org_1cruxframework_1crux_1widgets_1client_1disposal_1topmenudisposal_1TopMenuDisposal_1largeDisplayMouse_2_classLit));
}

function $$init_609(this$static){
  this$static.__view = this$static;
  this$static.viewPanel8 = null;
}

function $setController(this$static, controller){
  this$static._controller = controller;
}

function $updateViewHeight_3(this$static, height){
  isNotNull(this$static.viewPanel8) && this$static.viewPanel8.setHeight(height);
}

function $updateViewWidth_3(this$static, width_0){
  isNotNull(this$static.viewPanel8) && this$static.viewPanel8.setWidth(width_0);
}

function org_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposal_largeDisplayMouse_0(id_0){
  $clinit_org_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposal_largeDisplayMouse();
  View_0.call(this, id_0);
  $$init_609(this);
  this , new IocContainer_org_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposal_largeDisplayMouse_0(this);
}

defineSeed(721, 682, makeCastMap([Q$View]), org_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposal_largeDisplayMouse_0);
_.createWidgets = function createWidgets_3(){
  var widget61, widget62, widget63, widget64, widget65, widget66;
  $setHeight_2(this, '100%');
  widget61 = new FlowPanel_0;
  $addWidget_0(this.__view, 'splitPanel', widget61);
  widget61.setWidth('100%');
  widget61.setHeight('100%');
  widget61.setStyleName('disposalWrapper');
  widget62 = new SimplePanel_0;
  $addWidget_0(this.__view, 'header', widget62);
  widget62.setStyleName('headerPanel');
  widget63 = new SimplePanel_0;
  $addWidget_0(this.__view, 'menuPanel', widget63);
  widget63.setWidth('100%');
  widget63.setStyleName('menuPanel');
  widget64 = new MenuBar_0(false);
  $addWidget_0(this.__view, 'menuBar', widget64);
  $add_2(widget63, widget64);
  $add_2(widget62, widget63);
  $add_3(widget61, widget62);
  widget65 = new SimplePanel_0;
  $addWidget_0(this.__view, 'contentPanel', widget65);
  widget65.setWidth('100%');
  widget65.setStyleName('contentPanel');
  widget66 = new SimpleViewContainer_0;
  $addWidget_0(this.__view, 'viewContainer', widget66);
  widget66.setWidth('100%');
  widget66.setStyleName('viewContainer');
  $add_2(widget65, widget66);
  $add_3(widget61, widget65);
  loggingIsEnabled() && $info_0(logger10, getMessages().viewContainerViewCreated($getId_0(this)));
}
;
_.getController = function getController_9(controller){
  return this._controller;
}
;
_.getRegisteredControllers = function getRegisteredControllers_3(){
  return this.registeredControllers;
}
;
_.initializeLazyDependencies = function initializeLazyDependencies_3(){
  return {};
}
;
_.registerLoadedView = function registerLoadedView_0(){
}
;
_.render_0 = function render_5(rootPanel8, renderCallback){
  if (isNull_1(this.viewPanel8)) {
    this.viewPanel8 = new HTMLPanel_0(' <div id="_crux_' + $getPrefix(this.__view) + 'splitPanel"><\/div> ');
    rootPanel8.add_1(this.viewPanel8);
    $addAndReplaceElement_2(this.viewPanel8, dynamicCast($get_9(this.widgets, 'splitPanel'), Q$Widget), getEnclosingPanelId('splitPanel', this.__view));
    renderCallback.onRendered();
  }
   else {
    rootPanel8.add_1(this.viewPanel8);
    renderCallback.onRendered();
  }
  isEmpty_5(this.width_0) || $updateViewWidth_3(this, this.width_0);
  isEmpty_5(this.height_0) || $updateViewHeight_3(this, this.height_0);
  loggingIsEnabled() && $info_0(logger10, getMessages().viewContainerViewRendered($getId_0(this)));
}
;
_.unregisterLoadedView = function unregisterLoadedView_0(){
}
;
_.updateViewHeight = function updateViewHeight_3(height){
  $updateViewHeight_3(this, height);
}
;
var logger10;
function $clinit_org_cruxframework_crux_widgets_client_storyboard_Storyboard_largeDisplayMouse(){
  $clinit_org_cruxframework_crux_widgets_client_storyboard_Storyboard_largeDisplayMouse = nullMethod;
  $clinit_View();
  logger11 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_org_1cruxframework_1crux_1widgets_1client_1storyboard_1Storyboard_1largeDisplayMouse_2_classLit));
}

function $$init_610(this$static){
  this$static.__view = this$static;
  this$static.viewPanel9 = null;
}

function $setController_0(this$static, controller){
  this$static._controller = controller;
}

function $updateViewHeight_4(this$static, height){
  isNotNull(this$static.viewPanel9) && this$static.viewPanel9.setHeight(height);
}

function $updateViewWidth_4(this$static, width_0){
  isNotNull(this$static.viewPanel9) && this$static.viewPanel9.setWidth(width_0);
}

function org_cruxframework_crux_widgets_client_storyboard_Storyboard_largeDisplayMouse_0(id_0){
  $clinit_org_cruxframework_crux_widgets_client_storyboard_Storyboard_largeDisplayMouse();
  View_0.call(this, id_0);
  $$init_610(this);
  this , new IocContainer_org_cruxframework_crux_widgets_client_storyboard_Storyboard_largeDisplayMouse_0(this);
}

defineSeed(722, 682, makeCastMap([Q$View]), org_cruxframework_crux_widgets_client_storyboard_Storyboard_largeDisplayMouse_0);
_.createWidgets = function createWidgets_4(){
  var widget67;
  widget67 = new FlowPanel_0;
  $addWidget_0(this.__view, 'storyboard', widget67);
  loggingIsEnabled() && $info_0(logger11, getMessages().viewContainerViewCreated($getId_0(this)));
}
;
_.getController = function getController_10(controller){
  return this._controller;
}
;
_.getRegisteredControllers = function getRegisteredControllers_4(){
  return this.registeredControllers;
}
;
_.initializeLazyDependencies = function initializeLazyDependencies_4(){
  return {};
}
;
_.registerLoadedView = function registerLoadedView_1(){
}
;
_.render_0 = function render_6(rootPanel9, renderCallback){
  if (isNull_1(this.viewPanel9)) {
    this.viewPanel9 = new HTMLPanel_0(' <div id="_crux_' + $getPrefix(this.__view) + 'storyboard"><\/div> ');
    rootPanel9.add_1(this.viewPanel9);
    $addAndReplaceElement_2(this.viewPanel9, dynamicCast($get_9(this.widgets, 'storyboard'), Q$Widget), getEnclosingPanelId('storyboard', this.__view));
    renderCallback.onRendered();
  }
   else {
    rootPanel9.add_1(this.viewPanel9);
    renderCallback.onRendered();
  }
  isEmpty_5(this.width_0) || $updateViewWidth_4(this, this.width_0);
  isEmpty_5(this.height_0) || $updateViewHeight_4(this, this.height_0);
  loggingIsEnabled() && $info_0(logger11, getMessages().viewContainerViewRendered($getId_0(this)));
}
;
_.unregisterLoadedView = function unregisterLoadedView_1(){
}
;
_.updateViewHeight = function updateViewHeight_4(height){
  $updateViewHeight_4(this, height);
}
;
var logger11;
function $clinit_publishService_largeDisplayMouse(){
  $clinit_publishService_largeDisplayMouse = nullMethod;
  $clinit_View();
  logger5 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_publishService_1largeDisplayMouse_2_classLit));
}

function $$init_611(this$static){
  this$static.__view = this$static;
  this$static.viewPanel3 = null;
}

function $updateViewHeight_5(this$static, height){
  isNotNull(this$static.viewPanel3) && this$static.viewPanel3.setHeight(height);
}

function $updateViewWidth_5(this$static, width_0){
  isNotNull(this$static.viewPanel3) && this$static.viewPanel3.setWidth(width_0);
}

function publishService_largeDisplayMouse_0(id_0){
  $clinit_publishService_largeDisplayMouse();
  View_0.call(this, id_0);
  $$init_611(this);
  $setTitle(this, null);
  this.iocContainer = new IocContainer_publishService_largeDisplayMouse_0(this);
  this.registeredControllers = new RegisteredControllers_publishService_largeDisplayMouse_0(this, this.iocContainer);
  this , new RegisteredDataSources_publishService_largeDisplayMouse_0(this, this.iocContainer);
}

defineSeed(723, 682, makeCastMap([Q$View]), publishService_largeDisplayMouse_0);
_.createWidgets = function createWidgets_5(){
  var elem0, elem1, panelInfo1, widget14, widget15, widget16, widget17, widget18, widget19, widget20, widget21, widget22, widget23, widget24;
  $addViewLoadHandler(this.__view, new publishService_largeDisplayMouse$1_0(this));
  widget14 = new HTMLPanel_0(' <div id="_crux_' + $getPrefix(this.__view) + 'form"><\/div> <table> <tbody> <tr> <div id="_crux_' + $getPrefix(this.__view) + 'fileUploader"><\/div> <\/tr> <\/tbody> <tbody> <tr> <div id="_crux_' + $getPrefix(this.__view) + 'labelContentLibrary"><\/div> <\/tr> <tr> <div id="_crux_' + $getPrefix(this.__view) + 'singleSelect"><\/div> <div id="_crux_' + $getPrefix(this.__view) + 'addItem"><\/div> <div id="_crux_' + $getPrefix(this.__view) + 'deleteItem"><\/div> <\/tr> <\/tbody> <\/table> <hr/> <div id="_crux_' + $getPrefix(this.__view) + 'saveConfiguration"><\/div> <div id="_crux_' + $getPrefix(this.__view) + 'publishService"><\/div> ');
  panelInfo1 = attachToDom(widget14);
  widget15 = new FormDisplay_0;
  $addWidget_0(this.__view, 'form', widget15);
  elem0 = $getElement(widget15);
  addStyleProperty(elem0, 'display', 'block');
  addStyleProperty(elem0, ' margin', ' 50px');
  widget16 = new TextBox_0;
  $addWidget_0(this.__view, 'serviceName', widget16);
  $addEntry(widget15, 'Service Name', widget16, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget17 = new TextArea_3;
  $addWidget_0(this.__view, 'serviceDescription', widget17);
  widget17.setWidth('630px');
  widget17.setHeight('243px');
  $addEntry(widget15, 'Service Description', widget17, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  $addAndReplaceElement_2(widget14, widget15, '_crux_' + $getPrefix(this.__view) + 'form');
  widget18 = createIfSupported_1();
  $addWidget_0(this.__view, 'fileUploader', widget18);
  if (isSupported_6()) {
    $setMultiple_3(widget18, true);
    $setAutoUploadFiles_0(widget18, true);
    $setFileInputText_0(widget18, 'Choose Tosca Template Upload');
    $setUrl_1(widget18, '/upload-endpoint');
  }
  isSupported_6() && $addAndReplaceElement_2(widget14, widget18, '_crux_' + $getPrefix(this.__view) + 'fileUploader');
  widget19 = new Label_0;
  $addWidget_0(this.__view, 'labelContentLibrary', widget19);
  elem1 = $getElement(widget19);
  addStyleProperty(elem1, 'fontSize', ' 20px');
  $setText_2(widget19, 'Content Library');
  $addAndReplaceElement_2(widget14, widget19, '_crux_' + $getPrefix(this.__view) + 'labelContentLibrary');
  widget20 = new SingleSelect_0;
  $addWidget_0(this.__view, 'singleSelect', widget20);
  $setVisibleItemCount(widget20, 6);
  widget20.setWidth('200px');
  $insertItem_0(widget20, 'Item One', '', 0);
  $insertItem_0(widget20, 'Item Two', '', 1);
  $insertItem_0(widget20, 'Item Three', '', 2);
  $insertItem_0(widget20, 'Item Four', '', 3);
  $addAndReplaceElement_2(widget14, widget20, '_crux_' + $getPrefix(this.__view) + 'singleSelect');
  widget21 = new Button_2;
  $addWidget_0(this.__view, 'addItem', widget21);
  $setText_5(widget21, 'Add Item');
  $addSelectHandler(widget21, new publishService_largeDisplayMouse$2_0(this));
  $addAndReplaceElement_2(widget14, widget21, '_crux_' + $getPrefix(this.__view) + 'addItem');
  widget22 = new Button_2;
  $addWidget_0(this.__view, 'deleteItem', widget22);
  $setText_5(widget22, 'Delete Item');
  $addSelectHandler(widget22, new publishService_largeDisplayMouse$3_0(this));
  $addAndReplaceElement_2(widget14, widget22, '_crux_' + $getPrefix(this.__view) + 'deleteItem');
  widget23 = new Button_2;
  $addWidget_0(this.__view, 'saveConfiguration', widget23);
  $setText_5(widget23, 'Save Configuration');
  $addSelectHandler(widget23, new publishService_largeDisplayMouse$4_0(this));
  $addAndReplaceElement_2(widget14, widget23, '_crux_' + $getPrefix(this.__view) + 'saveConfiguration');
  widget24 = new Button_2;
  $addWidget_0(this.__view, 'publishService', widget24);
  $setText_5(widget24, 'Publish Service');
  $addSelectHandler(widget24, new publishService_largeDisplayMouse$5_0(this));
  $addAndReplaceElement_2(widget14, widget24, '_crux_' + $getPrefix(this.__view) + 'publishService');
  restorePanelParent(widget14, panelInfo1);
  $addWidget_0(this.__view, 'panel', widget14);
  loggingIsEnabled() && $info_0(logger5, getMessages().viewContainerViewCreated($getId_0(this)));
}
;
_.getRegisteredControllers = function getRegisteredControllers_5(){
  return this.registeredControllers;
}
;
_.initializeLazyDependencies = function initializeLazyDependencies_5(){
  return {};
}
;
_.render_0 = function render_7(rootPanel3, renderCallback){
  if (isNull_1(this.viewPanel3)) {
    this.viewPanel3 = new HTMLPanel_0(' <div id="_crux_' + $getPrefix(this.__view) + 'panel"><\/div> ');
    rootPanel3.add_1(this.viewPanel3);
    $addAndReplaceElement_2(this.viewPanel3, dynamicCast($get_9(this.widgets, 'panel'), Q$Widget), getEnclosingPanelId('panel', this.__view));
    renderCallback.onRendered();
  }
   else {
    rootPanel3.add_1(this.viewPanel3);
    renderCallback.onRendered();
  }
  isEmpty_5(this.width_0) || $updateViewWidth_5(this, this.width_0);
  isEmpty_5(this.height_0) || $updateViewHeight_5(this, this.height_0);
  loggingIsEnabled() && $info_0(logger5, getMessages().viewContainerViewRendered($getId_0(this)));
}
;
_.updateViewHeight = function updateViewHeight_5(height){
  $updateViewHeight_5(this, height);
}
;
var logger5;
function $$init_612(){
}

function publishService_largeDisplayMouse$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_612();
}

defineSeed(724, 1, makeCastMap([Q$ViewLoadHandler]), publishService_largeDisplayMouse$1_0);
_.onLoad_0 = function onLoad_6(event_0){
  $onLoad_Exposed__3(dynamicCast(this.this$0.__view.getController('publishServiceController'), Q$PublishServiceController_ControllerProxy));
}
;
function $$init_613(){
}

function publishService_largeDisplayMouse$2_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_613();
}

defineSeed(725, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), publishService_largeDisplayMouse$2_0);
_.onSelect = function onSelect_4(event_0){
  $saveConfiguration_Exposed_(dynamicCast(this.this$0.__view.getController('publishServiceController'), Q$PublishServiceController_ControllerProxy));
}
;
function $$init_614(){
}

function publishService_largeDisplayMouse$3_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_614();
}

defineSeed(726, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), publishService_largeDisplayMouse$3_0);
_.onSelect = function onSelect_5(event_0){
  $deleteItem_Exposed_(dynamicCast(this.this$0.__view.getController('publishServiceController'), Q$PublishServiceController_ControllerProxy));
}
;
function $$init_615(){
}

function publishService_largeDisplayMouse$4_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_615();
}

defineSeed(727, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), publishService_largeDisplayMouse$4_0);
_.onSelect = function onSelect_6(event_0){
  $saveConfiguration_Exposed_(dynamicCast(this.this$0.__view.getController('publishServiceController'), Q$PublishServiceController_ControllerProxy));
}
;
function $$init_616(){
}

function publishService_largeDisplayMouse$5_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_616();
}

defineSeed(728, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), publishService_largeDisplayMouse$5_0);
_.onSelect = function onSelect_7(event_0){
  $publishService_Exposed_(dynamicCast(this.this$0.__view.getController('publishServiceController'), Q$PublishServiceController_ControllerProxy));
}
;
function $clinit_serviceCatalogList_largeDisplayMouse(){
  $clinit_serviceCatalogList_largeDisplayMouse = nullMethod;
  $clinit_View();
  logger7 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_serviceCatalogList_1largeDisplayMouse_2_classLit));
}

function $$init_617(this$static){
  this$static.__view = this$static;
  this$static.viewPanel5 = null;
}

function $updateViewHeight_6(this$static, height){
  isNotNull(this$static.viewPanel5) && this$static.viewPanel5.setHeight(height);
}

function $updateViewWidth_6(this$static, width_0){
  isNotNull(this$static.viewPanel5) && this$static.viewPanel5.setWidth(width_0);
}

function serviceCatalogList_largeDisplayMouse_0(id_0){
  $clinit_serviceCatalogList_largeDisplayMouse();
  View_0.call(this, id_0);
  $$init_617(this);
  $setTitle(this, null);
  this.iocContainer = new IocContainer_serviceCatalogList_largeDisplayMouse_0(this);
  this.registeredControllers = new RegisteredControllers_serviceCatalogList_largeDisplayMouse_0(this, this.iocContainer);
  this , new RegisteredDataSources_serviceCatalogList_largeDisplayMouse_0(this, this.iocContainer);
}

defineSeed(729, 682, makeCastMap([Q$View]), serviceCatalogList_largeDisplayMouse_0);
_.createWidgets = function createWidgets_6(){
  var widget30, widget31;
  $addViewLoadHandler(this.__view, new serviceCatalogList_largeDisplayMouse$1_0(this));
  widget30 = new DialogViewContainer_0;
  $addWidget_0(this.__view, 'dialogViewContainer', widget30);
  widget31 = new Storyboard_Impl_largeDisplayMouse_0;
  $addWidget(this.__view, 'storyboard', widget31);
  widget31.setWidth('100%');
  widget31.setHeight('100%');
  loggingIsEnabled() && $info_0(logger7, getMessages().viewContainerViewCreated($getId_0(this)));
}
;
_.getRegisteredControllers = function getRegisteredControllers_6(){
  return this.registeredControllers;
}
;
_.initializeLazyDependencies = function initializeLazyDependencies_6(){
  return {};
}
;
_.render_0 = function render_8(rootPanel5, renderCallback){
  if (isNull_1(this.viewPanel5)) {
    this.viewPanel5 = new HTMLPanel_0(' <link href="css/main.css" rel="stylesheet" type="text/css"/> <center>  <div id="_crux_' + $getPrefix(this.__view) + 'storyboard"><\/div> <\/center> ');
    rootPanel5.add_1(this.viewPanel5);
    $addAndReplaceElement_2(this.viewPanel5, dynamicCast($get_9(this.widgets, 'storyboard'), Q$Widget), getEnclosingPanelId('storyboard', this.__view));
    renderCallback.onRendered();
  }
   else {
    rootPanel5.add_1(this.viewPanel5);
    renderCallback.onRendered();
  }
  isEmpty_5(this.width_0) || $updateViewWidth_6(this, this.width_0);
  isEmpty_5(this.height_0) || $updateViewHeight_6(this, this.height_0);
  loggingIsEnabled() && $info_0(logger7, getMessages().viewContainerViewRendered($getId_0(this)));
}
;
_.updateViewHeight = function updateViewHeight_6(height){
  $updateViewHeight_6(this, height);
}
;
var logger7;
function $$init_618(){
}

function serviceCatalogList_largeDisplayMouse$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_618();
}

defineSeed(730, 1, makeCastMap([Q$ViewLoadHandler]), serviceCatalogList_largeDisplayMouse$1_0);
_.onLoad_0 = function onLoad_7(event_0){
  $onLoad_Exposed__4(dynamicCast(this.this$0.__view.getController('serviceCatalogListController'), Q$ServiceCatalogListController_ControllerProxy));
}
;
function $clinit_smartFacesResources_largeDisplayMouse(){
  $clinit_smartFacesResources_largeDisplayMouse = nullMethod;
  logger0 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_smartFacesResources_1largeDisplayMouse_2_classLit));
}

function init_4(){
  $clinit_smartFacesResources_largeDisplayMouse();
  var resource;
  if (!containsResource('smartFacesResources')) {
    resource = new SmartFacesResourcesLarge_default_StaticClientBundleGenerator_0;
    resource.css_0().ensureInjected();
    loggingIsEnabled() && $info_0(logger0, getMessages().resourceCsssInjected('CssResource'));
    addResource('smartFacesResources', resource);
    loggingIsEnabled() && $info_0(logger0, getMessages().resourcesInitialized('smartFacesResources'));
  }
}

var logger0;
function $clinit_subscribeServiceTaylorForm_largeDisplayMouse(){
  $clinit_subscribeServiceTaylorForm_largeDisplayMouse = nullMethod;
  $clinit_View();
  logger2 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_subscribeServiceTaylorForm_1largeDisplayMouse_2_classLit));
}

function $$init_619(this$static){
  this$static.__view = this$static;
  this$static.viewPanel0 = null;
}

function $updateViewHeight_7(this$static, height){
  isNotNull(this$static.viewPanel0) && this$static.viewPanel0.setHeight(height);
}

function $updateViewWidth_7(this$static, width_0){
  isNotNull(this$static.viewPanel0) && this$static.viewPanel0.setWidth(width_0);
}

function subscribeServiceTaylorForm_largeDisplayMouse_0(id_0){
  $clinit_subscribeServiceTaylorForm_largeDisplayMouse();
  View_0.call(this, id_0);
  $$init_619(this);
  $setTitle(this, null);
  this.iocContainer = new IocContainer_subscribeServiceTaylorForm_largeDisplayMouse_0(this);
  this.registeredControllers = new RegisteredControllers_subscribeServiceTaylorForm_largeDisplayMouse_0(this, this.iocContainer);
  this , new RegisteredDataSources_subscribeServiceTaylorForm_largeDisplayMouse_0(this, this.iocContainer);
}

defineSeed(732, 682, makeCastMap([Q$View]), subscribeServiceTaylorForm_largeDisplayMouse_0);
_.createWidgets = function createWidgets_7(){
  var elem, panelInfo, widget0, widget1, widget10, widget2, widget3, widget4, widget5, widget6, widget7, widget8, widget9;
  $addViewLoadHandler(this.__view, new subscribeServiceTaylorForm_largeDisplayMouse$1_0(this));
  widget0 = new HTMLPanel_0(' <div id="_crux_' + $getPrefix(this.__view) + 'form"><\/div> ');
  panelInfo = attachToDom(widget0);
  widget1 = new FormDisplay_0;
  $addWidget_0(this.__view, 'form', widget1);
  elem = $getElement(widget1);
  addStyleProperty(elem, 'display', 'block');
  addStyleProperty(elem, ' margin', ' 50px');
  widget2 = new TextBox_0;
  $addWidget_0(this.__view, 'cloudNode', widget2);
  $addEntry(widget1, 'Cloud Node', widget2, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget3 = new TextBox_0;
  $addWidget_0(this.__view, 'urlDomain', widget3);
  $addEntry(widget1, 'URL/Domain', widget3, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget4 = new TextBox_0;
  $addWidget_0(this.__view, 'operatingSystem', widget4);
  $addEntry(widget1, 'Operating System', widget4, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget5 = new TextBox_0;
  $addWidget_0(this.__view, 'cssSkin', widget5);
  $addEntry(widget1, 'CSS Skin', widget5, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget6 = new TextBox_0;
  $addWidget_0(this.__view, 'numberCPUs', widget6);
  $addEntry(widget1, "Number CPU's", widget6, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget7 = new TextBox_0;
  $addWidget_0(this.__view, 'bandwidth', widget7);
  $addEntry(widget1, 'Bandwidth', widget7, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget8 = new TextBox_0;
  $addWidget_0(this.__view, 'diskSpace', widget8);
  $addEntry(widget1, 'Disk Space', widget8, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget9 = new TextBox_0;
  $addWidget_0(this.__view, 'memoryRAM', widget9);
  $addEntry(widget1, 'Memory RAM', widget9, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget10 = new Button_2;
  $addWidget_0(this.__view, 'subscribeService', widget10);
  $setText_5(widget10, 'Subscribe Service');
  $addSelectHandler(widget10, new subscribeServiceTaylorForm_largeDisplayMouse$2_0(this));
  $addEntry(widget1, null, widget10, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  $addAndReplaceElement_2(widget0, widget1, '_crux_' + $getPrefix(this.__view) + 'form');
  restorePanelParent(widget0, panelInfo);
  $addWidget_0(this.__view, 'serviceParametersPanel', widget0);
  loggingIsEnabled() && $info_0(logger2, getMessages().viewContainerViewCreated($getId_0(this)));
}
;
_.getRegisteredControllers = function getRegisteredControllers_7(){
  return this.registeredControllers;
}
;
_.initializeLazyDependencies = function initializeLazyDependencies_7(){
  return {};
}
;
_.render_0 = function render_9(rootPanel0, renderCallback){
  if (isNull_1(this.viewPanel0)) {
    this.viewPanel0 = new HTMLPanel_0(' <center> <div id="_crux_' + $getPrefix(this.__view) + 'serviceParametersPanel"><\/div> <\/center> ');
    rootPanel0.add_1(this.viewPanel0);
    $addAndReplaceElement_2(this.viewPanel0, dynamicCast($get_9(this.widgets, 'serviceParametersPanel'), Q$Widget), getEnclosingPanelId('serviceParametersPanel', this.__view));
    renderCallback.onRendered();
  }
   else {
    rootPanel0.add_1(this.viewPanel0);
    renderCallback.onRendered();
  }
  isEmpty_5(this.width_0) || $updateViewWidth_7(this, this.width_0);
  isEmpty_5(this.height_0) || $updateViewHeight_7(this, this.height_0);
  loggingIsEnabled() && $info_0(logger2, getMessages().viewContainerViewRendered($getId_0(this)));
}
;
_.updateViewHeight = function updateViewHeight_7(height){
  $updateViewHeight_7(this, height);
}
;
var logger2;
function $$init_620(){
}

function subscribeServiceTaylorForm_largeDisplayMouse$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_620();
}

defineSeed(733, 1, makeCastMap([Q$ViewLoadHandler]), subscribeServiceTaylorForm_largeDisplayMouse$1_0);
_.onLoad_0 = function onLoad_8(event_0){
  $onLoad_Exposed__5(dynamicCast(this.this$0.__view.getController('subscribeServiceTaylorFormController'), Q$SubscribeServiceTaylorFormController_ControllerProxy));
}
;
function $$init_621(){
}

function subscribeServiceTaylorForm_largeDisplayMouse$2_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_621();
}

defineSeed(734, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), subscribeServiceTaylorForm_largeDisplayMouse$2_0);
_.onSelect = function onSelect_8(event_0){
  $subscribeService_Exposed_(dynamicCast(this.this$0.__view.getController('subscribeServiceTaylorFormController'), Q$SubscribeServiceTaylorFormController_ControllerProxy));
}
;
function $clinit_toscalist_largeDisplayMouse(){
  $clinit_toscalist_largeDisplayMouse = nullMethod;
  $clinit_View();
  logger8 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_toscalist_1largeDisplayMouse_2_classLit));
}

function $$init_622(this$static){
  this$static.__view = this$static;
  this$static.viewPanel6 = null;
}

function $updateViewHeight_8(this$static, height){
  isNotNull(this$static.viewPanel6) && this$static.viewPanel6.setHeight(height);
}

function $updateViewWidth_8(this$static, width_0){
  isNotNull(this$static.viewPanel6) && this$static.viewPanel6.setWidth(width_0);
}

function toscalist_largeDisplayMouse_0(id_0){
  $clinit_toscalist_largeDisplayMouse();
  View_0.call(this, id_0);
  $$init_622(this);
  $setTitle(this, null);
  this.iocContainer = new IocContainer_toscalist_largeDisplayMouse_0(this);
  this.registeredControllers = new RegisteredControllers_toscalist_largeDisplayMouse_0(this, this.iocContainer);
  this , new RegisteredDataSources_toscalist_largeDisplayMouse_0(this, this.iocContainer);
}

defineSeed(735, 682, makeCastMap([Q$View]), toscalist_largeDisplayMouse_0);
_.createWidgets = function createWidgets_8(){
  var elem3, widget32, widget33, widget34, widget35, widget36;
  $addViewLoadHandler(this.__view, new toscalist_largeDisplayMouse$1_0(this));
  widget32 = new StyledPanel_0;
  $addWidget_0(this.__view, 'panel', widget32);
  widget33 = new FormDisplay_0;
  $addWidget_0(this.__view, 'form', widget33);
  elem3 = $getElement(widget33);
  addStyleProperty(elem3, 'display', 'block');
  addStyleProperty(elem3, ' margin', ' 50px');
  widget34 = new TextBox_0;
  $addWidget_0(this.__view, 'nameTextBox', widget34);
  $setValue_0(widget34, 'name');
  $addEntry(widget33, 'What is your name?', widget34, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget35 = new Button_2;
  $addWidget_0(this.__view, 'sayOK', widget35);
  $setText_5(widget35, 'sayOK');
  $addSelectHandler(widget35, new toscalist_largeDisplayMouse$2_0(this));
  $addEntry(widget33, null, widget35, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  widget36 = new Button_2;
  $addWidget_0(this.__view, 'changeView', widget36);
  $setText_5(widget36, 'Back');
  $addSelectHandler(widget36, new toscalist_largeDisplayMouse$3_0(this));
  $addEntry(widget33, null, widget36, ($clinit_HasHorizontalAlignment() , ALIGN_LEFT));
  $add_13(widget32, widget33);
  loggingIsEnabled() && $info_0(logger8, getMessages().viewContainerViewCreated($getId_0(this)));
}
;
_.getRegisteredControllers = function getRegisteredControllers_8(){
  return this.registeredControllers;
}
;
_.initializeLazyDependencies = function initializeLazyDependencies_8(){
  return {};
}
;
_.render_0 = function render_10(rootPanel6, renderCallback){
  if (isNull_1(this.viewPanel6)) {
    this.viewPanel6 = new HTMLPanel_0(' <center> <div id="_crux_' + $getPrefix(this.__view) + 'panel"><\/div> <\/center> ');
    rootPanel6.add_1(this.viewPanel6);
    $addAndReplaceElement_2(this.viewPanel6, dynamicCast($get_9(this.widgets, 'panel'), Q$Widget), getEnclosingPanelId('panel', this.__view));
    renderCallback.onRendered();
  }
   else {
    rootPanel6.add_1(this.viewPanel6);
    renderCallback.onRendered();
  }
  isEmpty_5(this.width_0) || $updateViewWidth_8(this, this.width_0);
  isEmpty_5(this.height_0) || $updateViewHeight_8(this, this.height_0);
  loggingIsEnabled() && $info_0(logger8, getMessages().viewContainerViewRendered($getId_0(this)));
}
;
_.updateViewHeight = function updateViewHeight_8(height){
  $updateViewHeight_8(this, height);
}
;
var logger8;
function $$init_623(){
}

function toscalist_largeDisplayMouse$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_623();
}

defineSeed(736, 1, makeCastMap([Q$ViewLoadHandler]), toscalist_largeDisplayMouse$1_0);
_.onLoad_0 = function onLoad_9(event_0){
  $onModuleLoad_Exposed_(dynamicCast(this.this$0.__view.getController('toscaListController'), Q$ToscaListController_ControllerProxy));
}
;
function $$init_624(){
}

function toscalist_largeDisplayMouse$2_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_624();
}

defineSeed(737, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), toscalist_largeDisplayMouse$2_0);
_.onSelect = function onSelect_9(event_0){
  $sayOK_Exposed_(dynamicCast(this.this$0.__view.getController('toscaListController'), Q$ToscaListController_ControllerProxy));
}
;
function $$init_625(){
}

function toscalist_largeDisplayMouse$3_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_625();
}

defineSeed(738, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), toscalist_largeDisplayMouse$3_0);
_.onSelect = function onSelect_10(event_0){
  $changeView_Exposed__0(dynamicCast(this.this$0.__view.getController('toscaListController'), Q$ToscaListController_ControllerProxy));
}
;
function $clinit_toscaui_index_html_largeDisplayMouse(){
  $clinit_toscaui_index_html_largeDisplayMouse = nullMethod;
  $clinit_View();
  logger_5 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_toscaui_1index_1html_1largeDisplayMouse_2_classLit));
}

function $$init_626(this$static){
  this$static.__view = this$static;
  this$static.viewPanel = null;
}

function $updateViewHeight_9(this$static, height){
  isNotNull(this$static.viewPanel) && this$static.viewPanel.setHeight(height);
}

function $updateViewWidth_9(this$static, width_0){
  isNotNull(this$static.viewPanel) && this$static.viewPanel.setWidth(width_0);
}

function toscaui_index_html_largeDisplayMouse_0(id_0){
  $clinit_toscaui_index_html_largeDisplayMouse();
  View_0.call(this, id_0);
  $$init_626(this);
  $setTitle(this, null);
  this.iocContainer = new IocContainer_toscaui_index_html_largeDisplayMouse_0(this);
  this.registeredControllers = new RegisteredControllers_toscaui_index_html_largeDisplayMouse_0(this, this.iocContainer);
  this , new RegisteredDataSources_toscaui_index_html_largeDisplayMouse_0(this, this.iocContainer);
  init_4();
  init_5();
}

defineSeed(739, 682, makeCastMap([Q$View]), toscaui_index_html_largeDisplayMouse_0);
_.createWidgets = function createWidgets_9(){
  var widget;
  $setHeight_2(this, '100%');
  widget = new HorizontalSwapContainer_0;
  $addWidget_0(this.__view, 'views', widget);
  $loadView_1(widget, 'login', true);
  $loadView_1(widget, 'main', false);
  $loadView_1(widget, 'toscalist', false);
  loggingIsEnabled() && $info_0(logger_5, getMessages().viewContainerViewCreated($getId_0(this)));
}
;
_.getRegisteredControllers = function getRegisteredControllers_9(){
  return this.registeredControllers;
}
;
_.initializeLazyDependencies = function initializeLazyDependencies_9(){
  return {};
}
;
_.render_0 = function render_11(rootPanel, renderCallback){
  if (isNull_1(this.viewPanel)) {
    this.viewPanel = new HTMLPanel_0('   <div id="_crux_' + $getPrefix(this.__view) + 'views"><\/div> ');
    rootPanel.add_1(this.viewPanel);
    $addAndReplaceElement_2(this.viewPanel, dynamicCast($get_9(this.widgets, 'views'), Q$Widget), getEnclosingPanelId('views', this.__view));
    renderCallback.onRendered();
  }
   else {
    rootPanel.add_1(this.viewPanel);
    renderCallback.onRendered();
  }
  isEmpty_5(this.width_0) || $updateViewWidth_9(this, this.width_0);
  isEmpty_5(this.height_0) || $updateViewHeight_9(this, this.height_0);
  loggingIsEnabled() && $info_0(logger_5, getMessages().viewContainerViewRendered($getId_0(this)));
}
;
_.updateViewHeight = function updateViewHeight_9(height){
  $updateViewHeight_9(this, height);
}
;
var logger_5;
function $clinit_xStandardResources_largeDisplayMouse(){
  $clinit_xStandardResources_largeDisplayMouse = nullMethod;
  logger1 = getLogger($getName_2(Lorg_cruxframework_crux_core_client_screen_views_xStandardResources_1largeDisplayMouse_2_classLit));
}

function init_5(){
  $clinit_xStandardResources_largeDisplayMouse();
  var resource0;
  if (!containsResource('xStandardResources')) {
    resource0 = new XStandardResourcesLarge_default_StaticClientBundleGenerator_0;
    resource0.css_1().ensureInjected();
    loggingIsEnabled() && $info_0(logger1, getMessages().resourceCsssInjected('CssXStandardLarge'));
    addResource('xStandardResources', resource0);
    loggingIsEnabled() && $info_0(logger1, getMessages().resourcesInitialized('xStandardResources'));
  }
}

var logger1;
function $$init_627(){
}

function ScreenBlocker_0(blockingDivStyleName){
  $clinit_UIObject();
  Composite_0.call(this);
  $$init_627();
  this.screenBlockerImpl = new ScreenBlocker$ScreenBlockerOtherBrowsers_0;
  $initWidget(this, this.screenBlockerImpl);
  this.setStyleName(blockingDivStyleName);
}

function expandElementToScreen(widget){
  var style;
  style = $getStyle($getElement(widget));
  $setProperty_0(style, 'position', 'absolute');
  $setPropertyPx(style, 'top', 0);
  $setPropertyPx(style, 'left', 0);
  $setProperty_0(style, 'width', '100%');
  $setProperty_0(style, 'height', '100%');
}

defineSeed(741, 365, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]), ScreenBlocker_0);
function $$init_628(){
}

function ScreenBlocker$ScreenBlockerImpl_0(){
  Composite_0.call(this);
  $$init_628();
  this.wrapper = new SimplePanel_0;
  $initWidget(this, this.wrapper);
  this.wrapper.setStyleName('crux-ScreenBlocker');
}

defineSeed(742, 365, makeCastMap([Q$HasAttachHandlers, Q$EventHandler, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]));
function $$init_629(){
}

function ScreenBlocker$ScreenBlockerOtherBrowsers_0(){
  var blockingDiv;
  ScreenBlocker$ScreenBlockerImpl_0.call(this);
  $$init_629();
  blockingDiv = new SimplePanel_0;
  expandElementToScreen(blockingDiv);
  $add_2(this.wrapper, blockingDiv);
}

defineSeed(743, 742, makeCastMap([Q$HasAttachHandlers, Q$EventHandler, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]), ScreenBlocker$ScreenBlockerOtherBrowsers_0);
function isEmpty_5(value_0){
  return jsEquals(value_0, null) || $length_1(value_0) == 0;
}

function unsafeEquals(a, b){
  return jsEquals(a, b);
}

function addStyleProperty(element, camelizedName, value_0){
  if (!(isNotNull(element) && jsNotEquals(camelizedName, null) && jsNotEquals(value_0, null))) {
    debugger;
    throw makeAssertionError();
  }
  try {
    addStylePropertyNative(element, $trim(camelizedName), $trim(value_0));
  }
   catch ($e0) {
    $e0 = wrap($e0);
    if (instanceOf($e0, Q$Throwable)) {
      $e0;
      getErrorHandler().handleError(getMessages().styleErrorInvalidProperty(camelizedName, value_0));
      throw new RuntimeException_1(getMessages().styleErrorInvalidProperty(camelizedName, value_0));
    }
     else 
      throw unwrap($e0);
  }
}

function addStylePropertyNative(element, camelizedName, value_0){
  element.style[camelizedName] = value_0;
}

function $$init_630(){
}

function SocketCloseEvent_0(socket, wasClean, code_0, reason){
  CruxEvent_0.call(this, socket, $getUrl(socket));
  $$init_630();
  this , wasClean;
  this , code_0;
  this , reason;
}

defineSeed(746, 615, {}, SocketCloseEvent_0);
function $$init_631(){
}

function SocketErrorEvent_0(socket){
  CruxEvent_0.call(this, socket, $getUrl(socket));
  $$init_631();
}

defineSeed(747, 615, {}, SocketErrorEvent_0);
function $$init_632(){
}

function $getMessage_2(this$static){
  return this$static.message_0;
}

function SocketMessageEvent_0(socket, message){
  CruxEvent_0.call(this, socket, $getUrl(socket));
  $$init_632();
  this.message_0 = message;
}

defineSeed(748, 615, {}, SocketMessageEvent_0);
function $$init_633(){
}

function SocketOpenEvent_0(socket){
  CruxEvent_0.call(this, socket, $getUrl(socket));
  $$init_633();
}

defineSeed(749, 615, {}, SocketOpenEvent_0);
function $$init_634(this$static){
  this$static.messageHandlers = new FastList_0;
  this$static.openHandlers = new FastList_0;
  this$static.closeHandlers = new FastList_0;
  this$static.errorHandlers = new FastList_0;
}

function $addCloseHandler(this$static, handler){
  $add_9(this$static.closeHandlers, handler);
  return new WebSocket$3_0(this$static, handler);
}

function $addErrorHandler(this$static, handler){
  $add_9(this$static.errorHandlers, handler);
  return new WebSocket$4_0(this$static, handler);
}

function $addMessageHandler(this$static, handler){
  $add_9(this$static.messageHandlers, handler);
  return new WebSocket$1_0(this$static, handler);
}

function $addOpenHandler(this$static, handler){
  $add_9(this$static.openHandlers, handler);
  return new WebSocket$2_0(this$static, handler);
}

function $defineSocketJS(this$static, socketJS){
  isNotNull(this$static.socketJS) && $removeOldHandlers(this$static.socketJS);
  this$static.socketJS = socketJS;
  $initializeSocketHandlers(this$static, socketJS);
}

function $getUrl(this$static){
  return $getUrl_0(this$static.socketJS);
}

function $initializeSocketHandlers(socket, socketJS){
  socketJS.onerror = function(){
    socket.fireErrorEvent();
  }
  ;
  socketJS.onopen = function(){
    socket.fireOpenEvent();
  }
  ;
  socketJS.onmessage = function(event_0){
    socket.fireMessageEvent(event_0.data);
  }
  ;
  socketJS.onclose = function(event_0){
    socket.fireCloseEvent(event_0.wasClean, event_0.code, event_0.reason);
  }
  ;
}

function $reconnect(this$static){
  var webSocketJS;
  isNotNull(this$static.protocols)?(webSocketJS = createSocket_0(this$static.url_0, this$static.protocols)):jsNotEquals(this$static.protocol, null)?(webSocketJS = createSocket_1(this$static.url_0, this$static.protocol)):(webSocketJS = createSocket(this$static.url_0));
  $defineSocketJS(this$static, webSocketJS);
}

function $removeOldHandlers(socketJS){
  socketJS.onerror = null;
  socketJS.onopen = null;
  socketJS.onmessage = null;
  socketJS.onclose = null;
}

function WebSocket_1(socketJS){
  Object_1.call(this);
  $$init_634(this);
  $defineSocketJS(this, socketJS);
}

function createIfSupported_0(url_0){
  var socket, webSocketJS;
  if (isSupported_3()) {
    webSocketJS = createSocket(url_0);
    socket = new WebSocket_1(webSocketJS);
    socket.url_0 = url_0;
    return socket;
  }
  return null;
}

function isSupported_3(){
  if ($wnd.WebSocket) {
    return true;
  }
  return false;
}

defineSeed(750, 1, {}, WebSocket_1);
_.fireCloseEvent = function fireCloseEvent(wasClean, code_0, reason){
  var event_0, handler, i;
  event_0 = new SocketCloseEvent_0(this, wasClean, code_0, reason);
  for (i = 0; i < $size_5(this.closeHandlers); i++) {
    handler = dynamicCast($get_8(this.closeHandlers, i), Q$SocketCloseHandler);
    handler.onClose_0(event_0);
  }
}
;
_.fireErrorEvent = function fireErrorEvent(){
  var event_0, handler, i;
  event_0 = new SocketErrorEvent_0(this);
  for (i = 0; i < $size_5(this.errorHandlers); i++) {
    handler = dynamicCast($get_8(this.errorHandlers, i), Q$SocketErrorHandler);
    handler.onError_1(event_0);
  }
}
;
_.fireMessageEvent = function fireMessageEvent(message){
  var event_0, handler, i;
  event_0 = new SocketMessageEvent_0(this, message);
  for (i = 0; i < $size_5(this.messageHandlers); i++) {
    handler = dynamicCast($get_8(this.messageHandlers, i), Q$SocketMessageHandler);
    handler.onMessage(event_0);
  }
}
;
_.fireOpenEvent = function fireOpenEvent(){
  var event_0, handler, i;
  event_0 = new SocketOpenEvent_0(this);
  for (i = 0; i < $size_5(this.openHandlers); i++) {
    handler = dynamicCast($get_8(this.openHandlers, i), Q$SocketOpenHandler);
    handler.onOpen(event_0);
  }
}
;
function $$init_635(){
}

function WebSocket$1_0(this$0, val$handler){
  this.this$0 = this$0;
  this.val$handler = val$handler;
  Object_1.call(this);
  $$init_635();
}

defineSeed(751, 1, {}, WebSocket$1_0);
_.removeHandler = function removeHandler_5(){
  var index_0;
  index_0 = $indexOf_6(this.this$0.messageHandlers, this.val$handler);
  index_0 >= 0 && $remove_8(this.this$0.messageHandlers, index_0);
}
;
function $$init_636(){
}

function WebSocket$2_0(this$0, val$handler){
  this.this$0 = this$0;
  this.val$handler = val$handler;
  Object_1.call(this);
  $$init_636();
}

defineSeed(752, 1, {}, WebSocket$2_0);
_.removeHandler = function removeHandler_6(){
  var index_0;
  index_0 = $indexOf_6(this.this$0.openHandlers, this.val$handler);
  index_0 >= 0 && $remove_8(this.this$0.openHandlers, index_0);
}
;
function $$init_637(){
}

function WebSocket$3_0(this$0, val$handler){
  this.this$0 = this$0;
  this.val$handler = val$handler;
  Object_1.call(this);
  $$init_637();
}

defineSeed(753, 1, {}, WebSocket$3_0);
_.removeHandler = function removeHandler_7(){
  var index_0;
  index_0 = $indexOf_6(this.this$0.closeHandlers, this.val$handler);
  index_0 >= 0 && $remove_8(this.this$0.closeHandlers, index_0);
}
;
function $$init_638(){
}

function WebSocket$4_0(this$0, val$handler){
  this.this$0 = this$0;
  this.val$handler = val$handler;
  Object_1.call(this);
  $$init_638();
}

defineSeed(754, 1, {}, WebSocket$4_0);
_.removeHandler = function removeHandler_8(){
  var index_0;
  index_0 = $indexOf_6(this.this$0.errorHandlers, this.val$handler);
  index_0 >= 0 && $remove_8(this.this$0.errorHandlers, index_0);
}
;
function $getUrl_0(this$static){
  return this$static.url;
}

function createSocket(url_0){
  return new $wnd.WebSocket(url_0);
}

function createSocket_0(url_0, protocols){
  return new $wnd.WebSocket(url_0, protocols);
}

function createSocket_1(url_0, protocol){
  return new $wnd.WebSocket(url_0, protocol);
}

function $send_1(this$static, paramName, file){
  var fd = new FormData;
  fd.append(paramName, file);
  this$static.send(fd);
}

function $setOnProgressHandler(this$static, handler){
  this$static.upload.onprogress = function(e){
    if (e.lengthComputable) {
      handler.onProgress(e.loaded, e.total);
    }
  }
  ;
}

function create_10(){
  return $cast(create_8());
}

function isSupported_4(){
  try {
    var xhr = new $wnd.XMLHttpRequest;
    if ('upload' in xhr) {
      return true;
    }
  }
   catch (e) {
  }
  return false;
}

function $clinit_SmartFacesResourcesLarge_default_StaticClientBundleGenerator(){
  $clinit_SmartFacesResourcesLarge_default_StaticClientBundleGenerator = nullMethod;
  _instance0_0 = new SmartFacesResourcesLarge_default_StaticClientBundleGenerator_0;
}

function $$init_639(){
}

function $cssInitializer(this$static){
  css_0 = new SmartFacesResourcesLarge_default_StaticClientBundleGenerator$1_0(this$static);
}

function $svgIconClose(){
  return get_33();
}

function $svgIconCloseInitializer(){
  svgIconClose = new DataResourcePrototype_0('svgIconClose', fromTrustedString_0(getModuleBaseForStaticFiles() + 'C0D8F8B5B9D6CB9A31EB24E489C4A3D5.cache.svg'));
}

function SmartFacesResourcesLarge_default_StaticClientBundleGenerator_0(){
  $clinit_SmartFacesResourcesLarge_default_StaticClientBundleGenerator();
  Object_1.call(this);
  $$init_639();
}

defineSeed(757, 1, {}, SmartFacesResourcesLarge_default_StaticClientBundleGenerator_0);
_.css_0 = function css_1(){
  return get_32();
}
;
var _instance0_0, css_0, svgIconClose;
function $$init_640(){
}

function $getText_2(){
  return $isRTL_0(getCurrentLocale())?'html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;}body{margin:0;}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block;}audio,canvas,progress,video{display:inline-block;vertical-align:baseline;}[hidden],template{display:none;}a{background:0 0;}a:active,a:hover{outline:0;}abbr[title]{border-bottom:1px dotted;}b,strong{font-weight:700;}dfn{font-style:italic;}h1{font-size:2em;margin:0.67em 0;}mark{background:#ff0;color:#000;}small{font-size:80%;}sub{font-size:75%;line-height:0;position:relative;vertical-align:baseline;bottom:-0.25em;}sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;top:-0.5em;}img{border:0;}figure{margin:1em 40px;}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0;}pre{overflow:auto;}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em;}button{color:inherit;font:inherit;margin:0;overflow:visible;text-transform:none;-webkit-appearance:button;cursor:pointer;}input{color:inherit;font:inherit;margin:0;line-height:normal;}optgroup{color:inherit;font:inherit;margin:0;}select{color:inherit;font:inherit;margin:0;text-transform:none;}textarea{color:inherit;font:inherit;margin:0;overflow:auto;}html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer;}button[disabled],html input[disabled]{cursor:default;}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0;}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto;}input[type="search"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none;}fieldset{border:1px solid silver;margin:0 2px;padding:0.35em 0.625em 0.75em;}legend{border:0;padding:0;}optgroup{font-weight:700;}table{border-collapse:collapse;border-spacing:0;}td,th{padding:0;}:focus,:active,:hover{outline:none;-webkit-tap-hightlight-color:rgba(0, 0, 0, 0);}*,:before,:after{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;}[disabled]{cursor:not-allowed !important;}.faces--clearfix:before{content:" ";display:table;}.faces--clearfix:after{content:" ";display:table;clear:both;}.faces-noSelectable,.faces-noSelectable *{-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}hr{background:#e3e3e3;height:1px;margin:10px 0;border:none;}ul{margin:0;padding:0;list-style:none;}html{height:100%;margin:0;padding:0;}body{height:100%;margin:0;padding:0;font-family:Arial, Helvetica Neue, Helvetica, sans-serif;font-size:13px;color:#111;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;}.faces-overlay{z-index:5;}.faces-popup{z-index:6;}.faces-WaitBox{z-index:7;}.faces-Label{color:#1c5994;}.faces-Menu{background:#4496c6;border:1px solid #1a6299;box-shadow:0 -2px 0 rgba(0, 0, 0, 0.03) inset, 0 2px 2px rgba(0, 0, 0, 0.07);position:relative;}.faces-Menu .faces-Label,.faces-Menu .gwt-Label,.faces-Menu .gwt-Anchor,.faces-Menu .crux-Anchor{color:#fff;text-shadow:none;}.faces-Menu>.faces-Menu-ul>.faces-Menu-li .faces-Menu-li .faces-Label{color:#343434;}.faces-Menu a{text-decoration:none;}.faces-Menu *{-webkit-transition:all 0.1s linear;-moz-transition:all 0.1s linear;-ms-transition:all 0.1s linear;transition:all 0.1s linear;}.faces-Menu-openCloseTriggerHelper{border:none;padding:0;z-index:2;}.faces-Menu.faces-Menu-dropdown .faces-Menu-ul .faces-Menu-ul{background:#fff;box-shadow:0 5px 25px rgba(0, 0, 0, 0.3);border:1px solid #aaa;}.faces-Menu.faces-Menu-dropdown>.faces-Menu-ul>.faces-Menu-li:hover{background:rgba(0, 0, 0, 0.15);}.faces-Menu.faces-Menu-dropdown .faces-Menu-ul .faces-Menu-ul .faces-Menu-li{font-size:13px;cursor:pointer;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal{width:100%;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li>.faces-Menu-ul{border-top:1px solid #1a6299;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li{border-left:1px solid #1a6299;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-hasChildren{padding-left:20px;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li.faces-Menu-hasChildren{padding-left:30px;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal .faces-Menu-li>.faces-Menu-ul .faces-Menu-li:hover{background:#eee;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{content:"";position:absolute;left:13px;top:50%;margin-top:-4px;background:rgba(0, 0, 0, 0);width:6px;height:6px;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);transform:rotate(45deg);border-left:2px solid #fff;border-bottom:2px solid #fff;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{content:"";position:absolute;left:13px;top:16px;background:rgba(0, 0, 0, 0);width:6px;height:6px;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);transform:rotate(45deg);border-left:2px solid #bbb;border-top:2px solid #bbb;}.faces-Menu.faces-Menu-dropdown.faces-Menu-vertical,.faces-Menu.faces-Menu-tree.faces-Menu-vertical,.faces-Menu.faces-Menu-accordion.faces-Menu-vertical{width:200px;}.faces-Menu.faces-Menu-dropdown.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-li{border-bottom:1px solid #1a6299;padding:10px;}.faces-Menu.faces-Menu-dropdown.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-li:last-child{border-bottom:none;}.faces-Menu.faces-Menu-dropdown.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{position:absolute;left:13px;top:16px;background:rgba(0, 0, 0, 0);width:6px;height:6px;-webkit-transform:rotate(45deg);border-left:2px solid #fff;border-top:2px solid #fff;}.faces-Menu.faces-Menu-dropdown.faces-Menu-vertical .faces-Menu-li .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{border-left:2px solid #aaa;border-top:2px solid #aaa;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical>.faces-Menu-ul{position:relative;padding:10px;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li{padding:5px 10px;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{width:13px;height:13px;border:1px solid #ccc;background:#eee;position:absolute;right:-6px;top:8px;border-radius:2px;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:hover{background:#fff;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before{content:"";width:1px;height:7px;position:absolute;font-weight:bold;background:#666;top:2px;right:5px;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{content:"";width:7px;height:1px;position:absolute;font-weight:bold;background:#666;top:5px;right:2px;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren.faces-Menu-open>.faces-Menu-openCloseTriggerHelper:before,.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li .faces-Menu-ul{display:none;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren.faces-Menu-open:before{content:"";border-right:1px dotted #ccc;width:1px;height:calc(100% - 6px);position:absolute;top:16px;right:0;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren.faces-Menu-open>.faces-Menu-ul{display:block;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-ul>.faces-Menu-li:after{content:"";border-top:1px dotted #ccc;width:15px;height:1px;position:absolute;top:14px;right:-13px;}.faces-Menu.faces-Menu-accordion>.faces-Menu-ul>.faces-Menu-li>.faces-SelectablePanel>.faces-Label{margin-top:-1px;font-weight:bold;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-li{border-bottom:1px solid #1a6299;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-li:last-child{border-bottom:none;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-li .faces-Menu-ul{display:none;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-li.faces-Menu-open>.faces-Menu-ul{display:block;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-li .faces-Menu-ul .faces-Label{border-bottom:1px solid rgba(0, 0, 0, 0.13);padding:5px;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul .faces-Menu-ul{background:#fff;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul .faces-Menu-ul .faces-Menu-ul{background:#eee;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul .faces-Menu-ul .faces-Menu-ul .faces-Menu-ul{background:#aaa;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{position:absolute;left:0;top:5px;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before,.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{content:"";position:absolute;background:#fff;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-ul .faces-Menu-ul .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before,.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-ul .faces-Menu-ul .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{content:"";position:absolute;background:#aaa;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before{top:13px;left:5px;width:10px;height:2px;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{top:9px;left:9px;width:2px;height:10px;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-hasChildren .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before{top:8px;left:5px;width:10px;height:2px;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-hasChildren .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{top:4px;left:9px;width:2px;height:10px;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-hasChildren.faces-Menu-open>.faces-Menu-openCloseTriggerHelper:after{display:none;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-ul .faces-Menu-li .faces-Menu-ul{width:300px;background:#fff;font-size:12px;display:none;overflow-y:auto;border-left:1px solid #ccc;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-ul .faces-Menu-li .faces-Menu-ul .faces-Menu-ul{border-left:none;background:#fafafa;font-size:11px;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li>.faces-SelectablePanel{border-bottom:1px solid #1a6299;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li:last-child>.faces-SelectablePanel{border-bottom:none;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li>.faces-Menu-ul .faces-Menu-li .faces-Label{padding:10px;border-bottom:1px solid #ccc;padding:10px;border-bottom:1px solid #ccc;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-ul .faces-Menu-ul .faces-Menu-openCloseTriggerHelper{position:absolute;left:14px;top:17px;width:2px;height:2px;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before,.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{content:"";position:absolute;background:#fff;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-ul .faces-Menu-ul .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before,.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-ul .faces-Menu-ul .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{content:"";position:absolute;background:#aaa;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-hasChildren.faces-Menu-open>.faces-Menu-openCloseTriggerHelper:after{display:none;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before{top:13px;right:13px;width:10px;height:2px;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{top:9px;right:17px;width:2px;height:10px;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-hasChildren .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before{top:0;right:-2px;width:10px;height:2px;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-hasChildren .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{top:-4px;left:-2px;right:initial;width:2px;height:10px;}.faces-Menu.faces-Menu-accordion>.faces-Menu-ul>.faces-Menu-li:last-child>.faces-SelectablePanel>.faces-Label{border-bottom:none;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-ul .faces-Menu-li.faces-Menu-open:last-child>.faces-Menu-ul{border-right:1px solid #ccc;border-left:0;}.faces-Menu.faces-Menu-slide{width:200px;}.faces-Menu.faces-Menu-slide .faces-Menu-ul .faces-Menu-ul{-webkit-transition:all 0.5s cubic-bezier(0.14, 0.97, 0.46, 1);transition:all 0.5s cubic-bezier(0.14, 0.97, 0.46, 1);background:#f5f5f5;}.faces-Menu.faces-Menu-slide .faces-Menu-ul .faces-Menu-li{height:40px;border-bottom:1px solid #1a6299;position:initial;}.faces-Menu.faces-Menu-slide .faces-Menu-ul .faces-Menu-li:last-child{border-bottom:none;}.faces-Menu.faces-Menu-slide .faces-Menu-ul .faces-Menu-li:hover{background:rgba(0, 0, 0, 0.03);}.faces-Menu.faces-Menu-slide .faces-Menu-ul .faces-Menu-li .faces-SelectablePanel{padding:10px;}.faces-Menu.faces-Menu-slide .faces-Menu-li.faces-Menu-open>.faces-Menu-ul{box-shadow:-1px 0 0 rgba(0, 0, 0, 0.2);}.faces-Menu.faces-Menu-slide>.faces-Menu-ul>.faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{float:left;margin-top:-22px;margin-left:12px;background:rgba(0, 0, 0, 0);width:6px;height:6px;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);transform:rotate(45deg);border-left:2px solid #fff;border-top:2px solid #fff;z-index:1;}.faces-Menu.faces-Menu-slide .faces-Menu-ul .faces-Menu-ul .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{float:left;margin-top:-22px;margin-left:12px;background:rgba(0, 0, 0, 0);width:6px;height:6px;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);transform:rotate(45deg);border-left:2px solid #808080;border-top:2px solid #808080;z-index:1;}.faces-Menu.faces-Menu-slide .faces-Menu-closeTriggerSliderHelper{width:100%;height:22px;display:block;border:0;background:rgba(0, 0, 0, 0.06);box-shadow:0 -1px 0 rgba(0, 0, 0, 0.1) inset;position:relative;}.faces-Menu.faces-Menu-slide .faces-Menu-closeTriggerSliderHelper:hover{background:rgba(0, 0, 0, 0.1);}.faces-Menu.faces-Menu-slide .faces-Menu-closeTriggerSliderHelper:before{content:"";position:absolute;right:5px;top:7px;background:rgba(0, 0, 0, 0);width:6px;height:6px;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);transform:rotate(45deg);border-right:2px solid #808080;border-bottom:2px solid #808080;z-index:1;}a.faces-Button{white-space:nowrap;}a.faces-Button:hover{text-decoration:none;color:#fff;}.faces-Button{background:#4496c6;border:1px solid #1a6299;padding:8px 14px;border-radius:1px;font-size:100%;color:#fff;text-shadow:0 1px 0 rgba(0, 0, 0, 0.15);}.faces-Button:hover{border-color:#084471;}.faces-Button:focus{box-shadow:0 0 0 3px rgba(0, 0, 0, 0.22);}.faces-Button:focus:active{box-shadow:0 2px 2px rgba(0, 0, 0, 0.2) inset, 0 0 0 3px rgba(0, 0, 0, 0.12);}.faces-Button.faces--small,.faces--small .faces-Button{font-size:0.85em;padding:5px 8px;}.faces--group .faces-Button{border-radius:0;margin-right:-1px;position:relative;}.faces--group .faces-Button:hover,.faces--group .faces-Button:focus{z-index:2;}.faces--group .faces-Button:first-child{border-radius:2px 0 0 2px;}.faces--group .faces-Button:last-child{border-radius:0 2px 2px 0;}td .faces--group,td>div>.faces--group{margin:5px;}.faces-Button:disabled{background:#e5e5e5;border:1px solid #a5a5a5;color:#9c9c9c;text-shadow:0 1px 0 rgba(255, 255, 255, 0.6);}.faces-overlay{position:fixed;top:0;right:0;width:100%;height:100%;background:rgba(0, 0, 0, 0.3);}.faces-popup{background-color:#fff;border-radius:3px;box-shadow:0 0 0 1px rgba(0, 0, 0, 0.2), 0 5px 20px rgba(0, 0, 0, 0.4) !important;position:fixed;overflow:hidden;}.faces-popup-header{background:#f7f7f7;color:#5491b4;box-shadow:0 -2px #eaeaea inset, 0 1px 0 #d1d1d1;padding:11px 2px;position:relative;min-height:26px;}.faces-popup-title{text-align:center;color:#5491b4;}.faces-popup-dragger{width:100%;height:100%;position:absolute;top:0;right:0' + (';cursor:move;}.faces-popup-close{width:16px;height:16px;background:' + ("url('" + $svgIconClose().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center') + ';background-size:' + '100% auto' + ';border:' + 'none' + ';position:' + 'absolute' + ';left:' + '10px' + ';top:' + '5px' + ';z-index:' + '2' + ';}.faces-popup-body{padding:') + '10px;}.faces-popup-resizer{position:absolute;height:12px;width:12px;bottom:0;left:0;border-top:rgba(0, 0, 0, 0);border-right:rgba(0, 0, 0, 0);cursor:nwse-resize;border-bottom-left-radius:3px;background:linear-gradient(-45deg, rgba(0, 0, 0, 0) 50%, #aaa 50.1%, #eee 60%)' + ';background:-webkit-linear-gradient(-45deg, rgba(0, 0, 0, 0) 50%, #aaa 50.1%, #eee 60%);padding:10px;}.faces-popup-resizer:before{content:"";position:absolute;height:7px;left:3px;border-top:solid 1px #aaa;cursor:nwse-resize;border-bottom-left-radius:2px;-webkit-transform:rotate(135deg);-moz-transform:' + 'rotate(135deg);-ms-transform:rotate(135deg);transform:rotate(135deg);width:11px;bottom:5px;}.faces-popup-resizer:after{content:"";position:absolute;height:7px;left:3px;border-top:solid 1px #aaa;cursor:nwse-resize' + ';border-bottom-left-radius:2px;-webkit-transform:rotate(135deg);-moz-transform:rotate(135deg);-ms-transform:rotate(135deg);transform:rotate(135deg);width:8px;bottom:3px;}.faces-popup-actionPanel{padding:10px;margin:10px -10px -10px;display:flex;justify-content:' + 'space-around;}.faces-popup-actionPanel .faces-Button{min-width:80px;}.faces-MessageBox .faces-popup-header{background:none;box-shadow:none;}.faces-MessageBox .faces-popup-body{text-align:center;}.faces-Progress{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;height:3px;width:100%' + ';}.faces-Progress::-webkit-progress-bar{background:#eee;border-radius:3px;position:relative;overflow:hidden;}.faces-Progress::-webkit-progress-value{background:#4496c6;}.faces-Progress:not([value])::-webkit-progress-value{background:linear-gradient(-90deg, rgba(68, 150, 198, 1), rgba(68, 150, 198, 0));width:50% !important;-webkit-animation:faces-ProgressUndefined 0.8s linear infinite;-moz-animation:faces-ProgressUndefined 0.8s linear infinite;position:absolute;border-radius:' + '3px;}@-webkit-keyframes faces-ProgressUndefined\n{\n\t0%   {left:-50%;}\n\t100%  {left:101%;}\n}@-moz-keyframes faces-ProgressUndefined\n{\n\t0%   {left:-50%;}\n\t100%  {left:101%;}\n}.dragging,.unselectable *{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;}@-webkit-keyframes faces-InfinityProgressBarAnimation\n{\n\t0%   {width:0%;left:0%}\n\t19%  {width:40%;left:0%;}\n\t38%  {width:0%;left:50%;}\n\t57%  {width:40%;left:50%;}\n\t75%  {width:0%;left:100%;}\n\t100% {width:100%;left:0%}\n}@keyframes faces-InfinityProgressBarAnimation\n{\n\t0%   {width:0%;left:0%}\n\t19%  {width:40%;left:0%;}\n\t38%  {width:0%;left:50%;}\n\t57%  {width:40%;left:50%;}\n\t75%  {width:0%;left:100%;}\n\t100% {width:100%;left:0%}\n}.faces-progressBar{width:60%;height:3px;position:relative;background:#eee;margin:18px auto 0;}.faces-progressBar .faces-fill{height:100%;background:#b1da62' + ';position:absolute;top:0;right:0;box-shadow:0 0 20px rgba(161, 202, 82, 0.7);-webkit-animation:faces-InfinityProgressBarAnimation 2s linear infinite;animation:faces-InfinityProgressBarAnimation 2s linear infinite;}.faces-QuestionBox .faces-Button{margin-top:40px;margin-bottom:10px;background-color:#4496c6;}.faces-TopMenuDisposal-HeaderPanel{margin-top:-20px;margin-bottom:' + '-20px;height:auto;width:100%;}.faces-TopMenuDisposal-FooterPanel{margin-top:-20px;width:100%;position:fixed;bottom:0;margin-bottom:-20px;z-index:10;}.faces-SideMenuDisposal-MenuPanel{width:200px;height:100%' + ';float:right;position:relative;}.faces-SideMenuDisposal-MenuPanel .facesMenu{height:100%;}.faces-SideMenuDisposal-FooterPanel{margin-top:-20px;width:100%;position:fixed;bottom:0;margin-bottom:-20px;z-index:10;}.faces-SideMenuDisposal-HeaderPanel{overflow:auto;height:' + 'auto;width:100%;margin-top:-20px;}.faces-SideMenuDisposal-ContentPanel{width:calc(100% - 210px);padding-right:10px;height:100%;float:right;}.faces-popup-body{min-height:30px;min-width:200px;}.faces-popup-close{left:5px;}':'html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;}body{margin:0;}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block;}audio,canvas,progress,video{display:inline-block;vertical-align:baseline;}[hidden],template{display:none;}a{background:0 0;}a:active,a:hover{outline:0;}abbr[title]{border-bottom:1px dotted;}b,strong{font-weight:700;}dfn{font-style:italic;}h1{font-size:2em;margin:0.67em 0;}mark{background:#ff0;color:#000;}small{font-size:80%;}sub{font-size:75%;line-height:0;position:relative;vertical-align:baseline;bottom:-0.25em;}sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;top:-0.5em;}img{border:0;}figure{margin:1em 40px;}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0;}pre{overflow:auto;}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em;}button{color:inherit;font:inherit;margin:0;overflow:visible;text-transform:none;-webkit-appearance:button;cursor:pointer;}input{color:inherit;font:inherit;margin:0;line-height:normal;}optgroup{color:inherit;font:inherit;margin:0;}select{color:inherit;font:inherit;margin:0;text-transform:none;}textarea{color:inherit;font:inherit;margin:0;overflow:auto;}html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer;}button[disabled],html input[disabled]{cursor:default;}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0;}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto;}input[type="search"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none;}fieldset{border:1px solid silver;margin:0 2px;padding:0.35em 0.625em 0.75em;}legend{border:0;padding:0;}optgroup{font-weight:700;}table{border-collapse:collapse;border-spacing:0;}td,th{padding:0;}:focus,:active,:hover{outline:none;-webkit-tap-hightlight-color:rgba(0, 0, 0, 0);}*,:before,:after{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;}[disabled]{cursor:not-allowed !important;}.faces--clearfix:before{content:" ";display:table;}.faces--clearfix:after{content:" ";display:table;clear:both;}.faces-noSelectable,.faces-noSelectable *{-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}hr{background:#e3e3e3;height:1px;margin:10px 0;border:none;}ul{margin:0;padding:0;list-style:none;}html{height:100%;margin:0;padding:0;}body{height:100%;margin:0;padding:0;font-family:Arial, Helvetica Neue, Helvetica, sans-serif;font-size:13px;color:#111;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;}.faces-overlay{z-index:5;}.faces-popup{z-index:6;}.faces-WaitBox{z-index:7;}.faces-Label{color:#1c5994;}.faces-Menu{background:#4496c6;border:1px solid #1a6299;box-shadow:0 -2px 0 rgba(0, 0, 0, 0.03) inset, 0 2px 2px rgba(0, 0, 0, 0.07);position:relative;}.faces-Menu .faces-Label,.faces-Menu .gwt-Label,.faces-Menu .gwt-Anchor,.faces-Menu .crux-Anchor{color:#fff;text-shadow:none;}.faces-Menu>.faces-Menu-ul>.faces-Menu-li .faces-Menu-li .faces-Label{color:#343434;}.faces-Menu a{text-decoration:none;}.faces-Menu *{-webkit-transition:all 0.1s linear;-moz-transition:all 0.1s linear;-ms-transition:all 0.1s linear;transition:all 0.1s linear;}.faces-Menu-openCloseTriggerHelper{border:none;padding:0;z-index:2;}.faces-Menu.faces-Menu-dropdown .faces-Menu-ul .faces-Menu-ul{background:#fff;box-shadow:0 5px 25px rgba(0, 0, 0, 0.3);border:1px solid #aaa;}.faces-Menu.faces-Menu-dropdown>.faces-Menu-ul>.faces-Menu-li:hover{background:rgba(0, 0, 0, 0.15);}.faces-Menu.faces-Menu-dropdown .faces-Menu-ul .faces-Menu-ul .faces-Menu-li{font-size:13px;cursor:pointer;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal{width:100%;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li>.faces-Menu-ul{border-top:1px solid #1a6299;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li{border-right:1px solid #1a6299;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-hasChildren{padding-right:20px;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li.faces-Menu-hasChildren{padding-right:30px;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal .faces-Menu-li>.faces-Menu-ul .faces-Menu-li:hover{background:#eee;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{content:"";position:absolute;right:13px;top:50%;margin-top:-4px;background:rgba(0, 0, 0, 0);width:6px;height:6px;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);transform:rotate(45deg);border-right:2px solid #fff;border-bottom:2px solid #fff;}.faces-Menu.faces-Menu-dropdown.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{content:"";position:absolute;right:13px;top:16px;background:rgba(0, 0, 0, 0);width:6px;height:6px;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);transform:rotate(45deg);border-right:2px solid #bbb;border-top:2px solid #bbb;}.faces-Menu.faces-Menu-dropdown.faces-Menu-vertical,.faces-Menu.faces-Menu-tree.faces-Menu-vertical,.faces-Menu.faces-Menu-accordion.faces-Menu-vertical{width:200px;}.faces-Menu.faces-Menu-dropdown.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-li{border-bottom:1px solid #1a6299;padding:10px;}.faces-Menu.faces-Menu-dropdown.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-li:last-child{border-bottom:none;}.faces-Menu.faces-Menu-dropdown.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{position:absolute;right:13px;top:16px;background:rgba(0, 0, 0, 0);width:6px;height:6px;-webkit-transform:rotate(45deg);border-right:2px solid #fff;border-top:2px solid #fff;}.faces-Menu.faces-Menu-dropdown.faces-Menu-vertical .faces-Menu-li .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{border-right:2px solid #aaa;border-top:2px solid #aaa;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical>.faces-Menu-ul{position:relative;padding:10px;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li{padding:5px 10px;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{width:13px;height:13px;border:1px solid #ccc;background:#eee;position:absolute;left:-6px;top:8px;border-radius:2px;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:hover{background:#fff;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before{content:"";width:1px;height:7px;position:absolute;font-weight:bold;background:#666;top:2px;left:5px;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{content:"";width:7px;height:1px;position:absolute;font-weight:bold;background:#666;top:5px;left:2px;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren.faces-Menu-open>.faces-Menu-openCloseTriggerHelper:before,.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li .faces-Menu-ul{display:none;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren.faces-Menu-open:before{content:"";border-left:1px dotted #ccc;width:1px;height:calc(100% - 6px);position:absolute;top:16px;left:0;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren.faces-Menu-open>.faces-Menu-ul{display:block;}.faces-Menu.faces-Menu-tree.faces-Menu-vertical .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-ul>.faces-Menu-li:after{content:"";border-top:1px dotted #ccc;width:15px;height:1px;position:absolute;top:14px;left:-13px;}.faces-Menu.faces-Menu-accordion>.faces-Menu-ul>.faces-Menu-li>.faces-SelectablePanel>.faces-Label{margin-top:-1px;font-weight:bold;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-li{border-bottom:1px solid #1a6299;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-li:last-child{border-bottom:none;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-li .faces-Menu-ul{display:none;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-li.faces-Menu-open>.faces-Menu-ul{display:block;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-li .faces-Menu-ul .faces-Label{border-bottom:1px solid rgba(0, 0, 0, 0.13);padding:5px;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul .faces-Menu-ul{background:#fff;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul .faces-Menu-ul .faces-Menu-ul{background:#eee;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul .faces-Menu-ul .faces-Menu-ul .faces-Menu-ul{background:#aaa;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{position:absolute;right:0;top:5px;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before,.faces-Menu.faces-Menu-accordion.faces-Menu-vertical>.faces-Menu-ul>.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{content:"";position:absolute;background:#fff;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-ul .faces-Menu-ul .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before,.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-ul .faces-Menu-ul .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{content:"";position:absolute;background:#aaa;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before{top:13px;right:5px;width:10px;height:2px;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{top:9px;right:9px;width:2px;height:10px;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-hasChildren .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before{top:8px;right:5px;width:10px;height:2px;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-hasChildren .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{top:4px;right:9px;width:2px;height:10px;}.faces-Menu.faces-Menu-accordion.faces-Menu-vertical .faces-Menu-hasChildren.faces-Menu-open>.faces-Menu-openCloseTriggerHelper:after{display:none;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-ul .faces-Menu-li .faces-Menu-ul{width:300px;background:#fff;font-size:12px;display:none;overflow-y:auto;border-right:1px solid #ccc;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-ul .faces-Menu-li .faces-Menu-ul .faces-Menu-ul{border-right:none;background:#fafafa;font-size:11px;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li>.faces-SelectablePanel{border-bottom:1px solid #1a6299;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li:last-child>.faces-SelectablePanel{border-bottom:none;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-li>.faces-Menu-ul .faces-Menu-li .faces-Label{padding:10px;border-bottom:1px solid #ccc;padding:10px;border-bottom:1px solid #ccc;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-ul .faces-Menu-ul .faces-Menu-openCloseTriggerHelper{position:absolute;right:14px;top:17px;width:2px;height:2px;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before,.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal>.faces-Menu-ul>.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{content:"";position:absolute;background:#fff;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-ul .faces-Menu-ul .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before,.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-ul .faces-Menu-ul .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{content:"";position:absolute;background:#aaa;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-hasChildren.faces-Menu-open>.faces-Menu-openCloseTriggerHelper:after{display:none;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before{top:13px;left:13px;width:10px;height:2px;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{top:9px;left:17px;width:2px;height:10px;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-hasChildren .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:before{top:0;left:-2px;width:10px;height:2px;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-hasChildren .faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper:after{top:-4px;right:-2px;left:initial;width:2px;height:10px;}.faces-Menu.faces-Menu-accordion>.faces-Menu-ul>.faces-Menu-li:last-child>.faces-SelectablePanel>.faces-Label{border-bottom:none;}.faces-Menu.faces-Menu-accordion.faces-Menu-horizontal .faces-Menu-ul .faces-Menu-li.faces-Menu-open:last-child>.faces-Menu-ul{border-left:1px solid #ccc;border-right:0;}.faces-Menu.faces-Menu-slide{width:200px;}.faces-Menu.faces-Menu-slide .faces-Menu-ul .faces-Menu-ul{-webkit-transition:all 0.5s cubic-bezier(0.14, 0.97, 0.46, 1);transition:all 0.5s cubic-bezier(0.14, 0.97, 0.46, 1);background:#f5f5f5;}.faces-Menu.faces-Menu-slide .faces-Menu-ul .faces-Menu-li{height:40px;border-bottom:1px solid #1a6299;position:initial;}.faces-Menu.faces-Menu-slide .faces-Menu-ul .faces-Menu-li:last-child{border-bottom:none;}.faces-Menu.faces-Menu-slide .faces-Menu-ul .faces-Menu-li:hover{background:rgba(0, 0, 0, 0.03);}.faces-Menu.faces-Menu-slide .faces-Menu-ul .faces-Menu-li .faces-SelectablePanel{padding:10px;}.faces-Menu.faces-Menu-slide .faces-Menu-li.faces-Menu-open>.faces-Menu-ul{box-shadow:-1px 0 0 rgba(0, 0, 0, 0.2);}.faces-Menu.faces-Menu-slide>.faces-Menu-ul>.faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{float:right;margin-top:-22px;margin-right:12px;background:rgba(0, 0, 0, 0);width:6px;height:6px;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);transform:rotate(45deg);border-right:2px solid #fff;border-top:2px solid #fff;z-index:1;}.faces-Menu.faces-Menu-slide .faces-Menu-ul .faces-Menu-ul .faces-Menu-li.faces-Menu-hasChildren>.faces-Menu-openCloseTriggerHelper{float:right;margin-top:-22px;margin-right:12px;background:rgba(0, 0, 0, 0);width:6px;height:6px;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);transform:rotate(45deg);border-right:2px solid #808080;border-top:2px solid #808080;z-index:1;}.faces-Menu.faces-Menu-slide .faces-Menu-closeTriggerSliderHelper{width:100%;height:22px;display:block;border:0;background:rgba(0, 0, 0, 0.06);box-shadow:0 -1px 0 rgba(0, 0, 0, 0.1) inset;position:relative;}.faces-Menu.faces-Menu-slide .faces-Menu-closeTriggerSliderHelper:hover{background:rgba(0, 0, 0, 0.1);}.faces-Menu.faces-Menu-slide .faces-Menu-closeTriggerSliderHelper:before{content:"";position:absolute;left:5px;top:7px;background:rgba(0, 0, 0, 0);width:6px;height:6px;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);transform:rotate(45deg);border-left:2px solid #808080;border-bottom:2px solid #808080;z-index:1;}a.faces-Button{white-space:nowrap;}a.faces-Button:hover{text-decoration:none;color:#fff;}.faces-Button{background:#4496c6;border:1px solid #1a6299;padding:8px 14px;border-radius:1px;font-size:100%;color:#fff;text-shadow:0 1px 0 rgba(0, 0, 0, 0.15);}.faces-Button:hover{border-color:#084471;}.faces-Button:focus{box-shadow:0 0 0 3px rgba(0, 0, 0, 0.22);}.faces-Button:focus:active{box-shadow:0 2px 2px rgba(0, 0, 0, 0.2) inset, 0 0 0 3px rgba(0, 0, 0, 0.12);}.faces-Button.faces--small,.faces--small .faces-Button{font-size:0.85em;padding:5px 8px;}.faces--group .faces-Button{border-radius:0;margin-left:-1px;position:relative;}.faces--group .faces-Button:hover,.faces--group .faces-Button:focus{z-index:2;}.faces--group .faces-Button:first-child{border-radius:2px 0 0 2px;}.faces--group .faces-Button:last-child{border-radius:0 2px 2px 0;}td .faces--group,td>div>.faces--group{margin:5px;}.faces-Button:disabled{background:#e5e5e5;border:1px solid #a5a5a5;color:#9c9c9c;text-shadow:0 1px 0 rgba(255, 255, 255, 0.6);}.faces-overlay{position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0, 0, 0, 0.3);}.faces-popup{background-color:#fff;border-radius:3px;box-shadow:0 0 0 1px rgba(0, 0, 0, 0.2), 0 5px 20px rgba(0, 0, 0, 0.4) !important;position:fixed;overflow:hidden;}.faces-popup-header{background:#f7f7f7;color:#5491b4;box-shadow:0 -2px #eaeaea inset, 0 1px 0 #d1d1d1;padding:11px 2px;position:relative;min-height:26px;}.faces-popup-title{text-align:center;color:#5491b4;}.faces-popup-dragger{width:100%;height:100%;position:absolute;top:0;left:0' + (';cursor:move;}.faces-popup-close{width:16px;height:16px;background:' + ("url('" + $svgIconClose().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center') + ';background-size:' + '100% auto' + ';border:' + 'none' + ';position:' + 'absolute' + ';right:' + '10px' + ';top:' + '5px' + ';z-index:' + '2' + ';}.faces-popup-body{padding:') + '10px;}.faces-popup-resizer{position:absolute;height:12px;width:12px;bottom:0;right:0;border-top:rgba(0, 0, 0, 0);border-left:rgba(0, 0, 0, 0);cursor:nwse-resize;border-bottom-right-radius:3px;background:linear-gradient(-45deg, rgba(0, 0, 0, 0) 50%, #aaa 50.1%, #eee 60%)' + ';background:-webkit-linear-gradient(-45deg, rgba(0, 0, 0, 0) 50%, #aaa 50.1%, #eee 60%);padding:10px;}.faces-popup-resizer:before{content:"";position:absolute;height:7px;right:3px;border-top:solid 1px #aaa;cursor:nwse-resize;border-bottom-right-radius:2px;-webkit-transform:rotate(135deg);-moz-transform:' + 'rotate(135deg);-ms-transform:rotate(135deg);transform:rotate(135deg);width:11px;bottom:5px;}.faces-popup-resizer:after{content:"";position:absolute;height:7px;right:3px;border-top:solid 1px #aaa;cursor:nwse-resize' + ';border-bottom-right-radius:2px;-webkit-transform:rotate(135deg);-moz-transform:rotate(135deg);-ms-transform:rotate(135deg);transform:rotate(135deg);width:8px;bottom:3px;}.faces-popup-actionPanel{padding:10px;margin:10px -10px -10px;display:flex;justify-content:' + 'space-around;}.faces-popup-actionPanel .faces-Button{min-width:80px;}.faces-MessageBox .faces-popup-header{background:none;box-shadow:none;}.faces-MessageBox .faces-popup-body{text-align:center;}.faces-Progress{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;height:3px;width:100%' + ';}.faces-Progress::-webkit-progress-bar{background:#eee;border-radius:3px;position:relative;overflow:hidden;}.faces-Progress::-webkit-progress-value{background:#4496c6;}.faces-Progress:not([value])::-webkit-progress-value{background:linear-gradient(-90deg, rgba(68, 150, 198, 1), rgba(68, 150, 198, 0));width:50% !important;-webkit-animation:faces-ProgressUndefined 0.8s linear infinite;-moz-animation:faces-ProgressUndefined 0.8s linear infinite;position:absolute;border-radius:' + '3px;}@-webkit-keyframes faces-ProgressUndefined\n{\n\t0%   {left:-50%;}\n\t100%  {left:101%;}\n}@-moz-keyframes faces-ProgressUndefined\n{\n\t0%   {left:-50%;}\n\t100%  {left:101%;}\n}.dragging,.unselectable *{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;}@-webkit-keyframes faces-InfinityProgressBarAnimation\n{\n\t0%   {width:0%;left:0%}\n\t19%  {width:40%;left:0%;}\n\t38%  {width:0%;left:50%;}\n\t57%  {width:40%;left:50%;}\n\t75%  {width:0%;left:100%;}\n\t100% {width:100%;left:0%}\n}@keyframes faces-InfinityProgressBarAnimation\n{\n\t0%   {width:0%;left:0%}\n\t19%  {width:40%;left:0%;}\n\t38%  {width:0%;left:50%;}\n\t57%  {width:40%;left:50%;}\n\t75%  {width:0%;left:100%;}\n\t100% {width:100%;left:0%}\n}.faces-progressBar{width:60%;height:3px;position:relative;background:#eee;margin:18px auto 0;}.faces-progressBar .faces-fill{height:100%;background:#b1da62' + ';position:absolute;top:0;left:0;box-shadow:0 0 20px rgba(161, 202, 82, 0.7);-webkit-animation:faces-InfinityProgressBarAnimation 2s linear infinite;animation:faces-InfinityProgressBarAnimation 2s linear infinite;}.faces-QuestionBox .faces-Button{margin-top:40px;margin-bottom:10px;background-color:#4496c6;}.faces-TopMenuDisposal-HeaderPanel{margin-top:-20px;margin-bottom:' + '-20px;height:auto;width:100%;}.faces-TopMenuDisposal-FooterPanel{margin-top:-20px;width:100%;position:fixed;bottom:0;margin-bottom:-20px;z-index:10;}.faces-SideMenuDisposal-MenuPanel{width:200px;height:100%' + ';float:left;position:relative;}.faces-SideMenuDisposal-MenuPanel .facesMenu{height:100%;}.faces-SideMenuDisposal-FooterPanel{margin-top:-20px;width:100%;position:fixed;bottom:0;margin-bottom:-20px;z-index:10;}.faces-SideMenuDisposal-HeaderPanel{overflow:auto;height:' + 'auto;width:100%;margin-top:-20px;}.faces-SideMenuDisposal-ContentPanel{width:calc(100% - 210px);padding-left:10px;height:100%;float:left;}.faces-popup-body{min-height:30px;min-width:200px;}.faces-popup-close{right:5px;}';
}

function SmartFacesResourcesLarge_default_StaticClientBundleGenerator$1_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_640();
}

defineSeed(758, 1, {}, SmartFacesResourcesLarge_default_StaticClientBundleGenerator$1_0);
_.ensureInjected = function ensureInjected(){
  if (!this.injected) {
    this.injected = true;
    inject($getText_2());
    return true;
  }
  return false;
}
;
_.injected = false;
function $clinit_SmartFacesResourcesLarge_default_StaticClientBundleGenerator$cssInitializer(){
  $clinit_SmartFacesResourcesLarge_default_StaticClientBundleGenerator$cssInitializer = nullMethod;
  $cssInitializer(($clinit_SmartFacesResourcesLarge_default_StaticClientBundleGenerator() , _instance0_0));
}

function get_32(){
  $clinit_SmartFacesResourcesLarge_default_StaticClientBundleGenerator$cssInitializer();
  return $clinit_SmartFacesResourcesLarge_default_StaticClientBundleGenerator() , css_0;
}

function $clinit_SmartFacesResourcesLarge_default_StaticClientBundleGenerator$svgIconCloseInitializer(){
  $clinit_SmartFacesResourcesLarge_default_StaticClientBundleGenerator$svgIconCloseInitializer = nullMethod;
  $svgIconCloseInitializer(($clinit_SmartFacesResourcesLarge_default_StaticClientBundleGenerator() , _instance0_0));
}

function get_33(){
  $clinit_SmartFacesResourcesLarge_default_StaticClientBundleGenerator$svgIconCloseInitializer();
  return $clinit_SmartFacesResourcesLarge_default_StaticClientBundleGenerator() , svgIconClose;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator = nullMethod;
  _instance0_1 = new XStandardResourcesLarge_default_StaticClientBundleGenerator_0;
}

function $$init_641(){
}

function $cssInitializer_0(this$static){
  css_2 = new XStandardResourcesLarge_default_StaticClientBundleGenerator$1_0(this$static);
}

function $gridCancelIcon(){
  return get_35();
}

function $gridCancelIconInitializer(){
  gridCancelIcon = new DataResourcePrototype_0('gridCancelIcon', fromTrustedString_0(getModuleBaseForStaticFiles() + 'FAE9505611E8F0F59A7AB54D91FCE627.cache.png'));
}

function $gridEditIcon(){
  return get_36();
}

function $gridEditIconInitializer(){
  gridEditIcon = new DataResourcePrototype_0('gridEditIcon', fromTrustedString_0(getModuleBaseForStaticFiles() + 'DB35FB24BE81839C9C0AF5D19373D8D2.cache.png'));
}

function $gridSaveIcon(){
  return get_37();
}

function $gridSaveIconInitializer(){
  gridSaveIcon = new DataResourcePrototype_0('gridSaveIcon', fromTrustedString_0(getModuleBaseForStaticFiles() + 'A5C4A766B6DC9A237297C8F25D8C7376.cache.png'));
}

function $svgIconArrow(){
  return get_38();
}

function $svgIconArrowInitializer(){
  svgIconArrow = new DataResourcePrototype_0('svgIconArrow', fromTrustedString_0(getModuleBaseForStaticFiles() + '5A8B762213CB1E49A1E0295850840ED2.cache.svg'));
}

function $svgIconClose_0(){
  return get_39();
}

function $svgIconCloseInitializer_0(){
  svgIconClose_0 = new DataResourcePrototype_0('svgIconClose', fromTrustedString_0(getModuleBaseForStaticFiles() + 'C0D8F8B5B9D6CB9A31EB24E489C4A3D5.cache.svg'));
}

function $svgIconDanger(){
  return get_40();
}

function $svgIconDangerInitializer(){
  svgIconDanger = new DataResourcePrototype_0('svgIconDanger', fromTrustedString_0(getModuleBaseForStaticFiles() + 'BD146B33A566C259BEC6621A85024F85.cache.svg'));
}

function $svgIconFile(){
  return get_41();
}

function $svgIconFileInitializer(){
  svgIconFile = new DataResourcePrototype_0('svgIconFile', fromTrustedString_0(getModuleBaseForStaticFiles() + '4FF5A5B7D34F50DC28FAC7435E6D70B2.cache.svg'));
}

function $svgIconPaginatorFirst(){
  return get_42();
}

function $svgIconPaginatorFirstInitializer(){
  svgIconPaginatorFirst = new DataResourcePrototype_0('svgIconPaginatorFirst', fromTrustedString_0(getModuleBaseForStaticFiles() + '8D76FEF00E28D2CA3C8E5BBC82093290.cache.svg'));
}

function $svgIconPaginatorLast(){
  return get_43();
}

function $svgIconPaginatorLastInitializer(){
  svgIconPaginatorLast = new DataResourcePrototype_0('svgIconPaginatorLast', fromTrustedString_0(getModuleBaseForStaticFiles() + '112929F30350F9469E721F641D4F3BB2.cache.svg'));
}

function $svgIconPaginatorNext(){
  return get_44();
}

function $svgIconPaginatorNextInitializer(){
  svgIconPaginatorNext = new DataResourcePrototype_0('svgIconPaginatorNext', fromTrustedString_0(getModuleBaseForStaticFiles() + 'E5F4395735F934246F84E3E9CA52535D.cache.svg'));
}

function $svgIconPaginatorPrev(){
  return get_45();
}

function $svgIconPaginatorPrevInitializer(){
  svgIconPaginatorPrev = new DataResourcePrototype_0('svgIconPaginatorPrev', fromTrustedString_0(getModuleBaseForStaticFiles() + '62CA7E969464F071125D49F8B2F02A10.cache.svg'));
}

function $svgIconPause(){
  return get_46();
}

function $svgIconPauseInitializer(){
  svgIconPause = new DataResourcePrototype_0('svgIconPause', fromTrustedString_0(getModuleBaseForStaticFiles() + '0CF175B3BF792D589BE4C823DFAD4AF7.cache.svg'));
}

function $svgIconPlay(){
  return get_47();
}

function $svgIconPlayInitializer(){
  svgIconPlay = new DataResourcePrototype_0('svgIconPlay', fromTrustedString_0(getModuleBaseForStaticFiles() + '57AFFF49247D72C5F5D4DE14D31D671D.cache.svg'));
}

function $svgIconSuccess(){
  return get_48();
}

function $svgIconSuccessInitializer(){
  svgIconSuccess = new DataResourcePrototype_0('svgIconSuccess', fromTrustedString_0(getModuleBaseForStaticFiles() + '30005C03A3FFFFD71982A52F03C4BF3E.cache.svg'));
}

function $svgIconWarning(){
  return get_49();
}

function $svgIconWarningInitializer(){
  svgIconWarning = new DataResourcePrototype_0('svgIconWarning', fromTrustedString_0(getModuleBaseForStaticFiles() + '724D24C6CD23B2382A6FA22AE1F93577.cache.svg'));
}

function XStandardResourcesLarge_default_StaticClientBundleGenerator_0(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator();
  Object_1.call(this);
  $$init_641();
}

defineSeed(761, 1, {}, XStandardResourcesLarge_default_StaticClientBundleGenerator_0);
_.css_1 = function css_3(){
  return get_34();
}
;
var _instance0_1, css_2, gridCancelIcon, gridEditIcon, gridSaveIcon, svgIconArrow, svgIconClose_0, svgIconDanger, svgIconFile, svgIconPaginatorFirst, svgIconPaginatorLast, svgIconPaginatorNext, svgIconPaginatorPrev, svgIconPause, svgIconPlay, svgIconSuccess, svgIconWarning;
function $$init_642(){
}

function $getText_3(){
  return $isRTL_0(getCurrentLocale())?'html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;}body{margin:0;}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block;}audio,canvas,progress,video{display:inline-block;vertical-align:baseline;}[hidden],template{display:none;}a{background:0 0;}a:active,a:hover{outline:0;}abbr[title]{border-bottom:1px dotted;}b,strong{font-weight:700;}dfn{font-style:italic;}h1{font-size:2em;margin:0.67em 0;}mark{background:#ff0;color:#000;}small{font-size:80%;}sub{font-size:75%;line-height:0;position:relative;vertical-align:baseline;bottom:-0.25em;}sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;top:-0.5em;}img{border:0;}figure{margin:1em 40px;}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0;}pre{overflow:auto;}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em;}button{color:inherit;font:inherit;margin:0;overflow:visible;text-transform:none;-webkit-appearance:button;cursor:pointer;}input{color:inherit;font:inherit;margin:0;line-height:normal;}optgroup{color:inherit;font:inherit;margin:0;}select{color:inherit;font:inherit;margin:0;text-transform:none;}textarea{color:inherit;font:inherit;margin:0;overflow:auto;}html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer;}button[disabled],html input[disabled]{cursor:default;}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0;}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto;}input[type="search"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none;}fieldset{border:1px solid silver;margin:0 2px;padding:0.35em 0.625em 0.75em;}legend{border:0;padding:0;}optgroup{font-weight:700;}table{border-collapse:collapse;border-spacing:0;}td,th{padding:0;}:focus,:active,:hover{outline:none;-webkit-tap-hightlight-color:rgba(0, 0, 0, 0);}*,:before,:after{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;}.cf:before{content:" ";display:table;}.cf:after{content:" ";display:table;clear:both;}[disabled]{cursor:not-allowed !important;}hr{background:#e3e3e3;height:1px;margin:10px 0;border:none;}pre,code{background:#f3f7f8;color:#6377cb;font-weight:bold;font-size:13px;padding:2px 4px;border-radius:2px;box-shadow:0 0 0 1px rgba(0, 0, 0, 0.1);}html{margin:0;padding:0;height:100%;}body{background:#fff;margin:0;padding:0;height:100%;font-size:14px;font-family:OpenSans, Verdana, Helvetica, Arial, sans-serif;}input,button{vertical-align:top;margin-top:0;margin-bottom:0;}.crux-Anchor{color:#4192e3;text-decoration:none;}.crux-Anchor:hover{color:#05a;}a.crux-Button{white-space:nowrap;}a.crux-Button:hover{text-decoration:none;color:#fff;}.crux-Button,.crux-FileUploader .fileInputButton,.previousMessageButton,.nextMessageButton,.crux-DownloadButton{background:#4496c6;border:1px solid #1a6299;padding:8px 14px;border-radius:1px;font-size:100%;color:#fff;text-shadow:0 1px 0 rgba(0, 0, 0, 0.15);}.crux-Button:hover,.previousMessageButton:hover,.nextMessageButton:hover,.crux-DownloadButton:hover{border-color:#084471;}.crux-Button:focus,.fileInputButton:focus,.previousMessageButton:focus,.nextMessageButton:focus,.crux-DownloadButton:focus{box-shadow:0 0 0 3px rgba(0, 0, 0, 0.22);}.crux-Button:focus:active,.fileInputButton:focus:active,.previousMessageButton:active,.nextMessageButton:active,.crux-DownloadButton:active{box-shadow:0 2px 2px rgba(0, 0, 0, 0.2) inset, 0 0 0 3px rgba(0, 0, 0, 0.12);}.crux-Button.success,.crux-FlatMessageBox-success .crux-Button,.crux-DownloadButton.success{background:#81aa33;border:1px solid #6d991a;}.crux-Button.success:hover,.crux-FlatMessageBox-success .crux-Button:hover,.crux-DownloadButton.success:hover{border-color:#527808;}.crux-Button.warn,.crux-FlatMessageBox-warn .crux-Button,.crux-DownloadButton.warn{background:#ed9c28;border:1px solid #d58512;}.crux-Button.warn:hover,.crux-FlatMessageBox-warn .crux-Button:hover,.crux-DownloadButton.warn:hover{border-color:#b76f09;}.crux-Button.error,.crux-FlatMessageBox-error .crux-Button,.crux-DownloadButton.error{background:#d2322d;border:1px solid #ac2925;}.crux-Button.error:hover,.crux-FlatMessageBox-error .crux-Button:hover,.crux-DownloadButton.error:hover{border-color:#96130f;}.crux-Button:disabled,.crux-DownloadButton:disabled{background:#e5e5e5;border:1px solid #a5a5a5;color:#9c9c9c;text-shadow:0 1px 0 rgba(255, 255, 255, 0.6);}.crux-Button.bullet,.crux-DownloadButton.bullet{border-radius:500px;}.crux-Button.round,.crux-DownloadButton.round{border-radius:3px;}.crux-Button.mini,.crux-DownloadButton.mini{font-size:70%;padding:4px 7px;}.crux-Button.xsmall,.crux-DownloadButton.xsmall{font-size:70%;}.crux-Button.small,.crux-DownloadButton.small{font-size:85%;}.crux-Button.large,.crux-DownloadButton.large{font-size:110%;}.crux-Button.xlarge,.crux-DownloadButton.xlarge{font-size:130%;}.gwt-TextBox,.gwt-TextArea,.crux-DateBox,.crux-Filter,.crux-NumberTextBox,.crux-SingleSelect,.crux-MaskedTextBox{background:#fff;color:#444;padding:8px 8px;border-radius:1px;border:1px solid #92aec8;box-shadow:0 1px 2px rgba(0, 0, 0, 0.14) inset;margin-bottom:' + ('10px;}.gwt-TextBox:hover,.gwt-TextArea:hover,.crux-DateBox:hover,.crux-Filter:hover,.crux-NumberTextBox:hover,.crux-SingleSelect:hover,.crux-MaskedTextBox:hover{border:1px solid #5c87b0;}.gwt-TextBox:focus,.gwt-TextArea:focus,.crux-DateBox:focus,.crux-Filter:focus,.crux-NumberTextBox:focus,.crux-SingleSelect:focus,.crux-MaskedTextBox:focus{border:1px solid #66afe9;box-shadow:0 1px 2px rgba(0, 0, 0, 0.2) inset, 0 0 5px rgba(102, 175, 233, 0.75);}.gwt-TextBox.success,.gwt-TextArea.success,.crux-DateBox.success,.crux-Filter.success,.crux-NumberTextBox.success,.crux-MaskedTextBox.success{border:1px solid #6d991a;background:' + ("url('" + $svgIconSuccess().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + '4%' + ' ' + 'center' + ' ' + '#fff') + ';background-position:' + 'left 6px center' + ';padding-left:' + '30px' + ';box-shadow:' + '0 1px 2px rgba(0, 0, 0, 0.14) inset, -30px 0 0 rgba(70, 180, 0, 0.18) inset' + ';}.gwt-TextBox.success:hover,.gwt-TextArea.success:hover,.crux-DateBox.success:hover,.crux-Filter.success:hover,.crux-MaskedTextBox.success:hover{border-color:' + '#527808' + ';}.gwt-TextBox.success:focus,.gwt-TextArea.success:focus,.crux-DateBox.success:focus,.crux-Filter.success:focus,.crux-NumberTextBox.success:focus{box-shadow:' + '0 1px 2px rgba(0, 0, 0, 0.2) inset, 0 0 5px rgba(0, 255, 0, 0.4), -30px 0 0 rgba(70, 180, 0, 0.18) inset') + (';}.gwt-TextBox.warn,.gwt-TextArea.warn,.crux-DateBox.warn,.crux-Filter.warn,.crux-NumberTextBox.warn,.crux-MaskedTextBox.warn{border:1px solid #d58512;background:' + ("url('" + $svgIconWarning().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + '4%' + ' ' + 'center' + ' ' + '#fff') + ';background-position:' + 'left 6px center' + ';padding-left:' + '30px' + ';box-shadow:' + '0 1px 2px rgba(0, 0, 0, 0.14) inset, -30px 0 0 rgba(190, 180, 0, 0.18) inset' + ';}.gwt-TextBox.warn:hover,.gwt-TextArea.warn:hover,.crux-DateBox.warn:hover,.crux-Filter.warn:hover,.crux-NumberTextBox.warn:hover,.crux-MaskedTextBox.warn:hover{border-color:' + '#b76f09' + ';}.gwt-TextBox.warn:focus,.gwt-TextArea.warn:focus,.crux-DateBox.warn:focus,.crux-Filter.warn:focus,.crux-NumberTextBox.warn:focus,.crux-MaskedTextBox.warn:focus{box-shadow:' + '0 1px 2px rgba(0, 0, 0, 0.2) inset, 0 0 5px rgba(255, 168, 0, 0.6), -30px 0 0 rgba(190, 180, 0, 0.18) inset' + ';}.gwt-TextBox.error,.gwt-TextArea.error,.crux-DateBox.error,.crux-Filter.error,.crux-NumberTextBox.error{border:' + '1px solid #ac2925' + ';background:' + ("url('" + $svgIconDanger().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + '4%' + ' ' + 'center' + ' ' + '#fff') + ';background-position:' + 'left 6px center' + ';padding-left:') + '30px;box-shadow:0 1px 2px rgba(0, 0, 0, 0.14) inset, -30px 0 0 rgba(190, 80, 30, 0.18) inset;}.gwt-TextBox.error:hover,.gwt-TextArea.error:hover,.crux-DateBox.error:hover,.crux-Filter.error:hover,.crux-NumberTextBox.error:hover,.crux-MaskedTextBox.error:hover{border-color:#96130f;}.gwt-TextBox.error:focus,.gwt-TextArea.error:focus,.crux-DateBox.error:focus,.crux-Filter.error:focus,.crux-NumberTextBox.error:focus .crux-MaskedTextBox.error:focus{box-shadow:0 1px 2px rgba(0, 0, 0, 0.2) inset, 0 0 5px rgba(255, 0, 0, 0.4), -30px 0 0 rgba(190, 80, 30, 0.18) inset;}.gwt-TextBox.mini,.gwt-TextArea.mini,.crux-DateBox.mini,.crux-Filter.mini,.crux-NumberTextBox.mini,.crux-MaskedTextBox.mini{font-size:70%;padding:4px 7px;}.gwt-TextBox.xsmall,.gwt-TextArea.xsmall,.crux-DateBox.xsmall,.crux-Filter.xsmall,.crux-NumberTextBox.xsmall .crux-MaskedTextBox.xsmall{font-size:70%;padding:6px 10px;}.gwt-TextBox.small,.gwt-TextArea.small,.crux-DateBox.small,.crux-Filter.small,.crux-NumberTextBox.small,.crux-MaskedTextBox.small{font-size:80%;padding:8px 12px;}.gwt-TextBox.large,.gwt-TextArea.large,.crux-DateBox.large,.crux-Filter.large,.crux-NumberTextBox.large,.crux-MaskedTextBox.large{font-size:115%' + ';}.gwt-TextBox.xlarge,.gwt-TextArea.xlarge,.crux-DateBox.xlarge,.crux-Filter.xlarge,.crux-NumberTextBox.xlarge,.crux-MaskedTextBox.xlarge{font-size:130%;}.gwt-TextBox.bullet,.gwt-TextArea.bullet,.crux-DateBox.bullet,.crux-Filter.bullet,.crux-NumberTextBox.bullet,.crux-MaskedTextBox.bullet{border-radius:500px;}.gwt-TextBox.round,.gwt-TextArea.round,.crux-DateBox.round,.crux-Filter.round,.crux-NumberTextBox.round,.crux-MaskedTextBox.round{border-radius:3px;}.gwt-TextBox:disabled,.gwt-TextArea:disabled,.crux-DateBox:disabled,.crux-Filter:disabled,.crux-NumberTextBox:disabled,.crux-MaskedTextBox:disabled{background:#e5e5e5;border:1px solid #a5a5a5;color:#9c9c9c;text-shadow:0 1px 0 rgba(255, 255, 255, 0.6);}.crux-StyledPanelOuter{padding:8px;width:100%;}.crux-StyledPanel,.crux-FileUploader .dropArea,.crux-FileUploader .filePanel,.crux-ScrollBanner{background:#fff;display:' + 'block;border:solid #c7c7c7 1px;box-shadow:0 1px 3px rgba(90, 90, 90, 0.2);padding:15px;}.crux-FormDisplay .formEntryData:first-child,.crux-FormDisplay .formEntryLabel{padding-bottom:10px;padding-left:20px;}.crux-ProgressDialogScreenBlocker,.crux-MessageDialogScreenBlocker{background-color:#000;opacity:0.45;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=25)";display:block;background:none repeat scroll 0 0 rgba(0, 0, 0, 0.45)' + ';height:200%;right:0;position:fixed;top:0;width:200%;z-index:98;}.crux-MessageDialog{z-index:99;}.crux-DefaultScreenBlocker{background-color:#fff;opacity:0.01;filter:"alpha(opacity=1)";cursor:' + 'wait;}.crux-RssPanel .rssPanelTitle{margin-top:0;font-weight:bold;}.crux-RssPanel .rssPanelBody{width:100%;}.crux-RssPanel .rssPanelBody TD{height:40px;box-shadow:0 1px rgba(255, 255, 255, 0.3);}.dialogGlass{background-color:rgba(0, 0, 0, 0.2);position:fixed !important;z-index:8;}.crux-InfinityProgressBar{width:100%;height:1px' + ';position:relative;}.crux-InfinityProgressBar .progressBarSlot{width:100%;height:1px;position:absolute;top:0;right:0;border-top:solid 2px #eee;box-sizing:border-box;-moz-box-sizing:border-box;}.crux-InfinityProgressBar .progressBarFill{height:1px;border-top:' + 'solid 2px #b1da62;box-sizing:border-box;-moz-box-sizing:border-box;position:absolute;top:0;right:0;box-shadow:0 0 20px rgba(161, 202, 82, 0.7);-webkit-animation:crux-InfinityProgressBarAnimation 2s linear infinite;animation:crux-InfinityProgressBarAnimation 2s linear infinite;}.crux-FileUploader .chooseButton{cursor:pointer;}.crux-FileUploader .dropArea{border-style:dashed' + ';min-height:160px;background:url(upload-icon.png) no-repeat center #f5f5f5;box-shadow:none;}.crux-FileUploader .filesArea{background-color:#f5f5f5;}.crux-FileUploader .filePanel .thumbnailImage{border:solid 1px #c0c0c0;height:40px;width:40px;display:inline;position:absolute;top:8px;right:' + ('8px;}.crux-FileUploader .filePanel .thumbnailImage.noPreview{background:' + ("url('" + $svgIconFile().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center' + ' ' + '6px' + ' ' + '#eee') + ';color:' + '#777' + ';font-size:' + '10px' + ';text-align:' + 'center' + ';line-height:' + '56px' + ';letter-spacing:' + '-1px' + ';padding-left:' + '3px' + ';}.crux-FileUploader .filePanel .crux-ProgressBar{width:' + '280px' + ';border-radius:' + '1px' + ';height:' + '18px') + ';position:absolute;top:30px;right:55px;margin:0;padding:0;border-top:solid 2px #eee;}.crux-FileUploader .filePanel .crux-ProgressBar .percentBar{height:18px !important;border-radius:1px;border-top:solid 2px #a1ca52;color:#618a12;font-size:' + '11px;line-height:18px;padding-right:1px;box-sizing:border-box;-moz-box-sizing:border-box;position:absolute;top:-2px;}.crux-ColorPickerDialog .previewPanel{width:20px;height:20px;float:left;border-radius:2px' + ';margin-left:3px;}.crux-ColorPickerDialog .crux-SaturationLightnessPicker{box-shadow:0 0 0 4px rgba(0, 0, 0, 0.07), 0 0 0 1px rgba(0, 0, 0, 0.1);}.crux-ColorPickerDialog .crux-HuePicker{margin-right:10px;}.crux-ColorPickerDialog .dialogMiddleCenter{padding:10px 3px 10px 0;}.crux-StackMenu .crux-StackMenuItem .item{background:#4496c6;border:1px solid #1a6299;color:#fff;font-weight:bold;font-size:13px;margin-top:-1px;position:' + 'relative;z-index:3;}.crux-StackMenu .crux-StackMenuItem .item .hasSubItems div{content:"";position:absolute;top:15px;left:10px;width:0;height:0;border-right:5px solid #fff;border-top:5px solid transparent;border-bottom:5px solid transparent' + ';}.crux-StackMenu .crux-StackMenuItem .item.item-open .hasSubItems div{content:"";position:absolute;top:17px;left:10px;width:0;height:0;border-right:5px solid transparent;border-left:5px solid transparent;border-top:5px solid #fff;}.crux-StackMenu .crux-StackMenuItem .item tbody tr:first-child,.crux-StackMenuItem .item tbody tr:last-child,.suggestPopupMiddleLeft,.suggestPopupMiddleRight,.suggestPopupBottom,.suggestPopupTop{display:none;}.crux-StackMenu .crux-StackMenuItem .item-border-w,.crux-StackMenuItem .item-border-e{width:' + '1px;}.crux-StackMenu .crux-StackMenuItem .itemLabel{padding:10px;}.crux-StackMenu .crux-StackMenuItem .crux-StackMenuItem .item{background:#fff;border:1px solid #ccc;color:#555;font-weight:normal;z-index:1;}.crux-StackMenu .crux-StackMenuItem .crux-StackMenuItem .crux-StackMenuItem .item{background:#eee;border:1px solid #ccc;color:#555;z-index:2' + ';}.crux-StackMenu .crux-StackMenuItem .crux-StackMenuItem .item .hasSubItems div{content:"";position:absolute;top:15px;left:10px;width:0;height:0;border-right:5px solid #333;border-top:5px solid transparent;border-bottom:5px solid transparent;}.crux-StackMenu .crux-StackMenuItem .crux-StackMenuItem .item.item-open .hasSubItems div{content:"";position:' + 'absolute;top:17px;left:10px;width:0;height:0;border-right:5px solid transparent;border-left:5px solid transparent;border-top:5px solid #333;}.crux-StackMenu .itemLabel{cursor:pointer;font-size:13px;}.crux-DatePicker{background:#eee' + ';box-shadow:0 0 0 1px rgba(0, 0, 0, 0.17), 0 3px 10px rgba(0, 0, 0, 0.1);border-radius:2px;overflow:hidden;}.crux-DatePicker .datePickerDays{border-collapse:collapse;background:#fff;}.crux-DatePicker .datePickerDays tbody tr td{border:1px solid #ccc;}.crux-DatePicker .datePickerDays tbody tr td:first-child{border-right:none;}.crux-DatePicker .datePickerDays tbody tr td:last-child{border-left:none;}.crux-DatePicker .datePickerDays tbody tr:last-child td{border-bottom:none;}.crux-DatePicker .datePickerDays .datePickerDay{padding:6px;font-size:' + '11px;cursor:default;}.crux-DatePicker .datePickerDays .datePickerDay:hover{background:#f5f5f5;}.crux-DatePicker .datePickerDays .datePickerWeekdayLabel,.crux-DatePicker .datePickerDays .datePickerWeekendLabel{background:rgba(51, 51, 51, 0.55);color:#fff;border:1px solid #5c5c5c;font-size:11px;text-align:center;}.crux-DatePicker .datePickerMonthSelector,.crux-SuggestPopup .suggestPopupContent table,.crux-FormDisplay .formEntryData input[type="text"],.crux-FormDisplay .formEntryData select,.crux-FormDisplay .formEntryData textarea{width:100%;}.crux-DatePicker .datePickerMonthSelector td[width="100%"]{text-align:center;}.crux-DatePicker .datePickerMonthSelector td{box-shadow:0 -2px rgba(0, 0, 0, 0.04) inset' + ';}.crux-DatePicker .datePickerMonthSelector td>div{padding:5px;cursor:pointer;}.crux-DatePicker .datePickerMonthSelector td:hover{background:#e0e0e0;}.crux-DatePicker .datePickerMonthSelector td[width="100%"]:hover{background:none;}.crux-SuggestPopup{background:#fff;border-radius:0 0 2px 2px;box-shadow:0 0 0 1px rgba(0, 0, 0, 0.1), 0 5px 10px rgba(0, 0, 0, 0.3);clip:auto !important;}.crux-SuggestPopup .suggestPopupContent table td{padding:6px;border-bottom:1px solid #ccc;font-size:' + '12px;cursor:pointer;}.crux-SuggestPopup .suggestPopupContent table td:hover{background:#eee;}.crux-SuggestPopup .suggestPopupContent table tr:last-child td{border-bottom:none;border-radius:0 0 2px 2px;}.gwt-ListBox{margin-bottom:10px;color:#444;padding:8px 8px;border-radius:1px;background:#f8f8f8;border:1px solid #92aec8' + ';box-shadow:0 1px 3px rgba(0, 0, 0, 0.1);}.gwt-ListBox:hover{border:1px solid #5c87b0;}.gwt-ListBox:active{box-shadow:0 1px 3px rgba(0, 0, 0, 0.1) inset;}.gwt-ListBox:disabled{background:#e5e5e5;border:1px solid #a5a5a5;box-shadow:0 1px 0 #eaeaea inset, 0 1px 3px rgba(0, 0, 0, 0.1);}.crux-RandomPager{border-radius:3px;border:1px solid #ccc;background:#fff;overflow:hidden;box-shadow:' + ('0 1px 3px rgba(0, 0, 0, 0.05);}.crux-RandomPager .gwt-ListBox{margin:5px 10px;}.crux-RandomPager td{border-left:1px solid #ccc;}.crux-RandomPager td:hover{background:#efefef;}.crux-RandomPager td:first-child{border-radius:3px 0 0 3px;}.crux-RandomPager td:last-child{border-radius:0 3px 3px 0;}.crux-RandomPager .firstButton{background:' + ("url('" + $svgIconPaginatorFirst().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center') + ';background-size:' + '10px auto' + ';}.crux-RandomPager .previousButton{background:' + ("url('" + $svgIconPaginatorPrev().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center') + ';background-size:' + '10px auto' + ';}.crux-RandomPager .nextButton{background:' + ("url('" + $svgIconPaginatorNext().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center')) + (';background-size:10px auto;}.crux-RandomPager .lastButton{background:' + ("url('" + $svgIconPaginatorLast().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center') + ';background-size:' + '10px auto' + ';}.crux-RandomPager td button{display:' + 'block' + ';border:' + '0' + ';padding:' + '12px' + ';}.crux-AbstractTablelessGridStructure .cellWrapper{display:' + 'inline-table' + ' !important;margin-right:' + '-1px' + ' !important;margin-top:' + '-1px' + ' !important;vertical-align:' + 'top' + ';}.crux-AbstractTablelessGridStructure .cellWrapper.cellWrapper-rowSelectionColumn td{background:') + '#f3f3f3 !important;}.crux-AbstractTablelessGridStructure .cellWrapper input{margin-bottom:0 !important;}.crux-AbstractTablelessGridStructure .cellWrapper .crux-Cell .gwt-Label{overflow:hidden;text-overflow:ellipsis;white-space:nowrap !important;}.crux-AbstractTablelessGridStructure td{min-width:initial !important;}@-webkit-keyframes crux-InfinityProgressBarAnimation\n{\n\t0%   {width:0%;left:0%}\n\t14%  {width:40%;left:0%;}\n\t28%  {width:0%;left:50%;}\n\t42%  {width:40%;left:50%;}\n\t56%  {width:0%;left:100%;}\n\t85%  {width:100%;left:0%}\n    100% {width:0%;left:0%}\n}@keyframes crux-InfinityProgressBarAnimation\n{\n\t0%   {width:0%;left:0%}\n\t14%  {width:40%;left:0%;}\n\t28%  {width:0%;left:50%;}\n\t42%  {width:40%;left:50%;}\n\t56%  {width:0%;left:100%;}\n\t85%  {width:100%;left:0%}\n    100% {width:0%;left:0%}\n}.crux-ColorPickerDialog *,.crux-Dialog *,.crux-FlatMessageBox *,.crux-DialogViewContainer *,.crux-FileUploader *,.grid .columnHeader *,.flapCloseButton,.crux-TabBarItem{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}.crux-Button{-webkit-user-select:none' + ';-moz-user-select:none;-ms-user-select:none;user-select:none;background:linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.1)) #4496c6;box-shadow:0 1px 0 rgba(255, 255, 255, 0.1) inset;margin:0 2px;}.crux-MenuTabsDisposal .menuEntriesContainer *,.previousMessageButton,.nextMessageButton{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}.crux-FileUploader .fileInputButton,.previousMessageButton,.nextMessageButton{background:' + 'linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.1)) #4496c6;box-shadow:0 1px 0 rgba(255, 255, 255, 0.1) inset;margin:0 2px;}.crux-FormDisplay .formEntryData:first-child{padding-bottom:10px;padding-left:20px;}.crux-FormDisplay .formEntryLabel{padding-bottom:10px;padding-left:20px;text-align:left;}.crux-FormDisplay tr:last-child .formEntryData{padding:10px 0 0 0;border-top:1px solid #ddd;}.crux-MenuTabsDisposal,.crux-MenuTabsDisposal .menuTabsSplitPanel,.crux-MenuTabsDisposal .menuTabsHeaderSplitPanel{height:calc(100% - 25px)' + ';padding:0;}.crux-MenuTabsDisposal .menuTabsHeader{background-color:#444949;height:25px;text-align:left;width:100%;border:solid 0;border-bottom:solid 1px #fff;}.crux-MenuTabsDisposal .menuEntriesContainer{width:300px;position:absolute;top:0;right:' + '0;background:url(img/logo-large.png) no-repeat 0 10px #ececec;}.menuTabsSplitPanel{background-image:url(noise.png);background-color:#eaeaea;border:none;border-left:solid 1px #eee;padding-right:300px;}.crux-MenuTabsDisposal .menuEntry{margin:0;border:solid 0;height:40px;background:white' + ';width:85%;margin-right:15%;box-shadow:0 -20px 10px 0 rgba(0, 0, 0, 0.02) inset;color:#4c6879;font-size:16px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-shadow:none;position:relative;border-radius:0;cursor:' + 'pointer;}.crux-MenuTabsDisposal .menuEntry:after{content:"";height:100%;width:30px;border:none;position:absolute;top:0;background:#81aa32;left:0;box-shadow:0 -10px 15px -1px rgba(0, 80, 0, 0.1) inset;color:white' + ';padding:0;overflow:auto;background-image:url(right-arrow.png);background-position:center;background-repeat:no-repeat;cursor:pointer;}.crux-MenuTabsDisposal .menuSection{height:50px;color:#fff;background-color:#4496c6;box-shadow:inset 0 -10px 30px #3d8dbd;font-size:' + '16px;padding:0;text-align:right;line-height:50px;padding-right:50px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;cursor:pointer;border:solid 0;width:100%;position:relative' + ';}.crux-MenuTabsDisposal .menuSection:after{content:"...";position:absolute;left:10px;opacity:0;transition:opacity ease-in-out 0.5s;}.crux-MenuTabsDisposal .menuSection-closed:after{content:"...";position:absolute;left:10px;opacity:0;transition:opacity ease-in-out 0.5s;opacity:' + '0.4 !important;}.crux-MenuTabsDisposal .menuSectionEntries{transition:height 0.2s ease-in-out;overflow:hidden;}.crux-TabContainer{background-color:#fff;}.crux-TabBar{height:55px;background-color:#e6e6e6;box-shadow:inset 0 -20px 20px -10px rgba(0, 0, 0, 0.2), 5px 0 10px -2px rgba(0, 0, 0, 0.15) inset;}.crux-TabPanelBottom{background-color:#fff;height:100%;box-shadow:10px 0 20px -10px rgba(0, 0, 0, 0.3) inset;padding-bottom:0' + ';padding-top:20px;box-sizing:content-box;-moz-box-sizing:content-box;}.crux-TabBarItem{height:43px;min-width:140px;background-color:#636969;opacity:0.75;margin-right:0;cursor:default;box-shadow:-20px 0 20px -10px rgba(0, 0, 0, 0.2) inset, 0 -20px 10px -10px rgba(0, 0, 0, 0.2) inset;position:' + 'relative;transition:all ease 0.3s;white-space:nowrap;}.crux-TabBarItem-selected{background-color:#4496c6;opacity:1;box-shadow:0 -20px 10px -10px rgba(0, 0, 0, 0.1) inset;}.crux-TabBarItem-selected:after{position:absolute;height:0;width:0;content:"";border:solid 8px #fff' + ';right:80px;bottom:-12px;}.crux-TabBarItem .flapLabel{font-size:16px;color:#fff;padding-top:12px;padding-right:10px;cursor:default;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;}.flapCloseButton{background-color:transparent;transition:' + 'font-size ease-in-out 0.15s;height:14px;width:14px;margin-right:5px;margin-top:2px;text-align:center;cursor:pointer;}.flapCloseButton:before{content:"X";color:#fff;padding-left:1px;font-family:arial' + ';font-size:14px;top:8px;position:absolute;left:8px;transition:all ease-in-out 0.1s;}.flapCloseButton:hover{font-size:14px;}.flapCloseButton:hover:before{font-size:16px;}.crux-RollingPanelPreviousWrapper,.crux-RollingPanelNextWrapper{width:31px;height:55px;}.crux-RollingPanelPrevious,.crux-RollingPanelNext{background-color:transparent;height:' + '55px;margin-top:0;width:31px;color:transparent !important;text-align:center;font-size:18px;border:none;position:relative;cursor:pointer;}.crux-RollingPanelPrevious:after{height:55px;width:30px' + ';position:absolute;top:0;background-position:center;background-repeat:no-repeat;content:"";cursor:pointer;right:0;box-shadow:10px -3px 10px -5px rgba(0, 0, 0, 0.2);border-left:solid 1px rgba(255, 255, 255, 0.3);background-image:url(left-arrow.png);}.crux-RollingPanelNext:after{height:' + '55px;width:30px;position:absolute;top:0;background-position:center;background-repeat:no-repeat;content:"";cursor:pointer;left:0;box-shadow:-10px -3px 10px -5px rgba(0, 0, 0, 0.2);border-right:solid 1px rgba(255, 255, 255, 0.3)' + ';background-image:url(right-arrow.png);}.crux-RollingPanelPrevious:hover,.crux-RollingPanelNext:hover{color:#fff;}.crux-RollingPanelPreviousWrapper-disabled,.crux-RollingPanelNextWrapper-disabled{visibility:hidden;}.crux-TabBarFirst-wrapper,.crux-TabBarRest-wrapper{display:none;}.crux-FileUploader{width:400px;}.crux-FileUploader .buttonsPanel{text-align:center;}.crux-FileUploader .filePanel{background:#fff;width:calc(100% - 20px);position:relative;width:100%;height:' + ('60px;}.crux-FileUploader .filePanel .cancelUploadButton{background:' + ("url('" + $svgIconClose_0().getSafeUri().asString() + "')" + ' ' + 'no-repeat') + ';border:' + '0 solid' + ';transition:' + 'box-shadow ease-in-out 0.15s' + ';height:' + '16px' + ';width:' + '16px' + ';text-align:' + 'center' + ';padding:' + '0' + ';position:' + 'absolute' + ';left:' + '5px' + ';top:' + '5px') + ';cursor:pointer;}.crux-FileUploader .filePanel .crux-ProgressBar .percentBar{height:18px !important;border-radius:1px;border-top:solid 2px #a1ca52;color:#618a12;font-size:11px;line-height:18px;padding-right:10px;box-sizing:border-box;-moz-box-sizing:border-box;position:' + 'absolute;top:-2px;}.crux-FileUploader .filePanel .gwt-Label{overflow:hidden;width:280px;margin-right:10px;color:#4c6879;position:absolute;right:55px;top:6px;text-align:right;padding:0' + ';box-sizing:border-box;-moz-box-sizing:border-box;margin:0;white-space:nowrap;}.crux-RssPanel{width:100%;}.crux-RssPanel .rssPanelTitle{color:#004f5e;text-shadow:0 1px 1px rgba(255, 255, 255, 0.9);font-size:1.5em;height:50px;margin-right:10px;}.crux-RssPanel .rssPanelBody{padding-right:' + '12px;padding-left:12px;}.crux-RssPanel .rssPanelBody TD{border-bottom:1px solid rgba(0, 0, 0, 0.1);}.crux-RssPanel .crux-entryTitle{color:#333;font-size:15px;font-family:Helvetica;cursor:pointer;}.crux-RssPanel .crux-entryDate{font-size:11px;background:rgba(0, 0, 0, 0.2);border-radius:20px;box-shadow:0 1px 0 rgba(0, 0, 0, 0.4) inset, 0 1px 0 rgba(255, 255, 255, 0.5)' + ';color:white;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.2);float:left;padding:3px 8px;}.gwt-Label,.crux-MaskedLabel{color:#1c5994;text-shadow:0 1px #fff;}.crux-sortableList{max-width:20%;}.crux-sortableList .listColumn{text-align:center;}.crux-sortableList .buttonsColumn{margin:10px;text-align:center;}.crux-sortableList .buttonsColumn button{border-radius:' + '0;margin-right:-1px;width:25% !important;min-width:0;position:relative;text-shadow:none;color:rgba(0, 0, 0, 0);}.crux-sortableList .buttonsColumn button:first-child{border-radius:3px 0 0 3px;}.crux-sortableList .buttonsColumn button:before{position:absolute;color:white;text-shadow:0 1px 1px rgba(0, 0, 0, 0.2)' + ';z-index:4;font-size:17px;}.crux-sortableList .buttonsColumn button:nth-child(1):before{content:"\u25B2";}.crux-sortableList .buttonsColumn button:nth-child(2):before{content:"\u25BC";width:1px;line-height:6px;margin-top:3px;right:50%;margin-right:-7px;}.crux-sortableList .buttonsColumn button:last-child{border-radius:0 3px 3px 0;}.crux-sortableList .listColumnFieldset{border:' + '1px solid #ccc;border-radius:3px;}.crux-ListShuttle{margin:10px 0;}.crux-ListShuttle .toSelectColumn,.crux-ListShuttle .selectedColumn{float:right;width:40%;height:100%;}.crux-ListShuttle .buttonsColumn{float:right;width:10%;margin:9px 5% 0;}.crux-ListShuttle legend{color:#fff;font-size:10px' + ';padding:2px 7px;background:#999;border-radius:100px;}.crux-ListShuttle .buttonsColumn button{width:100%;font-size:11px;font-weight:bold;border-radius:0;margin-top:-1px;padding:8px 0;}.crux-ListShuttle .buttonsColumn button:first-child{border-radius:3px 3px 0 0;}.crux-ListShuttle .buttonsColumn button:last-child{border-radius:' + '0 0 3px 3px;}.crux-ListShuttle fieldset{border:1px solid #ccc;border-radius:3px;height:100%;box-shadow:0 1px 5px rgba(0, 0, 0, 0.1) inset;display:block;padding:0;}.crux-ListShuttle fieldset>div{height:180px;overflow-y:auto;}.crux-ListShuttle fieldset div div div{padding:4px 0;border-bottom:1px solid #eee' + ';font-size:13px;}.crux-ListShuttle fieldset div div div:last-child{border-bottom:0;}.crux-ListShuttle fieldset div div div[tabindex]:last-child{border-radius:0 0 3px 3px;}.crux-Dialog,.crux-ProgressBox,.crux-FlatMessageBox,.crux-FlatDialog{background-color:#fff;border-radius:3px;box-shadow:0 0 0 1px rgba(0, 0, 0, 0.2), 0 5px 20px rgba(0, 0, 0, 0.4) !important;position:fixed !important;z-index:9;}.crux-Dialog .dialogTitleBodySplit,.crux-ProgressBox .dialogTitleBodySplit,.crux-FlatMessageBox .dialogTitleBodySplit{width:inherit;height:inherit;min-height:' + 'inherit;position:relative;overflow:hidden;}.crux-Dialog .dialogTopBar,.crux-ProgressBox .dialogTopBar{position:absolute;padding-top:10px;height:40px;width:inherit;top:0;right:0;z-index:1;background:#f7f7f7' + ';color:#5491b4;box-shadow:0 -2px #eaeaea inset, 0 1px 0 #d1d1d1;padding:11px 2px;border-radius:3px 3px 0 0;}.crux-FlatMessageBox .dialogTopBar{position:absolute;padding-top:10px;height:40px;width:inherit;top:0;right:0;z-index:' + '1;background:#f7f7f7;color:#5491b4;box-shadow:0 -2px #eaeaea inset, 0 1px 0 #d1d1d1;padding:11px 2px;border-radius:3px 3px 0 0;opacity:0;}.crux-Dialog .dialogTopBarDragHandle,.crux-ProgressBox .dialogTopBarDragHandle,.crux-FlatMessageBox .dialogTopBarDragHandle{position:absolute;top:0;right:0;background:transparent' + ';height:100%;width:100%;cursor:move;}.crux-Dialog .dialogTitle,.crux-ProgressBox .dialogTitle,.crux-FlatMessageBox .dialogTitle{color:#4496c6;text-align:center;font-size:18px;}.crux-ProgressBox .dialogTitle{font-size:12px;margin-top:6px;}.crux-Dialog .dialogCloseButton{position:absolute;left:2px;top:' + '2px;background:rgba(0, 0, 0, 0);border:none;cursor:pointer;}.crux-Dialog .dialogCloseButton:after{content:"X";color:#4496c6;font-size:18px;}.crux-Dialog .dialogBody,.crux-ProgressBox .dialogBody,.crux-FlatMessageBox .dialogBody{overflow:auto;height:calc(100% - 58px);border-bottom-left-radius:3px;border-bottom-right-radius:3px' + ';margin-top:40px;padding:10px 15px 0;}.crux-Dialog .popupContent,.crux-ProgressBox .popupContent,.crux-FlatMessageBox .popupContent{height:100%;min-height:inherit;width:100%;}.crux-Dialog .dialogResizer,.crux-FlatMessageBox .dialogResizer{position:absolute;height:12px;width:12px;bottom:0;left:0;border-top:' + 'rgba(0, 0, 0, 0);border-right:rgba(0, 0, 0, 0);cursor:nwse-resize;border-bottom-left-radius:3px;background:linear-gradient(135deg, #fff 50%, #aaa 50.1%, #eee 60%);padding:10px;}.crux-Dialog .dialogResizer:hover,.crux-FlatMessageBox .dialogResizer:hover{background:linear-gradient(135deg, #fff 50%, #aaa 50.1%, #e0e0e0 60%);}.crux-Dialog .dialogResizer:before,.crux-FlatMessageBox .dialogResizer:before{content:"";position:absolute;height:7px;width:11px' + ';bottom:5px;left:3px;border-top:solid 1px #aaa;cursor:nwse-resize;border-bottom-left-radius:2px;-webkit-transform:rotate(135deg);-moz-transform:rotate(135deg);-ms-transform:rotate(135deg);transform:rotate(135deg);}.crux-Dialog .dialogResizer:after,.crux-FlatMessageBox .dialogResizer:after{content:"";position:' + 'absolute;height:7px;width:8px;bottom:3px;left:3px;border-top:solid 1px #aaa;cursor:nwse-resize;border-bottom-left-radius:2px;-webkit-transform:rotate(135deg);-moz-transform:rotate(135deg);-ms-transform:rotate(135deg)' + ';transform:rotate(135deg);}.crux-ProgressBox{z-index:9;width:200px;height:60px;}.crux-ProgressBox .dialogTopBar{box-shadow:none;padding-top:6px;}.crux-ProgressBox .dialogBody{padding-right:20px;padding-left:20px;padding-top:0;}.crux-FlatMessageBox{max-width:80%;min-width:' + '350px;min-height:120px;}.crux-FlatMessageBox .dialogBody{margin-top:0;padding:20px 5px 0;height:100%;}.crux-FlatMessageBox .messageBoxContents{text-align:center;}.crux-FlatMessageBox .crux-Button{margin-top:25px;padding:8px 34px;}.crux-FlatMessageBox-success .gwt-HTML{color:#517a02;}.crux-FlatMessageBox-info .gwt-HTML{color:#4c6879;}.crux-FlatMessageBox-warn .gwt-HTML{color:#c28c00' + ';}.crux-FlatMessageBox-error .gwt-HTML{color:#b01010;}.crux-FileUploader .fileInputButton{padding:20px 14px;line-height:40px;margin-top:10px;cursor:pointer;width:170px;}.gwt-CheckBox{display:inline-block;}.gwt-CheckBox input{float:right;}.gwt-CheckBox label{font-size:14px;float:right;margin-left:' + '10px;margin-top:-3px;}.gwt-CheckBox:before{content:" ";display:table;}.gwt-CheckBox:after{content:" ";display:table;clear:both;}.crux-DialogViewContainer,.crux-ColorPickerDialog{background:white;border-radius:3px;box-shadow:0 0 0 1px rgba(0, 0, 0, 0.2), 0 5px 20px rgba(0, 0, 0, 0.4) !important;z-index:9' + ';}.dialogTop{height:40px;}.dialogTop td{background:#f7f7f7;color:#5491b4;box-shadow:0 -2px #eaeaea inset, 0 1px 0 #d1d1d1;padding:0 3px;cursor:move;}.dialogTop td:nth-child(1){border-radius:3px 0 0 0;}.dialogTop td:nth-child(2){padding:0 2px;border-radius:3px 3px 0 0;text-align:center;}.dialogTop td:nth-child(3){border-radius:' + ('0 3px 0 0;}.dialogMiddleCenter{padding:10px;}.dialogMiddleCenter button{margin-top:20px;}.closeButton{position:absolute;top:-8px;left:11px;width:16px;height:16px;border:none;background:' + ("url('" + $svgIconClose_0().getSafeUri().asString() + "')") + ';background-size:' + '100% auto') + ';}.crux-DialogViewContainer .dialogResizer{position:absolute;height:12px;width:12px;bottom:0;left:0;border-top:rgba(0, 0, 0, 0);border-right:rgba(0, 0, 0, 0);cursor:nwse-resize;border-bottom-left-radius:3px;background:linear-gradient(135deg, #fff 50%, #aaa 50.1%, #eee 60%);padding:' + '10px;}.crux-DialogViewContainer .dialogResizer:hover{background:linear-gradient(135deg, #fff 50%, #aaa 50.1%, #e0e0e0 60%);}.crux-DialogViewContainer .dialogResizer:before{content:"";position:absolute;height:7px;width:11px;bottom:5px;left:3px;border-top:solid 1px #aaa;cursor:nwse-resize;border-bottom-left-radius:2px' + ';-webkit-transform:rotate(135deg);}.crux-DialogViewContainer .dialogResizer:after{content:"";position:absolute;height:7px;width:8px;bottom:3px;left:3px;border-top:solid 1px #aaa;cursor:nwse-resize;border-bottom-left-radius:2px;-webkit-transform:' + 'rotate(135deg);}.detailImage{height:100%;left:0;position:fixed;top:0;width:100%;z-index:98;-moz-box-sizing:border-box;}.grid-detail-dialogbox{font-size:11px;background-color:white;border:1px solid #aaa' + ';box-shadow:0 0 10px rgba(0, 0, 0, 0.4);padding:1.25em;border-radius:6px;z-index:98;color:#444;}.msg-error-grid{font-size:11px;color:#ff2c19;font-weight:bolder;text-align:center;}.msg-success-grid{font-size:11px;color:' + '#297a30;font-weight:bolder;text-align:center;}.msg-warning-grid{font-size:11px;color:#c4c04f;font-weight:bolder;text-align:center;}.msg-info-grid{font-size:11px;color:#2d3e86;font-weight:bolder;text-align:center' + ';}.grid{margin:20px 0;}.grid tr{height:31px;}.grid td{border:1px solid #d4d4d4;background:#fff !important;}.grid th{background:#e4f6f1 !important;}.row-highlighted td{background:#ffffe1 !important;}.grid .columnHeadersRow .columnHeader table td{border:none;background:none !important;color:#1c5994;font-weight:bold;}.grid .columnHeadersRow .columnHeader table td .label{padding:' + '0 10px;}.grid .gwt-Label,.grid .crux-MaskedLabel{color:#222;text-align:right;padding:0 10px;}.grid .columnHeader{background:#f7f7f7;box-shadow:0 -2px 0 #eaeaea inset;}.grid .columnSorter{text-align:right;}.grid .columnSorter table{width:100%;}.grid .columnSorter .arrow{position:relative;}.grid .columnSorter .arrow:before{content:"";width:0' + ';height:0;left:0;top:-5px;position:absolute;margin-left:10px;border-right:5px solid transparent;border-left:5px solid transparent;border-bottom:5px solid #999;}.grid .columnSorter .arrow:after{content:"";width:0;height:' + '0;left:0;top:1px;position:absolute;margin-left:10px;border-right:5px solid transparent;border-left:5px solid transparent;border-top:5px solid #999;}.grid .columnSorter.columnSorter-asc .arrow:before,.grid .columnSorter.columnSorter-asc .arrow:after,.grid .columnSorter.columnSorter-desc .arrow:before,.grid .columnSorter.columnSorter-desc .arrow:after{display:none;}.grid .columnSorter.columnSorter-asc .arrow{width:0;height:0' + ';float:left;margin-left:10px;border-right:5px solid transparent;border-left:5px solid transparent;border-bottom:5px solid #111;}.grid .columnSorter.columnSorter-desc .arrow{width:0;height:0;float:left;margin-left:10px;border-right:5px solid transparent;border-left:' + '5px solid transparent;border-top:5px solid #111;}.grid .crux-Cell .columnHeader .columnSorter{cursor:pointer;}.storeItem{margin-left:20px;margin-bottom:20px;}.promoBannerImage{background-repeat:no-repeat;background-position:center center;background-color:#acdf53;color:white;}.messagePanel{width:100%;height:100%' + ';}.messagePanel td{vertical-align:middle !important;}.messagePanel .title{text-align:center;font-size:30px;text-shadow:0 1px 0 rgba(0, 0, 0, 0.1), 0 2px 1px rgba(0, 0, 0, 0.1), 0 3px 2px rgba(0, 0, 0, 0.1), 0 4px 3px rgba(0, 0, 0, 0.1), 0 6px 3px rgba(0, 0, 0, 0.1);color:#fff;}.messagePanel .text{text-align:center;color:#fff;font-size:17px;text-shadow:0 1px 0 rgba(0, 0, 0, 0.1), 0 2px 1px rgba(0, 0, 0, 0.1);}.bannersArea{margin:10px;border-radius:' + ('5px;overflow:hidden;}.bannersArea .leftArrow{width:50px;height:90px;background:' + ("url('" + $svgIconArrow().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center' + ' ' + 'rgba(' + '0' + ',' + ' ' + '0' + ',' + ' ' + '0' + ',' + ' ' + '0.2' + ')') + ';background-size:' + '22px auto' + ';border-radius:' + '4px 0 0 4px' + ';-webkit-transform:' + 'rotate(-180deg)' + ';-moz-transform:' + 'rotate(-180deg)' + ';-ms-transform:' + 'rotate(-180deg)' + ';transform:' + 'rotate(-180deg)') + (';}.bannersArea .rightArrow{width:50px;height:90px;background:' + ("url('" + $svgIconArrow().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center' + ' ' + 'rgba(' + '0' + ',' + ' ' + '0' + ',' + ' ' + '0' + ',' + ' ' + '0.2' + ')') + ';background-size:' + '22px auto' + ';border-radius:' + '4px 0 0 4px' + ';}.bannersArea .leftArrow:hover,.bannersArea .rightArrow:hover{background:' + ("url('" + $svgIconArrow().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center' + ' ' + 'rgba(' + '0' + ',' + ' ' + '0' + ',' + ' ' + '0' + ',' + ' ' + '0.35' + ')') + ';background-size:' + '22px auto' + ';}.bullets{margin:' + '10px 10px 10px 0' + ';}.bullets .bullet{width:' + '8px' + ';height:' + '8px' + ';background:') + 'rgba(0, 0, 0, 0.4);border-radius:10px;margin-left:10px;}.bullets .bullet.bullet-active{background:rgba(0, 0, 0, 0.7);}.crux-Slideshow td{text-align:center;}.crux-SlideshowComponent .crux-RollingPanelBody{width:auto !important;border-radius:3px;overflow:hidden;box-shadow:0 0 0 1px rgba(0, 0, 0, 0.9);display:inline-block;background:#000' + ';height:45px;}.crux-SlideshowComponent .crux-RollingPanelBody .thumbnail{margin:0 0 0 1px !important;opacity:0.6;}.crux-SlideshowComponent .crux-RollingPanelBody table tr td:last-child .thumbnail{margin-left:0 !important;}.crux-SlideshowComponent .crux-RollingPanelBody .thumbnail:hover,.crux-SlideshowComponent .crux-RollingPanelBody .thumbnail.thumbnail-selected{opacity:1;}.crux-Slideshow .crux-SlideshowNavigator{width:auto !important;display:inline-block;padding:5px 30px;font-weight:bold;border-radius:50px;border:' + '2px solid #797979;margin:10px 0;}.crux-Slideshow .crux-SlideshowNavigator .gwt-Label{color:#797979 !important;text-align:none !important;font-size:12px !important;}.crux-SlideshowComponent .crux-Photo .gwt-Image{box-shadow:0 0 54px rgba(0, 0, 0, 0.33);margin:50px 0;}.crux-SlideshowPlayPanel{width:37px;height:37px;border-radius:2px;border:2px solid #6c6c6c' + (';background:' + ("url('" + $svgIconPlay().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'no-repeat' + ' ' + '10px' + ' ' + 'center' + ' ' + 'transparent') + ';border-radius:' + '37px' + ';margin-top:' + '-40px' + ';margin-bottom:' + '15px' + ';position:' + 'relative' + ';z-index:' + '2' + ';}.crux-SlideshowPlayPanel.crux-SlideshowPlayPanel-playing{background:' + ("url('" + $svgIconPause().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'no-repeat' + ' ' + '9px' + ' ' + 'center' + ' ' + 'transparent') + ';}.crux-SlideshowPhotoDescription{width:' + '50%' + ' !important;display:' + 'block' + ';border-top:' + '1px solid #ccc' + ';padding-top:') + '10px;color:#888;margin:-56px auto 10px;}.crux-ScrollBanner{padding:10px;background:#fff;}.crux-ScrollBanner>tbody>tr>td:first-child{width:100% !important;}.crux-ScrollBanner .message{padding:10px;letter-spacing:-1px;}.crux-ScrollBanner .messageCount{border-right:1px solid #ccc;border-left:1px solid #ccc;font-size:13px' + ';padding:5px 0;margin:0 2px;}.crux-ScrollBanner .previousMessageButton .gwt-Label{width:0;height:0;border-right:5px solid transparent;border-left:5px solid transparent;border-bottom:5px solid #fff;}.crux-ScrollBanner .nextMessageButton .gwt-Label{width:0;height:0;border-right:5px solid transparent;border-left:' + '5px solid transparent;border-top:5px solid #fff;}.crux-ScrollBanner .previousMessageButton,.nextMessageButton{padding:8px 9px;}.crux-StyledPanelOuter{width:auto;}.crux-StackMenu{width:200px;}.crux-TopMenuDisposal .headerPanel .menuPanel{border:1px solid #1a6299;border-radius:2px;overflow:hidden;}.crux-TopMenuDisposal .headerPanel .menuPanel table{width:100%;}.crux-TopMenuDisposal .headerPanel .menuPanel .menuEntry{width:auto;padding:10px' + ';color:#fff;text-align:center !important;border-left:1px solid #1a6299;box-shadow:none !important;background:#4496c6;}.crux-TopMenuDisposal .headerPanel .menuPanel .menuEntry:hover{background:#3185b6;}.crux-TopMenuDisposal .headerPanel .menuPanel .menuEntry:last-child{border-left:0;}.crux-TopMenuDisposal .headerPanel .menuPanel .menuEntry:after{display:none;}.crux-Timer{display:inline-block;}.edit-column-button{width:20px;height:' + ('20px;border:none;background:' + ("url('" + $gridEditIcon().getSafeUri().asString() + "')" + ' ' + 'no-repeat') + ';}.save-column-button{width:' + '20px' + ';height:' + '20px' + ';border:' + 'none' + ';background:' + ("url('" + $gridSaveIcon().getSafeUri().asString() + "')" + ' ' + 'no-repeat') + ';}.cancel-column-button{width:' + '20px' + ';height:' + '20px' + ';border:' + 'none' + ';background:' + ("url('" + $gridCancelIcon().getSafeUri().asString() + "')" + ' ' + 'no-repeat')) + ';}.panel-editor-column{border:none;padding:0;width:60px;}.crux-ViewContainer{height:100%;width:100%;}.button-disabled{opacity:0.2;}':'html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;}body{margin:0;}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block;}audio,canvas,progress,video{display:inline-block;vertical-align:baseline;}[hidden],template{display:none;}a{background:0 0;}a:active,a:hover{outline:0;}abbr[title]{border-bottom:1px dotted;}b,strong{font-weight:700;}dfn{font-style:italic;}h1{font-size:2em;margin:0.67em 0;}mark{background:#ff0;color:#000;}small{font-size:80%;}sub{font-size:75%;line-height:0;position:relative;vertical-align:baseline;bottom:-0.25em;}sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;top:-0.5em;}img{border:0;}figure{margin:1em 40px;}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0;}pre{overflow:auto;}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em;}button{color:inherit;font:inherit;margin:0;overflow:visible;text-transform:none;-webkit-appearance:button;cursor:pointer;}input{color:inherit;font:inherit;margin:0;line-height:normal;}optgroup{color:inherit;font:inherit;margin:0;}select{color:inherit;font:inherit;margin:0;text-transform:none;}textarea{color:inherit;font:inherit;margin:0;overflow:auto;}html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer;}button[disabled],html input[disabled]{cursor:default;}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0;}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto;}input[type="search"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none;}fieldset{border:1px solid silver;margin:0 2px;padding:0.35em 0.625em 0.75em;}legend{border:0;padding:0;}optgroup{font-weight:700;}table{border-collapse:collapse;border-spacing:0;}td,th{padding:0;}:focus,:active,:hover{outline:none;-webkit-tap-hightlight-color:rgba(0, 0, 0, 0);}*,:before,:after{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;}.cf:before{content:" ";display:table;}.cf:after{content:" ";display:table;clear:both;}[disabled]{cursor:not-allowed !important;}hr{background:#e3e3e3;height:1px;margin:10px 0;border:none;}pre,code{background:#f3f7f8;color:#6377cb;font-weight:bold;font-size:13px;padding:2px 4px;border-radius:2px;box-shadow:0 0 0 1px rgba(0, 0, 0, 0.1);}html{margin:0;padding:0;height:100%;}body{background:#fff;margin:0;padding:0;height:100%;font-size:14px;font-family:OpenSans, Verdana, Helvetica, Arial, sans-serif;}input,button{vertical-align:top;margin-top:0;margin-bottom:0;}.crux-Anchor{color:#4192e3;text-decoration:none;}.crux-Anchor:hover{color:#05a;}a.crux-Button{white-space:nowrap;}a.crux-Button:hover{text-decoration:none;color:#fff;}.crux-Button,.crux-FileUploader .fileInputButton,.previousMessageButton,.nextMessageButton,.crux-DownloadButton{background:#4496c6;border:1px solid #1a6299;padding:8px 14px;border-radius:1px;font-size:100%;color:#fff;text-shadow:0 1px 0 rgba(0, 0, 0, 0.15);}.crux-Button:hover,.previousMessageButton:hover,.nextMessageButton:hover,.crux-DownloadButton:hover{border-color:#084471;}.crux-Button:focus,.fileInputButton:focus,.previousMessageButton:focus,.nextMessageButton:focus,.crux-DownloadButton:focus{box-shadow:0 0 0 3px rgba(0, 0, 0, 0.22);}.crux-Button:focus:active,.fileInputButton:focus:active,.previousMessageButton:active,.nextMessageButton:active,.crux-DownloadButton:active{box-shadow:0 2px 2px rgba(0, 0, 0, 0.2) inset, 0 0 0 3px rgba(0, 0, 0, 0.12);}.crux-Button.success,.crux-FlatMessageBox-success .crux-Button,.crux-DownloadButton.success{background:#81aa33;border:1px solid #6d991a;}.crux-Button.success:hover,.crux-FlatMessageBox-success .crux-Button:hover,.crux-DownloadButton.success:hover{border-color:#527808;}.crux-Button.warn,.crux-FlatMessageBox-warn .crux-Button,.crux-DownloadButton.warn{background:#ed9c28;border:1px solid #d58512;}.crux-Button.warn:hover,.crux-FlatMessageBox-warn .crux-Button:hover,.crux-DownloadButton.warn:hover{border-color:#b76f09;}.crux-Button.error,.crux-FlatMessageBox-error .crux-Button,.crux-DownloadButton.error{background:#d2322d;border:1px solid #ac2925;}.crux-Button.error:hover,.crux-FlatMessageBox-error .crux-Button:hover,.crux-DownloadButton.error:hover{border-color:#96130f;}.crux-Button:disabled,.crux-DownloadButton:disabled{background:#e5e5e5;border:1px solid #a5a5a5;color:#9c9c9c;text-shadow:0 1px 0 rgba(255, 255, 255, 0.6);}.crux-Button.bullet,.crux-DownloadButton.bullet{border-radius:500px;}.crux-Button.round,.crux-DownloadButton.round{border-radius:3px;}.crux-Button.mini,.crux-DownloadButton.mini{font-size:70%;padding:4px 7px;}.crux-Button.xsmall,.crux-DownloadButton.xsmall{font-size:70%;}.crux-Button.small,.crux-DownloadButton.small{font-size:85%;}.crux-Button.large,.crux-DownloadButton.large{font-size:110%;}.crux-Button.xlarge,.crux-DownloadButton.xlarge{font-size:130%;}.gwt-TextBox,.gwt-TextArea,.crux-DateBox,.crux-Filter,.crux-NumberTextBox,.crux-SingleSelect,.crux-MaskedTextBox{background:#fff;color:#444;padding:8px 8px;border-radius:1px;border:1px solid #92aec8;box-shadow:0 1px 2px rgba(0, 0, 0, 0.14) inset;margin-bottom:' + ('10px;}.gwt-TextBox:hover,.gwt-TextArea:hover,.crux-DateBox:hover,.crux-Filter:hover,.crux-NumberTextBox:hover,.crux-SingleSelect:hover,.crux-MaskedTextBox:hover{border:1px solid #5c87b0;}.gwt-TextBox:focus,.gwt-TextArea:focus,.crux-DateBox:focus,.crux-Filter:focus,.crux-NumberTextBox:focus,.crux-SingleSelect:focus,.crux-MaskedTextBox:focus{border:1px solid #66afe9;box-shadow:0 1px 2px rgba(0, 0, 0, 0.2) inset, 0 0 5px rgba(102, 175, 233, 0.75);}.gwt-TextBox.success,.gwt-TextArea.success,.crux-DateBox.success,.crux-Filter.success,.crux-NumberTextBox.success,.crux-MaskedTextBox.success{border:1px solid #6d991a;background:' + ("url('" + $svgIconSuccess().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + '96%' + ' ' + 'center' + ' ' + '#fff') + ';background-position:' + 'right 6px center' + ';padding-right:' + '30px' + ';box-shadow:' + '0 1px 2px rgba(0, 0, 0, 0.14) inset, -30px 0 0 rgba(70, 180, 0, 0.18) inset' + ';}.gwt-TextBox.success:hover,.gwt-TextArea.success:hover,.crux-DateBox.success:hover,.crux-Filter.success:hover,.crux-MaskedTextBox.success:hover{border-color:' + '#527808' + ';}.gwt-TextBox.success:focus,.gwt-TextArea.success:focus,.crux-DateBox.success:focus,.crux-Filter.success:focus,.crux-NumberTextBox.success:focus{box-shadow:' + '0 1px 2px rgba(0, 0, 0, 0.2) inset, 0 0 5px rgba(0, 255, 0, 0.4), -30px 0 0 rgba(70, 180, 0, 0.18) inset') + (';}.gwt-TextBox.warn,.gwt-TextArea.warn,.crux-DateBox.warn,.crux-Filter.warn,.crux-NumberTextBox.warn,.crux-MaskedTextBox.warn{border:1px solid #d58512;background:' + ("url('" + $svgIconWarning().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + '96%' + ' ' + 'center' + ' ' + '#fff') + ';background-position:' + 'right 6px center' + ';padding-right:' + '30px' + ';box-shadow:' + '0 1px 2px rgba(0, 0, 0, 0.14) inset, -30px 0 0 rgba(190, 180, 0, 0.18) inset' + ';}.gwt-TextBox.warn:hover,.gwt-TextArea.warn:hover,.crux-DateBox.warn:hover,.crux-Filter.warn:hover,.crux-NumberTextBox.warn:hover,.crux-MaskedTextBox.warn:hover{border-color:' + '#b76f09' + ';}.gwt-TextBox.warn:focus,.gwt-TextArea.warn:focus,.crux-DateBox.warn:focus,.crux-Filter.warn:focus,.crux-NumberTextBox.warn:focus,.crux-MaskedTextBox.warn:focus{box-shadow:' + '0 1px 2px rgba(0, 0, 0, 0.2) inset, 0 0 5px rgba(255, 168, 0, 0.6), -30px 0 0 rgba(190, 180, 0, 0.18) inset' + ';}.gwt-TextBox.error,.gwt-TextArea.error,.crux-DateBox.error,.crux-Filter.error,.crux-NumberTextBox.error{border:' + '1px solid #ac2925' + ';background:' + ("url('" + $svgIconDanger().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + '96%' + ' ' + 'center' + ' ' + '#fff') + ';background-position:' + 'right 6px center' + ';padding-right:') + '30px;box-shadow:0 1px 2px rgba(0, 0, 0, 0.14) inset, -30px 0 0 rgba(190, 80, 30, 0.18) inset;}.gwt-TextBox.error:hover,.gwt-TextArea.error:hover,.crux-DateBox.error:hover,.crux-Filter.error:hover,.crux-NumberTextBox.error:hover,.crux-MaskedTextBox.error:hover{border-color:#96130f;}.gwt-TextBox.error:focus,.gwt-TextArea.error:focus,.crux-DateBox.error:focus,.crux-Filter.error:focus,.crux-NumberTextBox.error:focus .crux-MaskedTextBox.error:focus{box-shadow:0 1px 2px rgba(0, 0, 0, 0.2) inset, 0 0 5px rgba(255, 0, 0, 0.4), -30px 0 0 rgba(190, 80, 30, 0.18) inset;}.gwt-TextBox.mini,.gwt-TextArea.mini,.crux-DateBox.mini,.crux-Filter.mini,.crux-NumberTextBox.mini,.crux-MaskedTextBox.mini{font-size:70%;padding:4px 7px;}.gwt-TextBox.xsmall,.gwt-TextArea.xsmall,.crux-DateBox.xsmall,.crux-Filter.xsmall,.crux-NumberTextBox.xsmall .crux-MaskedTextBox.xsmall{font-size:70%;padding:6px 10px;}.gwt-TextBox.small,.gwt-TextArea.small,.crux-DateBox.small,.crux-Filter.small,.crux-NumberTextBox.small,.crux-MaskedTextBox.small{font-size:80%;padding:8px 12px;}.gwt-TextBox.large,.gwt-TextArea.large,.crux-DateBox.large,.crux-Filter.large,.crux-NumberTextBox.large,.crux-MaskedTextBox.large{font-size:115%' + ';}.gwt-TextBox.xlarge,.gwt-TextArea.xlarge,.crux-DateBox.xlarge,.crux-Filter.xlarge,.crux-NumberTextBox.xlarge,.crux-MaskedTextBox.xlarge{font-size:130%;}.gwt-TextBox.bullet,.gwt-TextArea.bullet,.crux-DateBox.bullet,.crux-Filter.bullet,.crux-NumberTextBox.bullet,.crux-MaskedTextBox.bullet{border-radius:500px;}.gwt-TextBox.round,.gwt-TextArea.round,.crux-DateBox.round,.crux-Filter.round,.crux-NumberTextBox.round,.crux-MaskedTextBox.round{border-radius:3px;}.gwt-TextBox:disabled,.gwt-TextArea:disabled,.crux-DateBox:disabled,.crux-Filter:disabled,.crux-NumberTextBox:disabled,.crux-MaskedTextBox:disabled{background:#e5e5e5;border:1px solid #a5a5a5;color:#9c9c9c;text-shadow:0 1px 0 rgba(255, 255, 255, 0.6);}.crux-StyledPanelOuter{padding:8px;width:100%;}.crux-StyledPanel,.crux-FileUploader .dropArea,.crux-FileUploader .filePanel,.crux-ScrollBanner{background:#fff;display:' + 'block;border:solid #c7c7c7 1px;box-shadow:0 1px 3px rgba(90, 90, 90, 0.2);padding:15px;}.crux-FormDisplay .formEntryData:first-child,.crux-FormDisplay .formEntryLabel{padding-bottom:10px;padding-right:20px;}.crux-ProgressDialogScreenBlocker,.crux-MessageDialogScreenBlocker{background-color:#000;opacity:0.45;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=25)";display:block;background:none repeat scroll 0 0 rgba(0, 0, 0, 0.45)' + ';height:200%;left:0;position:fixed;top:0;width:200%;z-index:98;}.crux-MessageDialog{z-index:99;}.crux-DefaultScreenBlocker{background-color:#fff;opacity:0.01;filter:"alpha(opacity=1)";cursor:' + 'wait;}.crux-RssPanel .rssPanelTitle{margin-top:0;font-weight:bold;}.crux-RssPanel .rssPanelBody{width:100%;}.crux-RssPanel .rssPanelBody TD{height:40px;box-shadow:0 1px rgba(255, 255, 255, 0.3);}.dialogGlass{background-color:rgba(0, 0, 0, 0.2);position:fixed !important;z-index:8;}.crux-InfinityProgressBar{width:100%;height:1px' + ';position:relative;}.crux-InfinityProgressBar .progressBarSlot{width:100%;height:1px;position:absolute;top:0;left:0;border-top:solid 2px #eee;box-sizing:border-box;-moz-box-sizing:border-box;}.crux-InfinityProgressBar .progressBarFill{height:1px;border-top:' + 'solid 2px #b1da62;box-sizing:border-box;-moz-box-sizing:border-box;position:absolute;top:0;left:0;box-shadow:0 0 20px rgba(161, 202, 82, 0.7);-webkit-animation:crux-InfinityProgressBarAnimation 2s linear infinite;animation:crux-InfinityProgressBarAnimation 2s linear infinite;}.crux-FileUploader .chooseButton{cursor:pointer;}.crux-FileUploader .dropArea{border-style:dashed' + ';min-height:160px;background:url(upload-icon.png) no-repeat center #f5f5f5;box-shadow:none;}.crux-FileUploader .filesArea{background-color:#f5f5f5;}.crux-FileUploader .filePanel .thumbnailImage{border:solid 1px #c0c0c0;height:40px;width:40px;display:inline;position:absolute;top:8px;left:' + ('8px;}.crux-FileUploader .filePanel .thumbnailImage.noPreview{background:' + ("url('" + $svgIconFile().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center' + ' ' + '6px' + ' ' + '#eee') + ';color:' + '#777' + ';font-size:' + '10px' + ';text-align:' + 'center' + ';line-height:' + '56px' + ';letter-spacing:' + '-1px' + ';padding-right:' + '3px' + ';}.crux-FileUploader .filePanel .crux-ProgressBar{width:' + '280px' + ';border-radius:' + '1px' + ';height:' + '18px') + ';position:absolute;top:30px;left:55px;margin:0;padding:0;border-top:solid 2px #eee;}.crux-FileUploader .filePanel .crux-ProgressBar .percentBar{height:18px !important;border-radius:1px;border-top:solid 2px #a1ca52;color:#618a12;font-size:' + '11px;line-height:18px;padding-left:1px;box-sizing:border-box;-moz-box-sizing:border-box;position:absolute;top:-2px;}.crux-ColorPickerDialog .previewPanel{width:20px;height:20px;float:right;border-radius:2px' + ';margin-right:3px;}.crux-ColorPickerDialog .crux-SaturationLightnessPicker{box-shadow:0 0 0 4px rgba(0, 0, 0, 0.07), 0 0 0 1px rgba(0, 0, 0, 0.1);}.crux-ColorPickerDialog .crux-HuePicker{margin-left:10px;}.crux-ColorPickerDialog .dialogMiddleCenter{padding:10px 0 10px 3px;}.crux-StackMenu .crux-StackMenuItem .item{background:#4496c6;border:1px solid #1a6299;color:#fff;font-weight:bold;font-size:13px;margin-top:-1px;position:' + 'relative;z-index:3;}.crux-StackMenu .crux-StackMenuItem .item .hasSubItems div{content:"";position:absolute;top:15px;right:10px;width:0;height:0;border-left:5px solid #fff;border-top:5px solid transparent;border-bottom:5px solid transparent' + ';}.crux-StackMenu .crux-StackMenuItem .item.item-open .hasSubItems div{content:"";position:absolute;top:17px;right:10px;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid #fff;}.crux-StackMenu .crux-StackMenuItem .item tbody tr:first-child,.crux-StackMenuItem .item tbody tr:last-child,.suggestPopupMiddleLeft,.suggestPopupMiddleRight,.suggestPopupBottom,.suggestPopupTop{display:none;}.crux-StackMenu .crux-StackMenuItem .item-border-w,.crux-StackMenuItem .item-border-e{width:' + '1px;}.crux-StackMenu .crux-StackMenuItem .itemLabel{padding:10px;}.crux-StackMenu .crux-StackMenuItem .crux-StackMenuItem .item{background:#fff;border:1px solid #ccc;color:#555;font-weight:normal;z-index:1;}.crux-StackMenu .crux-StackMenuItem .crux-StackMenuItem .crux-StackMenuItem .item{background:#eee;border:1px solid #ccc;color:#555;z-index:2' + ';}.crux-StackMenu .crux-StackMenuItem .crux-StackMenuItem .item .hasSubItems div{content:"";position:absolute;top:15px;right:10px;width:0;height:0;border-left:5px solid #333;border-top:5px solid transparent;border-bottom:5px solid transparent;}.crux-StackMenu .crux-StackMenuItem .crux-StackMenuItem .item.item-open .hasSubItems div{content:"";position:' + 'absolute;top:17px;right:10px;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid #333;}.crux-StackMenu .itemLabel{cursor:pointer;font-size:13px;}.crux-DatePicker{background:#eee' + ';box-shadow:0 0 0 1px rgba(0, 0, 0, 0.17), 0 3px 10px rgba(0, 0, 0, 0.1);border-radius:2px;overflow:hidden;}.crux-DatePicker .datePickerDays{border-collapse:collapse;background:#fff;}.crux-DatePicker .datePickerDays tbody tr td{border:1px solid #ccc;}.crux-DatePicker .datePickerDays tbody tr td:first-child{border-left:none;}.crux-DatePicker .datePickerDays tbody tr td:last-child{border-right:none;}.crux-DatePicker .datePickerDays tbody tr:last-child td{border-bottom:none;}.crux-DatePicker .datePickerDays .datePickerDay{padding:6px;font-size:' + '11px;cursor:default;}.crux-DatePicker .datePickerDays .datePickerDay:hover{background:#f5f5f5;}.crux-DatePicker .datePickerDays .datePickerWeekdayLabel,.crux-DatePicker .datePickerDays .datePickerWeekendLabel{background:rgba(51, 51, 51, 0.55);color:#fff;border:1px solid #5c5c5c;font-size:11px;text-align:center;}.crux-DatePicker .datePickerMonthSelector,.crux-SuggestPopup .suggestPopupContent table,.crux-FormDisplay .formEntryData input[type="text"],.crux-FormDisplay .formEntryData select,.crux-FormDisplay .formEntryData textarea{width:100%;}.crux-DatePicker .datePickerMonthSelector td[width="100%"]{text-align:center;}.crux-DatePicker .datePickerMonthSelector td{box-shadow:0 -2px rgba(0, 0, 0, 0.04) inset' + ';}.crux-DatePicker .datePickerMonthSelector td>div{padding:5px;cursor:pointer;}.crux-DatePicker .datePickerMonthSelector td:hover{background:#e0e0e0;}.crux-DatePicker .datePickerMonthSelector td[width="100%"]:hover{background:none;}.crux-SuggestPopup{background:#fff;border-radius:0 0 2px 2px;box-shadow:0 0 0 1px rgba(0, 0, 0, 0.1), 0 5px 10px rgba(0, 0, 0, 0.3);clip:auto !important;}.crux-SuggestPopup .suggestPopupContent table td{padding:6px;border-bottom:1px solid #ccc;font-size:' + '12px;cursor:pointer;}.crux-SuggestPopup .suggestPopupContent table td:hover{background:#eee;}.crux-SuggestPopup .suggestPopupContent table tr:last-child td{border-bottom:none;border-radius:0 0 2px 2px;}.gwt-ListBox{margin-bottom:10px;color:#444;padding:8px 8px;border-radius:1px;background:#f8f8f8;border:1px solid #92aec8' + ';box-shadow:0 1px 3px rgba(0, 0, 0, 0.1);}.gwt-ListBox:hover{border:1px solid #5c87b0;}.gwt-ListBox:active{box-shadow:0 1px 3px rgba(0, 0, 0, 0.1) inset;}.gwt-ListBox:disabled{background:#e5e5e5;border:1px solid #a5a5a5;box-shadow:0 1px 0 #eaeaea inset, 0 1px 3px rgba(0, 0, 0, 0.1);}.crux-RandomPager{border-radius:3px;border:1px solid #ccc;background:#fff;overflow:hidden;box-shadow:' + ('0 1px 3px rgba(0, 0, 0, 0.05);}.crux-RandomPager .gwt-ListBox{margin:5px 10px;}.crux-RandomPager td{border-right:1px solid #ccc;}.crux-RandomPager td:hover{background:#efefef;}.crux-RandomPager td:first-child{border-radius:3px 0 0 3px;}.crux-RandomPager td:last-child{border-radius:0 3px 3px 0;}.crux-RandomPager .firstButton{background:' + ("url('" + $svgIconPaginatorFirst().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center') + ';background-size:' + '10px auto' + ';}.crux-RandomPager .previousButton{background:' + ("url('" + $svgIconPaginatorPrev().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center') + ';background-size:' + '10px auto' + ';}.crux-RandomPager .nextButton{background:' + ("url('" + $svgIconPaginatorNext().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center')) + (';background-size:10px auto;}.crux-RandomPager .lastButton{background:' + ("url('" + $svgIconPaginatorLast().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center') + ';background-size:' + '10px auto' + ';}.crux-RandomPager td button{display:' + 'block' + ';border:' + '0' + ';padding:' + '12px' + ';}.crux-AbstractTablelessGridStructure .cellWrapper{display:' + 'inline-table' + ' !important;margin-left:' + '-1px' + ' !important;margin-top:' + '-1px' + ' !important;vertical-align:' + 'top' + ';}.crux-AbstractTablelessGridStructure .cellWrapper.cellWrapper-rowSelectionColumn td{background:') + '#f3f3f3 !important;}.crux-AbstractTablelessGridStructure .cellWrapper input{margin-bottom:0 !important;}.crux-AbstractTablelessGridStructure .cellWrapper .crux-Cell .gwt-Label{overflow:hidden;text-overflow:ellipsis;white-space:nowrap !important;}.crux-AbstractTablelessGridStructure td{min-width:initial !important;}@-webkit-keyframes crux-InfinityProgressBarAnimation\n{\n\t0%   {width:0%;left:0%}\n\t14%  {width:40%;left:0%;}\n\t28%  {width:0%;left:50%;}\n\t42%  {width:40%;left:50%;}\n\t56%  {width:0%;left:100%;}\n\t85%  {width:100%;left:0%}\n    100% {width:0%;left:0%}\n}@keyframes crux-InfinityProgressBarAnimation\n{\n\t0%   {width:0%;left:0%}\n\t14%  {width:40%;left:0%;}\n\t28%  {width:0%;left:50%;}\n\t42%  {width:40%;left:50%;}\n\t56%  {width:0%;left:100%;}\n\t85%  {width:100%;left:0%}\n    100% {width:0%;left:0%}\n}.crux-ColorPickerDialog *,.crux-Dialog *,.crux-FlatMessageBox *,.crux-DialogViewContainer *,.crux-FileUploader *,.grid .columnHeader *,.flapCloseButton,.crux-TabBarItem{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}.crux-Button{-webkit-user-select:none' + ';-moz-user-select:none;-ms-user-select:none;user-select:none;background:linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.1)) #4496c6;box-shadow:0 1px 0 rgba(255, 255, 255, 0.1) inset;margin:0 2px;}.crux-MenuTabsDisposal .menuEntriesContainer *,.previousMessageButton,.nextMessageButton{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}.crux-FileUploader .fileInputButton,.previousMessageButton,.nextMessageButton{background:' + 'linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.1)) #4496c6;box-shadow:0 1px 0 rgba(255, 255, 255, 0.1) inset;margin:0 2px;}.crux-FormDisplay .formEntryData:first-child{padding-bottom:10px;padding-right:20px;}.crux-FormDisplay .formEntryLabel{padding-bottom:10px;padding-right:20px;text-align:right;}.crux-FormDisplay tr:last-child .formEntryData{padding:10px 0 0 0;border-top:1px solid #ddd;}.crux-MenuTabsDisposal,.crux-MenuTabsDisposal .menuTabsSplitPanel,.crux-MenuTabsDisposal .menuTabsHeaderSplitPanel{height:calc(100% - 25px)' + ';padding:0;}.crux-MenuTabsDisposal .menuTabsHeader{background-color:#444949;height:25px;text-align:right;width:100%;border:solid 0;border-bottom:solid 1px #fff;}.crux-MenuTabsDisposal .menuEntriesContainer{width:300px;position:absolute;top:0;left:' + '0;background:url(img/logo-large.png) no-repeat 0 10px #ececec;}.menuTabsSplitPanel{background-image:url(noise.png);background-color:#eaeaea;border:none;border-right:solid 1px #eee;padding-left:300px;}.crux-MenuTabsDisposal .menuEntry{margin:0;border:solid 0;height:40px;background:white' + ';width:85%;margin-left:15%;box-shadow:0 -20px 10px 0 rgba(0, 0, 0, 0.02) inset;color:#4c6879;font-size:16px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-shadow:none;position:relative;border-radius:0;cursor:' + 'pointer;}.crux-MenuTabsDisposal .menuEntry:after{content:"";height:100%;width:30px;border:none;position:absolute;top:0;background:#81aa32;right:0;box-shadow:0 -10px 15px -1px rgba(0, 80, 0, 0.1) inset;color:white' + ';padding:0;overflow:auto;background-image:url(right-arrow.png);background-position:center;background-repeat:no-repeat;cursor:pointer;}.crux-MenuTabsDisposal .menuSection{height:50px;color:#fff;background-color:#4496c6;box-shadow:inset 0 -10px 30px #3d8dbd;font-size:' + '16px;padding:0;text-align:left;line-height:50px;padding-left:50px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;cursor:pointer;border:solid 0;width:100%;position:relative' + ';}.crux-MenuTabsDisposal .menuSection:after{content:"...";position:absolute;right:10px;opacity:0;transition:opacity ease-in-out 0.5s;}.crux-MenuTabsDisposal .menuSection-closed:after{content:"...";position:absolute;right:10px;opacity:0;transition:opacity ease-in-out 0.5s;opacity:' + '0.4 !important;}.crux-MenuTabsDisposal .menuSectionEntries{transition:height 0.2s ease-in-out;overflow:hidden;}.crux-TabContainer{background-color:#fff;}.crux-TabBar{height:55px;background-color:#e6e6e6;box-shadow:inset 0 -20px 20px -10px rgba(0, 0, 0, 0.2), 5px 0 10px -2px rgba(0, 0, 0, 0.15) inset;}.crux-TabPanelBottom{background-color:#fff;height:100%;box-shadow:10px 0 20px -10px rgba(0, 0, 0, 0.3) inset;padding-bottom:0' + ';padding-top:20px;box-sizing:content-box;-moz-box-sizing:content-box;}.crux-TabBarItem{height:43px;min-width:140px;background-color:#636969;opacity:0.75;margin-left:0;cursor:default;box-shadow:-20px 0 20px -10px rgba(0, 0, 0, 0.2) inset, 0 -20px 10px -10px rgba(0, 0, 0, 0.2) inset;position:' + 'relative;transition:all ease 0.3s;white-space:nowrap;}.crux-TabBarItem-selected{background-color:#4496c6;opacity:1;box-shadow:0 -20px 10px -10px rgba(0, 0, 0, 0.1) inset;}.crux-TabBarItem-selected:after{position:absolute;height:0;width:0;content:"";border:solid 8px #fff' + ';left:80px;bottom:-12px;}.crux-TabBarItem .flapLabel{font-size:16px;color:#fff;padding-top:12px;padding-left:10px;cursor:default;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;}.flapCloseButton{background-color:transparent;transition:' + 'font-size ease-in-out 0.15s;height:14px;width:14px;margin-left:5px;margin-top:2px;text-align:center;cursor:pointer;}.flapCloseButton:before{content:"X";color:#fff;padding-right:1px;font-family:arial' + ';font-size:14px;top:8px;position:absolute;right:8px;transition:all ease-in-out 0.1s;}.flapCloseButton:hover{font-size:14px;}.flapCloseButton:hover:before{font-size:16px;}.crux-RollingPanelPreviousWrapper,.crux-RollingPanelNextWrapper{width:31px;height:55px;}.crux-RollingPanelPrevious,.crux-RollingPanelNext{background-color:transparent;height:' + '55px;margin-top:0;width:31px;color:transparent !important;text-align:center;font-size:18px;border:none;position:relative;cursor:pointer;}.crux-RollingPanelPrevious:after{height:55px;width:30px' + ';position:absolute;top:0;background-position:center;background-repeat:no-repeat;content:"";cursor:pointer;left:0;box-shadow:10px -3px 10px -5px rgba(0, 0, 0, 0.2);border-right:solid 1px rgba(255, 255, 255, 0.3);background-image:url(left-arrow.png);}.crux-RollingPanelNext:after{height:' + '55px;width:30px;position:absolute;top:0;background-position:center;background-repeat:no-repeat;content:"";cursor:pointer;right:0;box-shadow:-10px -3px 10px -5px rgba(0, 0, 0, 0.2);border-left:solid 1px rgba(255, 255, 255, 0.3)' + ';background-image:url(right-arrow.png);}.crux-RollingPanelPrevious:hover,.crux-RollingPanelNext:hover{color:#fff;}.crux-RollingPanelPreviousWrapper-disabled,.crux-RollingPanelNextWrapper-disabled{visibility:hidden;}.crux-TabBarFirst-wrapper,.crux-TabBarRest-wrapper{display:none;}.crux-FileUploader{width:400px;}.crux-FileUploader .buttonsPanel{text-align:center;}.crux-FileUploader .filePanel{background:#fff;width:calc(100% - 20px);position:relative;width:100%;height:' + ('60px;}.crux-FileUploader .filePanel .cancelUploadButton{background:' + ("url('" + $svgIconClose_0().getSafeUri().asString() + "')" + ' ' + 'no-repeat') + ';border:' + '0 solid' + ';transition:' + 'box-shadow ease-in-out 0.15s' + ';height:' + '16px' + ';width:' + '16px' + ';text-align:' + 'center' + ';padding:' + '0' + ';position:' + 'absolute' + ';right:' + '5px' + ';top:' + '5px') + ';cursor:pointer;}.crux-FileUploader .filePanel .crux-ProgressBar .percentBar{height:18px !important;border-radius:1px;border-top:solid 2px #a1ca52;color:#618a12;font-size:11px;line-height:18px;padding-left:10px;box-sizing:border-box;-moz-box-sizing:border-box;position:' + 'absolute;top:-2px;}.crux-FileUploader .filePanel .gwt-Label{overflow:hidden;width:280px;margin-left:10px;color:#4c6879;position:absolute;left:55px;top:6px;text-align:left;padding:0' + ';box-sizing:border-box;-moz-box-sizing:border-box;margin:0;white-space:nowrap;}.crux-RssPanel{width:100%;}.crux-RssPanel .rssPanelTitle{color:#004f5e;text-shadow:0 1px 1px rgba(255, 255, 255, 0.9);font-size:1.5em;height:50px;margin-left:10px;}.crux-RssPanel .rssPanelBody{padding-left:' + '12px;padding-right:12px;}.crux-RssPanel .rssPanelBody TD{border-bottom:1px solid rgba(0, 0, 0, 0.1);}.crux-RssPanel .crux-entryTitle{color:#333;font-size:15px;font-family:Helvetica;cursor:pointer;}.crux-RssPanel .crux-entryDate{font-size:11px;background:rgba(0, 0, 0, 0.2);border-radius:20px;box-shadow:0 1px 0 rgba(0, 0, 0, 0.4) inset, 0 1px 0 rgba(255, 255, 255, 0.5)' + ';color:white;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.2);float:right;padding:3px 8px;}.gwt-Label,.crux-MaskedLabel{color:#1c5994;text-shadow:0 1px #fff;}.crux-sortableList{max-width:20%;}.crux-sortableList .listColumn{text-align:center;}.crux-sortableList .buttonsColumn{margin:10px;text-align:center;}.crux-sortableList .buttonsColumn button{border-radius:' + '0;margin-left:-1px;width:25% !important;min-width:0;position:relative;text-shadow:none;color:rgba(0, 0, 0, 0);}.crux-sortableList .buttonsColumn button:first-child{border-radius:3px 0 0 3px;}.crux-sortableList .buttonsColumn button:before{position:absolute;color:white;text-shadow:0 1px 1px rgba(0, 0, 0, 0.2)' + ';z-index:4;font-size:17px;}.crux-sortableList .buttonsColumn button:nth-child(1):before{content:"\u25B2";}.crux-sortableList .buttonsColumn button:nth-child(2):before{content:"\u25BC";width:1px;line-height:6px;margin-top:3px;left:50%;margin-left:-7px;}.crux-sortableList .buttonsColumn button:last-child{border-radius:0 3px 3px 0;}.crux-sortableList .listColumnFieldset{border:' + '1px solid #ccc;border-radius:3px;}.crux-ListShuttle{margin:10px 0;}.crux-ListShuttle .toSelectColumn,.crux-ListShuttle .selectedColumn{float:left;width:40%;height:100%;}.crux-ListShuttle .buttonsColumn{float:left;width:10%;margin:9px 5% 0;}.crux-ListShuttle legend{color:#fff;font-size:10px' + ';padding:2px 7px;background:#999;border-radius:100px;}.crux-ListShuttle .buttonsColumn button{width:100%;font-size:11px;font-weight:bold;border-radius:0;margin-top:-1px;padding:8px 0;}.crux-ListShuttle .buttonsColumn button:first-child{border-radius:3px 3px 0 0;}.crux-ListShuttle .buttonsColumn button:last-child{border-radius:' + '0 0 3px 3px;}.crux-ListShuttle fieldset{border:1px solid #ccc;border-radius:3px;height:100%;box-shadow:0 1px 5px rgba(0, 0, 0, 0.1) inset;display:block;padding:0;}.crux-ListShuttle fieldset>div{height:180px;overflow-y:auto;}.crux-ListShuttle fieldset div div div{padding:4px 0;border-bottom:1px solid #eee' + ';font-size:13px;}.crux-ListShuttle fieldset div div div:last-child{border-bottom:0;}.crux-ListShuttle fieldset div div div[tabindex]:last-child{border-radius:0 0 3px 3px;}.crux-Dialog,.crux-ProgressBox,.crux-FlatMessageBox,.crux-FlatDialog{background-color:#fff;border-radius:3px;box-shadow:0 0 0 1px rgba(0, 0, 0, 0.2), 0 5px 20px rgba(0, 0, 0, 0.4) !important;position:fixed !important;z-index:9;}.crux-Dialog .dialogTitleBodySplit,.crux-ProgressBox .dialogTitleBodySplit,.crux-FlatMessageBox .dialogTitleBodySplit{width:inherit;height:inherit;min-height:' + 'inherit;position:relative;overflow:hidden;}.crux-Dialog .dialogTopBar,.crux-ProgressBox .dialogTopBar{position:absolute;padding-top:10px;height:40px;width:inherit;top:0;left:0;z-index:1;background:#f7f7f7' + ';color:#5491b4;box-shadow:0 -2px #eaeaea inset, 0 1px 0 #d1d1d1;padding:11px 2px;border-radius:3px 3px 0 0;}.crux-FlatMessageBox .dialogTopBar{position:absolute;padding-top:10px;height:40px;width:inherit;top:0;left:0;z-index:' + '1;background:#f7f7f7;color:#5491b4;box-shadow:0 -2px #eaeaea inset, 0 1px 0 #d1d1d1;padding:11px 2px;border-radius:3px 3px 0 0;opacity:0;}.crux-Dialog .dialogTopBarDragHandle,.crux-ProgressBox .dialogTopBarDragHandle,.crux-FlatMessageBox .dialogTopBarDragHandle{position:absolute;top:0;left:0;background:transparent' + ';height:100%;width:100%;cursor:move;}.crux-Dialog .dialogTitle,.crux-ProgressBox .dialogTitle,.crux-FlatMessageBox .dialogTitle{color:#4496c6;text-align:center;font-size:18px;}.crux-ProgressBox .dialogTitle{font-size:12px;margin-top:6px;}.crux-Dialog .dialogCloseButton{position:absolute;right:2px;top:' + '2px;background:rgba(0, 0, 0, 0);border:none;cursor:pointer;}.crux-Dialog .dialogCloseButton:after{content:"X";color:#4496c6;font-size:18px;}.crux-Dialog .dialogBody,.crux-ProgressBox .dialogBody,.crux-FlatMessageBox .dialogBody{overflow:auto;height:calc(100% - 58px);border-bottom-right-radius:3px;border-bottom-left-radius:3px' + ';margin-top:40px;padding:10px 15px 0;}.crux-Dialog .popupContent,.crux-ProgressBox .popupContent,.crux-FlatMessageBox .popupContent{height:100%;min-height:inherit;width:100%;}.crux-Dialog .dialogResizer,.crux-FlatMessageBox .dialogResizer{position:absolute;height:12px;width:12px;bottom:0;right:0;border-top:' + 'rgba(0, 0, 0, 0);border-left:rgba(0, 0, 0, 0);cursor:nwse-resize;border-bottom-right-radius:3px;background:linear-gradient(135deg, #fff 50%, #aaa 50.1%, #eee 60%);padding:10px;}.crux-Dialog .dialogResizer:hover,.crux-FlatMessageBox .dialogResizer:hover{background:linear-gradient(135deg, #fff 50%, #aaa 50.1%, #e0e0e0 60%);}.crux-Dialog .dialogResizer:before,.crux-FlatMessageBox .dialogResizer:before{content:"";position:absolute;height:7px;width:11px' + ';bottom:5px;right:3px;border-top:solid 1px #aaa;cursor:nwse-resize;border-bottom-right-radius:2px;-webkit-transform:rotate(135deg);-moz-transform:rotate(135deg);-ms-transform:rotate(135deg);transform:rotate(135deg);}.crux-Dialog .dialogResizer:after,.crux-FlatMessageBox .dialogResizer:after{content:"";position:' + 'absolute;height:7px;width:8px;bottom:3px;right:3px;border-top:solid 1px #aaa;cursor:nwse-resize;border-bottom-right-radius:2px;-webkit-transform:rotate(135deg);-moz-transform:rotate(135deg);-ms-transform:rotate(135deg)' + ';transform:rotate(135deg);}.crux-ProgressBox{z-index:9;width:200px;height:60px;}.crux-ProgressBox .dialogTopBar{box-shadow:none;padding-top:6px;}.crux-ProgressBox .dialogBody{padding-left:20px;padding-right:20px;padding-top:0;}.crux-FlatMessageBox{max-width:80%;min-width:' + '350px;min-height:120px;}.crux-FlatMessageBox .dialogBody{margin-top:0;padding:20px 5px 0;height:100%;}.crux-FlatMessageBox .messageBoxContents{text-align:center;}.crux-FlatMessageBox .crux-Button{margin-top:25px;padding:8px 34px;}.crux-FlatMessageBox-success .gwt-HTML{color:#517a02;}.crux-FlatMessageBox-info .gwt-HTML{color:#4c6879;}.crux-FlatMessageBox-warn .gwt-HTML{color:#c28c00' + ';}.crux-FlatMessageBox-error .gwt-HTML{color:#b01010;}.crux-FileUploader .fileInputButton{padding:20px 14px;line-height:40px;margin-top:10px;cursor:pointer;width:170px;}.gwt-CheckBox{display:inline-block;}.gwt-CheckBox input{float:left;}.gwt-CheckBox label{font-size:14px;float:left;margin-right:' + '10px;margin-top:-3px;}.gwt-CheckBox:before{content:" ";display:table;}.gwt-CheckBox:after{content:" ";display:table;clear:both;}.crux-DialogViewContainer,.crux-ColorPickerDialog{background:white;border-radius:3px;box-shadow:0 0 0 1px rgba(0, 0, 0, 0.2), 0 5px 20px rgba(0, 0, 0, 0.4) !important;z-index:9' + ';}.dialogTop{height:40px;}.dialogTop td{background:#f7f7f7;color:#5491b4;box-shadow:0 -2px #eaeaea inset, 0 1px 0 #d1d1d1;padding:0 3px;cursor:move;}.dialogTop td:nth-child(1){border-radius:3px 0 0 0;}.dialogTop td:nth-child(2){padding:0 2px;border-radius:3px 3px 0 0;text-align:center;}.dialogTop td:nth-child(3){border-radius:' + ('0 3px 0 0;}.dialogMiddleCenter{padding:10px;}.dialogMiddleCenter button{margin-top:20px;}.closeButton{position:absolute;top:-8px;right:11px;width:16px;height:16px;border:none;background:' + ("url('" + $svgIconClose_0().getSafeUri().asString() + "')") + ';background-size:' + '100% auto') + ';}.crux-DialogViewContainer .dialogResizer{position:absolute;height:12px;width:12px;bottom:0;right:0;border-top:rgba(0, 0, 0, 0);border-left:rgba(0, 0, 0, 0);cursor:nwse-resize;border-bottom-right-radius:3px;background:linear-gradient(135deg, #fff 50%, #aaa 50.1%, #eee 60%);padding:' + '10px;}.crux-DialogViewContainer .dialogResizer:hover{background:linear-gradient(135deg, #fff 50%, #aaa 50.1%, #e0e0e0 60%);}.crux-DialogViewContainer .dialogResizer:before{content:"";position:absolute;height:7px;width:11px;bottom:5px;right:3px;border-top:solid 1px #aaa;cursor:nwse-resize;border-bottom-right-radius:2px' + ';-webkit-transform:rotate(135deg);}.crux-DialogViewContainer .dialogResizer:after{content:"";position:absolute;height:7px;width:8px;bottom:3px;right:3px;border-top:solid 1px #aaa;cursor:nwse-resize;border-bottom-right-radius:2px;-webkit-transform:' + 'rotate(135deg);}.detailImage{height:100%;right:0;position:fixed;top:0;width:100%;z-index:98;-moz-box-sizing:border-box;}.grid-detail-dialogbox{font-size:11px;background-color:white;border:1px solid #aaa' + ';box-shadow:0 0 10px rgba(0, 0, 0, 0.4);padding:1.25em;border-radius:6px;z-index:98;color:#444;}.msg-error-grid{font-size:11px;color:#ff2c19;font-weight:bolder;text-align:center;}.msg-success-grid{font-size:11px;color:' + '#297a30;font-weight:bolder;text-align:center;}.msg-warning-grid{font-size:11px;color:#c4c04f;font-weight:bolder;text-align:center;}.msg-info-grid{font-size:11px;color:#2d3e86;font-weight:bolder;text-align:center' + ';}.grid{margin:20px 0;}.grid tr{height:31px;}.grid td{border:1px solid #d4d4d4;background:#fff !important;}.grid th{background:#e4f6f1 !important;}.row-highlighted td{background:#ffffe1 !important;}.grid .columnHeadersRow .columnHeader table td{border:none;background:none !important;color:#1c5994;font-weight:bold;}.grid .columnHeadersRow .columnHeader table td .label{padding:' + '0 10px;}.grid .gwt-Label,.grid .crux-MaskedLabel{color:#222;text-align:left;padding:0 10px;}.grid .columnHeader{background:#f7f7f7;box-shadow:0 -2px 0 #eaeaea inset;}.grid .columnSorter{text-align:left;}.grid .columnSorter table{width:100%;}.grid .columnSorter .arrow{position:relative;}.grid .columnSorter .arrow:before{content:"";width:0' + ';height:0;right:0;top:-5px;position:absolute;margin-right:10px;border-left:5px solid transparent;border-right:5px solid transparent;border-bottom:5px solid #999;}.grid .columnSorter .arrow:after{content:"";width:0;height:' + '0;right:0;top:1px;position:absolute;margin-right:10px;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid #999;}.grid .columnSorter.columnSorter-asc .arrow:before,.grid .columnSorter.columnSorter-asc .arrow:after,.grid .columnSorter.columnSorter-desc .arrow:before,.grid .columnSorter.columnSorter-desc .arrow:after{display:none;}.grid .columnSorter.columnSorter-asc .arrow{width:0;height:0' + ';float:right;margin-right:10px;border-left:5px solid transparent;border-right:5px solid transparent;border-bottom:5px solid #111;}.grid .columnSorter.columnSorter-desc .arrow{width:0;height:0;float:right;margin-right:10px;border-left:5px solid transparent;border-right:' + '5px solid transparent;border-top:5px solid #111;}.grid .crux-Cell .columnHeader .columnSorter{cursor:pointer;}.storeItem{margin-right:20px;margin-bottom:20px;}.promoBannerImage{background-repeat:no-repeat;background-position:center center;background-color:#acdf53;color:white;}.messagePanel{width:100%;height:100%' + ';}.messagePanel td{vertical-align:middle !important;}.messagePanel .title{text-align:center;font-size:30px;text-shadow:0 1px 0 rgba(0, 0, 0, 0.1), 0 2px 1px rgba(0, 0, 0, 0.1), 0 3px 2px rgba(0, 0, 0, 0.1), 0 4px 3px rgba(0, 0, 0, 0.1), 0 6px 3px rgba(0, 0, 0, 0.1);color:#fff;}.messagePanel .text{text-align:center;color:#fff;font-size:17px;text-shadow:0 1px 0 rgba(0, 0, 0, 0.1), 0 2px 1px rgba(0, 0, 0, 0.1);}.bannersArea{margin:10px;border-radius:' + ('5px;overflow:hidden;}.bannersArea .leftArrow{width:50px;height:90px;background:' + ("url('" + $svgIconArrow().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center' + ' ' + 'rgba(' + '0' + ',' + ' ' + '0' + ',' + ' ' + '0' + ',' + ' ' + '0.2' + ')') + ';background-size:' + '22px auto' + ';border-radius:' + '4px 0 0 4px' + ';-webkit-transform:' + 'rotate(-180deg)' + ';-moz-transform:' + 'rotate(-180deg)' + ';-ms-transform:' + 'rotate(-180deg)' + ';transform:' + 'rotate(-180deg)') + (';}.bannersArea .rightArrow{width:50px;height:90px;background:' + ("url('" + $svgIconArrow().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center' + ' ' + 'rgba(' + '0' + ',' + ' ' + '0' + ',' + ' ' + '0' + ',' + ' ' + '0.2' + ')') + ';background-size:' + '22px auto' + ';border-radius:' + '4px 0 0 4px' + ';}.bannersArea .leftArrow:hover,.bannersArea .rightArrow:hover{background:' + ("url('" + $svgIconArrow().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'center' + ' ' + 'rgba(' + '0' + ',' + ' ' + '0' + ',' + ' ' + '0' + ',' + ' ' + '0.35' + ')') + ';background-size:' + '22px auto' + ';}.bullets{margin:' + '10px 0 10px 10px' + ';}.bullets .bullet{width:' + '8px' + ';height:' + '8px' + ';background:') + 'rgba(0, 0, 0, 0.4);border-radius:10px;margin-right:10px;}.bullets .bullet.bullet-active{background:rgba(0, 0, 0, 0.7);}.crux-Slideshow td{text-align:center;}.crux-SlideshowComponent .crux-RollingPanelBody{width:auto !important;border-radius:3px;overflow:hidden;box-shadow:0 0 0 1px rgba(0, 0, 0, 0.9);display:inline-block;background:#000' + ';height:45px;}.crux-SlideshowComponent .crux-RollingPanelBody .thumbnail{margin:0 1px 0 0 !important;opacity:0.6;}.crux-SlideshowComponent .crux-RollingPanelBody table tr td:last-child .thumbnail{margin-right:0 !important;}.crux-SlideshowComponent .crux-RollingPanelBody .thumbnail:hover,.crux-SlideshowComponent .crux-RollingPanelBody .thumbnail.thumbnail-selected{opacity:1;}.crux-Slideshow .crux-SlideshowNavigator{width:auto !important;display:inline-block;padding:5px 30px;font-weight:bold;border-radius:50px;border:' + '2px solid #797979;margin:10px 0;}.crux-Slideshow .crux-SlideshowNavigator .gwt-Label{color:#797979 !important;text-align:none !important;font-size:12px !important;}.crux-SlideshowComponent .crux-Photo .gwt-Image{box-shadow:0 0 54px rgba(0, 0, 0, 0.33);margin:50px 0;}.crux-SlideshowPlayPanel{width:37px;height:37px;border-radius:2px;border:2px solid #6c6c6c' + (';background:' + ("url('" + $svgIconPlay().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'no-repeat' + ' ' + '10px' + ' ' + 'center' + ' ' + 'transparent') + ';border-radius:' + '37px' + ';margin-top:' + '-40px' + ';margin-bottom:' + '15px' + ';position:' + 'relative' + ';z-index:' + '2' + ';}.crux-SlideshowPlayPanel.crux-SlideshowPlayPanel-playing{background:' + ("url('" + $svgIconPause().getSafeUri().asString() + "')" + ' ' + 'no-repeat' + ' ' + 'no-repeat' + ' ' + '9px' + ' ' + 'center' + ' ' + 'transparent') + ';}.crux-SlideshowPhotoDescription{width:' + '50%' + ' !important;display:' + 'block' + ';border-top:' + '1px solid #ccc' + ';padding-top:') + '10px;color:#888;margin:-56px auto 10px;}.crux-ScrollBanner{padding:10px;background:#fff;}.crux-ScrollBanner>tbody>tr>td:first-child{width:100% !important;}.crux-ScrollBanner .message{padding:10px;letter-spacing:-1px;}.crux-ScrollBanner .messageCount{border-left:1px solid #ccc;border-right:1px solid #ccc;font-size:13px' + ';padding:5px 0;margin:0 2px;}.crux-ScrollBanner .previousMessageButton .gwt-Label{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-bottom:5px solid #fff;}.crux-ScrollBanner .nextMessageButton .gwt-Label{width:0;height:0;border-left:5px solid transparent;border-right:' + '5px solid transparent;border-top:5px solid #fff;}.crux-ScrollBanner .previousMessageButton,.nextMessageButton{padding:8px 9px;}.crux-StyledPanelOuter{width:auto;}.crux-StackMenu{width:200px;}.crux-TopMenuDisposal .headerPanel .menuPanel{border:1px solid #1a6299;border-radius:2px;overflow:hidden;}.crux-TopMenuDisposal .headerPanel .menuPanel table{width:100%;}.crux-TopMenuDisposal .headerPanel .menuPanel .menuEntry{width:auto;padding:10px' + ';color:#fff;text-align:center !important;border-right:1px solid #1a6299;box-shadow:none !important;background:#4496c6;}.crux-TopMenuDisposal .headerPanel .menuPanel .menuEntry:hover{background:#3185b6;}.crux-TopMenuDisposal .headerPanel .menuPanel .menuEntry:last-child{border-right:0;}.crux-TopMenuDisposal .headerPanel .menuPanel .menuEntry:after{display:none;}.crux-Timer{display:inline-block;}.edit-column-button{width:20px;height:' + ('20px;border:none;background:' + ("url('" + $gridEditIcon().getSafeUri().asString() + "')" + ' ' + 'no-repeat') + ';}.save-column-button{width:' + '20px' + ';height:' + '20px' + ';border:' + 'none' + ';background:' + ("url('" + $gridSaveIcon().getSafeUri().asString() + "')" + ' ' + 'no-repeat') + ';}.cancel-column-button{width:' + '20px' + ';height:' + '20px' + ';border:' + 'none' + ';background:' + ("url('" + $gridCancelIcon().getSafeUri().asString() + "')" + ' ' + 'no-repeat')) + ';}.panel-editor-column{border:none;padding:0;width:60px;}.crux-ViewContainer{height:100%;width:100%;}.button-disabled{opacity:0.2;}';
}

function XStandardResourcesLarge_default_StaticClientBundleGenerator$1_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_642();
}

defineSeed(762, 1, {}, XStandardResourcesLarge_default_StaticClientBundleGenerator$1_0);
_.ensureInjected = function ensureInjected_0(){
  if (!this.injected) {
    this.injected = true;
    inject($getText_3());
    return true;
  }
  return false;
}
;
_.injected = false;
function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$cssInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$cssInitializer = nullMethod;
  $cssInitializer_0(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_34(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$cssInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , css_2;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$gridCancelIconInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$gridCancelIconInitializer = nullMethod;
  $gridCancelIconInitializer(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_35(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$gridCancelIconInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , gridCancelIcon;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$gridEditIconInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$gridEditIconInitializer = nullMethod;
  $gridEditIconInitializer(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_36(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$gridEditIconInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , gridEditIcon;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$gridSaveIconInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$gridSaveIconInitializer = nullMethod;
  $gridSaveIconInitializer(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_37(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$gridSaveIconInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , gridSaveIcon;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconArrowInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconArrowInitializer = nullMethod;
  $svgIconArrowInitializer(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_38(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconArrowInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , svgIconArrow;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconCloseInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconCloseInitializer = nullMethod;
  $svgIconCloseInitializer_0(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_39(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconCloseInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , svgIconClose_0;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconDangerInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconDangerInitializer = nullMethod;
  $svgIconDangerInitializer(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_40(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconDangerInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , svgIconDanger;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconFileInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconFileInitializer = nullMethod;
  $svgIconFileInitializer(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_41(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconFileInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , svgIconFile;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPaginatorFirstInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPaginatorFirstInitializer = nullMethod;
  $svgIconPaginatorFirstInitializer(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_42(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPaginatorFirstInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , svgIconPaginatorFirst;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPaginatorLastInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPaginatorLastInitializer = nullMethod;
  $svgIconPaginatorLastInitializer(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_43(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPaginatorLastInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , svgIconPaginatorLast;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPaginatorNextInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPaginatorNextInitializer = nullMethod;
  $svgIconPaginatorNextInitializer(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_44(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPaginatorNextInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , svgIconPaginatorNext;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPaginatorPrevInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPaginatorPrevInitializer = nullMethod;
  $svgIconPaginatorPrevInitializer(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_45(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPaginatorPrevInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , svgIconPaginatorPrev;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPauseInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPauseInitializer = nullMethod;
  $svgIconPauseInitializer(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_46(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPauseInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , svgIconPause;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPlayInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPlayInitializer = nullMethod;
  $svgIconPlayInitializer(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_47(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconPlayInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , svgIconPlay;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconSuccessInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconSuccessInitializer = nullMethod;
  $svgIconSuccessInitializer(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_48(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconSuccessInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , svgIconSuccess;
}

function $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconWarningInitializer(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconWarningInitializer = nullMethod;
  $svgIconWarningInitializer(($clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , _instance0_1));
}

function get_49(){
  $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator$svgIconWarningInitializer();
  return $clinit_XStandardResourcesLarge_default_StaticClientBundleGenerator() , svgIconWarning;
}

function $clinit_CodeServerNotifier(){
  $clinit_CodeServerNotifier = nullMethod;
  'Compiling module...';
  9877;
  logger_6 = getLogger($getName_2(Lorg_cruxframework_crux_tools_codeserver_client_CodeServerNotifier_2_classLit));
}

function $$init_643(){
}

function $onModuleLoad_4(this$static){
  var socket, url_0;
  this$static.dialogBox = new DialogBox_0;
  this$static.dialogBox.setStyleName(($clinit_CodeServerResources() , INSTANCE_5).css_2().cruxCodeServerNotifier());
  ($clinit_CodeServerResources() , INSTANCE_5).css_2().ensureInjected();
  this$static.label_0 = new Label_0;
  $setText_2(this$static.label_0, 'Compiling module...');
  $add_2(this$static.dialogBox, this$static.label_0);
  url_0 = 'ws://' + getHostName() + ':' + 9877;
  socket = createIfSupported_0(url_0);
  if (isNull_1(socket)) {
    $info_0(logger_6, 'Browser do not support Websocket.');
    return;
  }
  $addCloseHandler(socket, new CodeServerNotifier$1_0(this$static, socket));
  $addOpenHandler(socket, new CodeServerNotifier$2_0(this$static));
  $addErrorHandler(socket, new CodeServerNotifier$3_0(this$static));
  $addMessageHandler(socket, new CodeServerNotifier$4_0(this$static));
}

function CodeServerNotifier_0(){
  $clinit_CodeServerNotifier();
  Object_1.call(this);
  $$init_643();
}

defineSeed(779, 1, {}, CodeServerNotifier_0);
var logger_6;
function $$init_644(){
}

function CodeServerNotifier$1_0(this$0, val$socket){
  this , this$0;
  this.val$socket = val$socket;
  Object_1.call(this);
  $$init_644();
}

defineSeed(780, 1, makeCastMap([Q$SocketCloseHandler]), CodeServerNotifier$1_0);
_.onClose_0 = function onClose_2(event_0){
  $info_0(($clinit_CodeServerNotifier() , logger_6), 'Compilation Notifier Socket was closed. Trying to reconnect...');
  $reconnect(this.val$socket);
}
;
function $$init_645(){
}

function CodeServerNotifier$2_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_645();
}

defineSeed(781, 1, makeCastMap([Q$SocketOpenHandler]), CodeServerNotifier$2_0);
_.onOpen = function onOpen(event_0){
  loggingIsEnabled() && $log_4(($clinit_CodeServerNotifier() , logger_6), ($clinit_Level() , INFO), 'Connected to Compilation Notifier service.');
}
;
function $$init_646(){
}

function CodeServerNotifier$3_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_646();
}

defineSeed(782, 1, makeCastMap([Q$SocketErrorHandler]), CodeServerNotifier$3_0);
_.onError_1 = function onError_5(event_0){
  loggingIsEnabled() && $log_4(($clinit_CodeServerNotifier() , logger_6), ($clinit_Level() , INFO), 'Unexpected error on Compilation Notifier service socket.');
}
;
function $$init_647(){
}

function CodeServerNotifier$4_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_647();
}

defineSeed(783, 1, makeCastMap([Q$SocketMessageHandler]), CodeServerNotifier$4_0);
_.onMessage = function onMessage(event_0){
  var compilationMessage, e, message;
  try {
    message = $getMessage_2(event_0);
    compilationMessage = safeEval(message);
    switch ($ordinal($getOperation(compilationMessage))) {
      case 0:
        blockToUser();
        $log_4(($clinit_CodeServerNotifier() , logger_6), ($clinit_Level() , INFO), 'Module: ' + $getModule(compilationMessage));
        $show_0(this.this$0.dialogBox);
        break;
      case 1:
        unblockToUser();
        this.this$0.dialogBox.hide();
        $setText_2(this.this$0.label_0, null);
        $getStatus_0(compilationMessage)?reload():getErrorHandler().handleError('Error compiling module ' + $getModule(compilationMessage) + '.');
    }
  }
   catch ($e0) {
    $e0 = wrap($e0);
    if (instanceOf($e0, Q$Exception)) {
      e = $e0;
      getErrorHandler().handleError_0('Error parsing message from Compilation Notifier service', e);
    }
     else 
      throw unwrap($e0);
  }
}
;
function $getModule(this$static){
  return this$static.module;
}

function $getOp(this$static){
  return this$static.op;
}

function $getOperation(this$static){
  return valueOf_23($getOp(this$static));
}

function $getStatus_0(this$static){
  if (this$static.status) {
    return true;
  }
  return false;
}

function $clinit_CompilationMessage$CompilerOperation(){
  $clinit_CompilationMessage$CompilerOperation = nullMethod;
  START = new CompilationMessage$CompilerOperation_0('START', 0);
  END = new CompilationMessage$CompilerOperation_0('END', 1);
  $VALUES_15 = initValues(_3Lorg_cruxframework_crux_tools_codeserver_client_CompilationMessage$CompilerOperation_2_classLit, makeCastMap([Q$Serializable]), Q$CompilationMessage$CompilerOperation, [START, END]);
}

function $$init_648(){
}

function CompilationMessage$CompilerOperation_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_648();
}

function valueOf_23(name_0){
  $clinit_CompilationMessage$CompilerOperation();
  return valueOf(($clinit_CompilationMessage$CompilerOperation$Map() , $MAP_15), name_0);
}

function values_16(){
  $clinit_CompilationMessage$CompilerOperation();
  return $VALUES_15;
}

defineSeed(785, 134, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$CompilationMessage$CompilerOperation]), CompilationMessage$CompilerOperation_0);
var $VALUES_15, END, START;
function $clinit_CompilationMessage$CompilerOperation$Map(){
  $clinit_CompilationMessage$CompilerOperation$Map = nullMethod;
  $MAP_15 = createValueOfMap(($clinit_CompilationMessage$CompilerOperation() , $VALUES_15));
}

var $MAP_15;
function $clinit_CodeServerResources(){
  $clinit_CodeServerResources = nullMethod;
  INSTANCE_5 = new CodeServerResources_default_StaticClientBundleGenerator_0;
}

var INSTANCE_5;
function $clinit_CodeServerResources_default_StaticClientBundleGenerator(){
  $clinit_CodeServerResources_default_StaticClientBundleGenerator = nullMethod;
  _instance0_2 = new CodeServerResources_default_StaticClientBundleGenerator_0;
}

function $$init_649(){
}

function $cssInitializer_1(this$static){
  css_4 = new CodeServerResources_default_StaticClientBundleGenerator$1_0(this$static);
}

function CodeServerResources_default_StaticClientBundleGenerator_0(){
  $clinit_CodeServerResources_default_StaticClientBundleGenerator();
  Object_1.call(this);
  $$init_649();
}

defineSeed(787, 1, {}, CodeServerResources_default_StaticClientBundleGenerator_0);
_.css_2 = function css_5(){
  return get_50();
}
;
var _instance0_2, css_4;
function $$init_650(){
}

function $getText_4(){
  return $isRTL_0(getCurrentLocale())?'.GJ5C24MCJI .dialogTop td{background:none;box-shadow:none;border:none;}.GJ5C24MCJI .dialogContent{background:rgba(40, 40, 40, 0.98);padding:30px 50px;border-radius:5px;box-shadow:0 5px 10px rgba(0, 0, 0, 0.2), 0 0 0 1000px rgba(0, 0, 0, 0.5);position:fixed;right:50%;top:50%;margin-right:-136px;margin-top:-40px;z-index:999999;-webkit-animation:crux-CodeServerPopup 0.5s cubic-bezier(0, 0.79, 0.58, 1);animation:crux-CodeServerPopup 0.5s cubic-bezier(0, 0.79, 0.58, 1);}.GJ5C24MCJI .dialogContent .gwt-Label{color:#fff;text-shadow:none;padding-right:30px;position:relative;}.GJ5C24MCJI .dialogContent .gwt-Label:before{content:"";position:absolute;right:-20px;width:30px;height:30px;margin:-5px -5px 0 0;border:5px solid #fff;display:block;border-radius:50px;-webkit-animation:crux-CodeServerPopup-loading 1.3s ease-out infinite;animation:crux-CodeServerPopup-loading 1.3s ease-out infinite;}.GJ5C24MCJI .dialogContent .gwt-Label:after{content:"";position:absolute;right:-20px;width:30px;height:30px;border:2px solid #fff;display:block;border-radius:50px;-webkit-animation:crux-CodeServerPopup-loading 1.3s ease-out infinite;-webkit-animation-delay:650ms;animation:crux-CodeServerPopup-loading 1.3s ease-out infinite;animation-delay:650ms;margin:-22px -5px 0 0;}@-webkit-keyframes crux-CodeServerPopup\n{\n\t0%\n\t{\n\t\t-webkit-transform:translateY(60px);\n\t\t-ms-transform:translateY(60px);\n\t\ttransform:translateY(60px);\n\t\topacity:0;\n\t}\n\t100%\n\t{\n\t\t-webkit-transform:translateY(0px);\n\t\t-ms-transform:translateY(0px);\n\t\ttransform:translateY(0px);\n\t\topacity:1;\n\t}\n}@-moz-keyframes crux-CodeServerPopup\n{\n\t0%\n\t{\n\t\t-webkit-transform:translateY(60px);\n\t\t-ms-transform:translateY(60px);\n\t\ttransform:translateY(60px);\n\t\topacity:0;\n\t}\n\t100%\n\t{\n\t\t-webkit-transform:translateY(0px);\n\t\t-ms-transform:translateY(0px);\n\t\ttransform:translateY(0px);\n\t\topacity:1;\n\t}\n}@keyframes crux-CodeServerPopup\n{\n\t0%\n\t{\n\t\t-webkit-transform:translateY(60px);\n\t\t-ms-transform:translateY(60px);\n\t\ttransform:translateY(60px);\n\t\topacity:0;\n\t}\n\t100%\n\t{\n\t\t-webkit-transform:translateY(0px);\n\t\t-ms-transform:translateY(0px);\n\t\ttransform:translateY(0px);\n\t\topacity:1;\n\t}\n}@-webkit-keyframes crux-CodeServerPopup-loading\n{\n    0% {\n      -webkit-transform:scale(.1);\n      -ms-transform:scale(.1);\n      transform:scale(.1);\n      opacity: 0;\n    }\n    50% {\n      opacity:1;\n    }\n    100% {\n      -webkit-transform:scale(1.2);\n      -ms-transform:scale(1.2);\n      transform:scale(1.2);\n      opacity:0;\n    }\n}@-moz-keyframes crux-CodeServerPopup-loading\n{\n    0% {\n      -webkit-transform:scale(.1);\n      -ms-transform:scale(.1);\n      transform:scale(.1);\n      opacity: 0;\n    }\n    50% {\n      opacity:1;\n    }\n    100% {\n      -webkit-transform:scale(1.2);\n      -ms-transform:scale(1.2);\n      transform:scale(1.2);\n      opacity:0;\n    }\n}@keyframes crux-CodeServerPopup-loading\n{\n    0% {\n      -webkit-transform:scale(.1);\n      -ms-transform:scale(.1);\n      transform:scale(.1);\n      opacity: 0;\n    }\n    50% {\n      opacity:1;\n    }\n    100% {\n      -webkit-transform:scale(1.2);\n      -ms-transform:scale(1.2);\n      transform:scale(1.2);\n      opacity:0;\n    }\n}':'.GJ5C24MCJI .dialogTop td{background:none;box-shadow:none;border:none;}.GJ5C24MCJI .dialogContent{background:rgba(40, 40, 40, 0.98);padding:30px 50px;border-radius:5px;box-shadow:0 5px 10px rgba(0, 0, 0, 0.2), 0 0 0 1000px rgba(0, 0, 0, 0.5);position:fixed;left:50%;top:50%;margin-left:-136px;margin-top:-40px;z-index:999999;-webkit-animation:crux-CodeServerPopup 0.5s cubic-bezier(0, 0.79, 0.58, 1);animation:crux-CodeServerPopup 0.5s cubic-bezier(0, 0.79, 0.58, 1);}.GJ5C24MCJI .dialogContent .gwt-Label{color:#fff;text-shadow:none;padding-left:30px;position:relative;}.GJ5C24MCJI .dialogContent .gwt-Label:before{content:"";position:absolute;left:-20px;width:30px;height:30px;margin:-5px 0 0 -5px;border:5px solid #fff;display:block;border-radius:50px;-webkit-animation:crux-CodeServerPopup-loading 1.3s ease-out infinite;animation:crux-CodeServerPopup-loading 1.3s ease-out infinite;}.GJ5C24MCJI .dialogContent .gwt-Label:after{content:"";position:absolute;left:-20px;width:30px;height:30px;border:2px solid #fff;display:block;border-radius:50px;-webkit-animation:crux-CodeServerPopup-loading 1.3s ease-out infinite;-webkit-animation-delay:650ms;animation:crux-CodeServerPopup-loading 1.3s ease-out infinite;animation-delay:650ms;margin:-22px 0 0 -5px;}@-webkit-keyframes crux-CodeServerPopup\n{\n\t0%\n\t{\n\t\t-webkit-transform:translateY(60px);\n\t\t-ms-transform:translateY(60px);\n\t\ttransform:translateY(60px);\n\t\topacity:0;\n\t}\n\t100%\n\t{\n\t\t-webkit-transform:translateY(0px);\n\t\t-ms-transform:translateY(0px);\n\t\ttransform:translateY(0px);\n\t\topacity:1;\n\t}\n}@-moz-keyframes crux-CodeServerPopup\n{\n\t0%\n\t{\n\t\t-webkit-transform:translateY(60px);\n\t\t-ms-transform:translateY(60px);\n\t\ttransform:translateY(60px);\n\t\topacity:0;\n\t}\n\t100%\n\t{\n\t\t-webkit-transform:translateY(0px);\n\t\t-ms-transform:translateY(0px);\n\t\ttransform:translateY(0px);\n\t\topacity:1;\n\t}\n}@keyframes crux-CodeServerPopup\n{\n\t0%\n\t{\n\t\t-webkit-transform:translateY(60px);\n\t\t-ms-transform:translateY(60px);\n\t\ttransform:translateY(60px);\n\t\topacity:0;\n\t}\n\t100%\n\t{\n\t\t-webkit-transform:translateY(0px);\n\t\t-ms-transform:translateY(0px);\n\t\ttransform:translateY(0px);\n\t\topacity:1;\n\t}\n}@-webkit-keyframes crux-CodeServerPopup-loading\n{\n    0% {\n      -webkit-transform:scale(.1);\n      -ms-transform:scale(.1);\n      transform:scale(.1);\n      opacity: 0;\n    }\n    50% {\n      opacity:1;\n    }\n    100% {\n      -webkit-transform:scale(1.2);\n      -ms-transform:scale(1.2);\n      transform:scale(1.2);\n      opacity:0;\n    }\n}@-moz-keyframes crux-CodeServerPopup-loading\n{\n    0% {\n      -webkit-transform:scale(.1);\n      -ms-transform:scale(.1);\n      transform:scale(.1);\n      opacity: 0;\n    }\n    50% {\n      opacity:1;\n    }\n    100% {\n      -webkit-transform:scale(1.2);\n      -ms-transform:scale(1.2);\n      transform:scale(1.2);\n      opacity:0;\n    }\n}@keyframes crux-CodeServerPopup-loading\n{\n    0% {\n      -webkit-transform:scale(.1);\n      -ms-transform:scale(.1);\n      transform:scale(.1);\n      opacity: 0;\n    }\n    50% {\n      opacity:1;\n    }\n    100% {\n      -webkit-transform:scale(1.2);\n      -ms-transform:scale(1.2);\n      transform:scale(1.2);\n      opacity:0;\n    }\n}';
}

function CodeServerResources_default_StaticClientBundleGenerator$1_0(this$0){
  this , this$0;
  Object_1.call(this);
  $$init_650();
}

defineSeed(788, 1, {}, CodeServerResources_default_StaticClientBundleGenerator$1_0);
_.cruxCodeServerNotifier = function cruxCodeServerNotifier(){
  return 'GJ5C24MCJI';
}
;
_.ensureInjected = function ensureInjected_1(){
  if (!this.injected) {
    this.injected = true;
    inject($getText_4());
    return true;
  }
  return false;
}
;
_.injected = false;
function $clinit_CodeServerResources_default_StaticClientBundleGenerator$cssInitializer(){
  $clinit_CodeServerResources_default_StaticClientBundleGenerator$cssInitializer = nullMethod;
  $cssInitializer_1(($clinit_CodeServerResources_default_StaticClientBundleGenerator() , _instance0_2));
}

function get_50(){
  $clinit_CodeServerResources_default_StaticClientBundleGenerator$cssInitializer();
  return $clinit_CodeServerResources_default_StaticClientBundleGenerator() , css_4;
}

function $$init_651(){
}

function $addSelectHandler(this$static, handler){
  return $addSelectHandler_0(this$static.impl, handler);
}

function $setText_5(this$static, text_0){
  $setText_0(this$static.impl, text_0);
}

function Button_2(){
  $clinit_UIObject();
  Composite_0.call(this);
  $$init_651();
  this.impl = new Button$ButtonNoTouchImpl_0;
  $initWidget(this, this.impl);
  this.setStyleName('crux-Button');
}

function Button_3(text_0, buttonSelectHandler){
  $clinit_UIObject();
  Button_2.call(this);
  $setText_0(this.impl, text_0);
  $addSelectHandler_0(this.impl, buttonSelectHandler);
}

defineSeed(790, 365, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$Button]), Button_2, Button_3);
_.getText = function getText_5(){
  return $getText(this.impl);
}
;
_.setText = function setText_4(text_0){
  $setText_5(this, text_0);
}
;
function $$init_652(this$static){
  this$static , false;
}

function $addSelectHandler_0(this$static, handler){
  return $addHandler_2(this$static, handler, getType_31());
}

function Button$ButtonImpl_0(){
  Button_0.call(this);
  $$init_652(this);
}

defineSeed(791, 361, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));
function $$init_653(){
}

function Button$ButtonNoTouchImpl_0(){
  $clinit_FocusWidget();
  Button$ButtonImpl_0.call(this);
  $$init_653();
  $addClickHandler(this, new Button$ButtonNoTouchImpl$1_0(this));
}

defineSeed(792, 791, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Button$ButtonNoTouchImpl_0);
function $$init_654(){
}

function Button$ButtonNoTouchImpl$1_0(this$1){
  this.this$1 = this$1;
  Object_1.call(this);
  $$init_654();
}

defineSeed(793, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), Button$ButtonNoTouchImpl$1_0);
_.onClick = function onClick_0(event_0){
  var selectEvent;
  selectEvent = fire_9(this.this$1);
  $isCanceled_3() && $preventDefault_0(event_0);
  $isStopped(selectEvent) && $stopPropagation_0(event_0);
}
;
function $clinit_AbstractDialogBox(){
  $clinit_AbstractDialogBox = nullMethod;
  $clinit_PopupPanel();
  100;
  50;
  defaultCloseHandlers = new ArrayList_0;
  defaultOpenHandlers = new ArrayList_0;
}

function $$init_655(this$static){
  this$static.body_0 = new SimplePanel_0;
  this$static.title_0 = new HTML_0;
  this$static.closeBtn = new Button_2;
}

function $addCloseHandler_0(this$static, handler){
  return $addHandler_2(this$static, handler, getType_23());
}

function $addOpenHandler_0(this$static, handler){
  return $addHandler_2(this$static, handler, getType_24());
}

function $getHandle(this$static, feature){
  return $equals_1(($clinit_GenericDragEventHandler$DragAndDropFeature() , MOVE), feature)?this$static.moveHandle:this$static.resizeHandle;
}

function $hide_1(this$static){
  $hide(this$static);
  fire_1(this$static, this$static);
}

function $prepareResizer(){
  var resizer;
  resizer = new Label_0;
  resizer.setStyleName('dialogResizer');
  return resizer;
}

function $prepareTopBar(this$static, movable, closable){
  var topBar;
  topBar = new FlowPanel_0;
  topBar.setStyleName('dialogTopBar');
  this$static.title_0.setStyleName('dialogTitle');
  $add_3(topBar, this$static.title_0);
  if (movable) {
    this$static.moveHandle = new Label_0;
    this$static.moveHandle.setStyleName('dialogTopBarDragHandle');
    $add_3(topBar, this$static.moveHandle);
  }
  if (closable) {
    if (closable) {
      this$static.closeBtn.setStyleName('dialogCloseButton');
      $addSelectHandler(this$static.closeBtn, new AbstractDialogBox$1_0(this$static));
      $add_3(topBar, this$static.closeBtn);
    }
  }
  return topBar;
}

function $setWidget_4(this$static, w){
  this$static.body_0.setWidget(w);
}

function $show_1(this$static){
  $show(this$static);
  fire_3(this$static, this$static);
}

function AbstractDialogBox_0(movable, resizable, closable){
  var closeHandler, closeHandler$iterator, openHandler, openHandler$iterator, split_0, topBar;
  PopupPanel_0.call(this);
  $$init_655(this);
  this.setStyleName('crux-Dialog');
  $setGlassEnabled(this, true);
  $setGlassStyleName(this, 'dialogGlass');
  topBar = $prepareTopBar(this, movable, closable);
  this.body_0.setStyleName('dialogBody');
  split_0 = new FlowPanel_0;
  split_0.setStyleName('dialogTitleBodySplit');
  $add_3(split_0, topBar);
  $add_3(split_0, this.body_0);
  if (isNotNull(defaultCloseHandlers)) {
    for (closeHandler$iterator = defaultCloseHandlers.iterator(); closeHandler$iterator.hasNext();) {
      closeHandler = dynamicCast(closeHandler$iterator.next_0(), Q$CloseHandler);
      $addCloseHandler_0(this, closeHandler);
    }
  }
  if (isNotNull(defaultOpenHandlers)) {
    for (openHandler$iterator = defaultOpenHandlers.iterator(); openHandler$iterator.hasNext();) {
      openHandler = dynamicCast(openHandler$iterator.next_0(), Q$OpenHandler);
      $addOpenHandler_0(this, openHandler);
    }
  }
  if (resizable) {
    this.resizeHandle = $prepareResizer();
    $add_3(split_0, this.resizeHandle);
  }
  $setWidget_0(this, split_0);
  movable && addMoveCapability(this);
  resizable && addResizeCapability(this, 100, 50);
}

defineSeed(794, 367, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$PopupPanel, Q$SimplePanel, Q$UIObject, Q$Widget, Q$MoveCapability$Movable, Q$ResizeCapability$Resizable]));
_.addCloseHandler = function addCloseHandler_3(handler){
  return $addCloseHandler_0(this, handler);
}
;
_.clear_0 = function clear_13(){
  this.body_0.clear_0();
}
;
_.getAbsoluteHeight = function getAbsoluteHeight(){
  return $getOffsetHeight($getElement(this));
}
;
_.getAbsoluteWidth = function getAbsoluteWidth(){
  return $getOffsetWidth($getElement(this));
}
;
_.getHandle = function getHandle(feature){
  return $getHandle(this, feature);
}
;
_.getWidget = function getWidget_1(){
  return this.body_0.getWidget();
}
;
_.hide = function hide_2(){
  $hide_1(this);
}
;
_.remove_0 = function remove_26(w){
  return this.body_0.remove_0(w);
}
;
_.setDimensions = function setDimensions(w, h_0){
  $setPixelSize(this, w, h_0);
}
;
_.setHeight = function setHeight_5(height){
  $setProperty_0($getStyle($getElement(this)), 'height', height);
}
;
_.setPosition = function setPosition_0(x_0, y_0){
  $setPopupPosition(this, x_0, y_0);
}
;
_.setWidget = function setWidget_2(w){
  $setWidget_4(this, w);
}
;
_.setWidth = function setWidth_2(width_0){
  $setProperty_0($getStyle($getElement(this)), 'width', width_0);
}
;
_.show = function show_1(){
  $show_1(this);
}
;
var defaultCloseHandlers, defaultOpenHandlers;
function $$init_656(){
}

function AbstractDialogBox$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_656();
}

defineSeed(795, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), AbstractDialogBox$1_0);
_.onSelect = function onSelect_11(event_0){
  $hide_1(this.this$0);
}
;
function $$init_657(){
}

function $createMessagePanel(this$static){
  var contents;
  contents = new FlowPanel_0;
  contents.setStyleName('messageBoxContents');
  this$static.msgLabel = new HTML_0;
  $add_3(contents, this$static.msgLabel);
  this$static.hideButton = new Button_2;
  $addSelectHandler(this$static.hideButton, new FlatMessageBox$1_0(this$static));
  $setText_5(this$static.hideButton, 'OK');
  $add_3(contents, this$static.hideButton);
  return contents;
}

function $setMessage(this$static, message, type_0){
  var anyType, anyType$array, anyType$index, anyType$max;
  $setText_2(this$static.msgLabel, message);
  for (anyType$array = values_17() , anyType$index = 0 , anyType$max = anyType$array.length; anyType$index < anyType$max; ++anyType$index) {
    anyType = anyType$array[anyType$index];
    $removeStyleDependentName(this$static, $toLowerCase($name(anyType)));
  }
  $addStyleDependentName(this$static, $toLowerCase($name(type_0)));
  $setStyleNameButton(this$static, $toLowerCase($name(type_0)));
}

function $setStyleNameButton(this$static, type_0){
  $addStyleName(this$static.hideButton, $toLowerCase(type_0));
}

function FlatMessageBox_0(){
  var content_0;
  AbstractDialogBox_0.call(this, true, true, false);
  $$init_657();
  this.setStyleName('crux-FlatMessageBox');
  content_0 = $createMessagePanel(this);
  $setWidget_4(this, content_0);
}

function show_2(message, type_0){
  $clinit_AbstractDialogBox();
  var msgBox;
  msgBox = new FlatMessageBox_0;
  $setMessage(msgBox, message, type_0);
  $show_1(msgBox);
  $center(msgBox);
  return msgBox;
}

defineSeed(796, 794, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$PopupPanel, Q$SimplePanel, Q$UIObject, Q$Widget, Q$MoveCapability$Movable, Q$ResizeCapability$Resizable]), FlatMessageBox_0);
function $$init_658(){
}

function FlatMessageBox$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_658();
}

defineSeed(797, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), FlatMessageBox$1_0);
_.onSelect = function onSelect_12(event_0){
  $hide_1(this.this$0);
}
;
function $clinit_FlatMessageBox$MessageType(){
  $clinit_FlatMessageBox$MessageType = nullMethod;
  SUCCESS = new FlatMessageBox$MessageType_0('SUCCESS', 0);
  INFO_0 = new FlatMessageBox$MessageType_0('INFO', 1);
  WARN_0 = new FlatMessageBox$MessageType_0('WARN', 2);
  ERROR_0 = new FlatMessageBox$MessageType_0('ERROR', 3);
  $VALUES_16 = initValues(_3Lorg_cruxframework_crux_widgets_client_dialog_FlatMessageBox$MessageType_2_classLit, makeCastMap([Q$Serializable]), Q$FlatMessageBox$MessageType, [SUCCESS, INFO_0, WARN_0, ERROR_0]);
}

function $$init_659(){
}

function FlatMessageBox$MessageType_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_659();
}

function valueOf_24(name_0){
  $clinit_FlatMessageBox$MessageType();
  return valueOf(($clinit_FlatMessageBox$MessageType$Map() , $MAP_16), name_0);
}

function values_17(){
  $clinit_FlatMessageBox$MessageType();
  return $VALUES_16;
}

defineSeed(798, 134, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$FlatMessageBox$MessageType]), FlatMessageBox$MessageType_0);
var $VALUES_16, ERROR_0, INFO_0, SUCCESS, WARN_0;
function $clinit_FlatMessageBox$MessageType$Map(){
  $clinit_FlatMessageBox$MessageType$Map = nullMethod;
  $MAP_16 = createValueOfMap(($clinit_FlatMessageBox$MessageType() , $VALUES_16));
}

var $MAP_16;
function $$init_660(){
}

function $center_0(this$static){
  if (isNull_1($getActiveView(this$static))) {
    debugger;
    throw makeAssertionError_Object('There is no View loaded into this container.');
  }
  $bindToDOM(this$static);
  $center(this$static.dialog);
}

function $closeDialog(this$static){
  $closeDialog_0(this$static, this$static.unloadViewOnClose);
}

function $closeDialog_0(this$static, unloadView){
  if (unloadView) {
    if (!$remove_11(this$static, $getActiveView(this$static))) {
      return false;
    }
  }
  this$static.dialog.hide();
  $unbindToDOM(this$static);
  return true;
}

function $getContainerPanel_1(this$static){
  return this$static.contentPanel;
}

function $openDialog(this$static){
  if (isNull_1($getActiveView(this$static))) {
    debugger;
    throw makeAssertionError_Object('There is no View loaded into this container.');
  }
  $bindToDOM(this$static);
  $show_0(this$static.dialog);
}

function DialogViewContainer_0(){
  $clinit_ViewContainer();
  DialogViewContainer_1.call(this, true, true);
}

function DialogViewContainer_1(closeable, modal){
  var bodyPanel, closeBtn, headerPanel;
  SingleViewContainer_0.call(this, null, true);
  $$init_660();
  this.dialog = new DialogBox_2(false, modal);
  this.dialog.setStyleName('crux-DialogViewContainer');
  this.contentPanel = new FlowPanel_0;
  this.contentPanel.setWidth('100%');
  this.unloadViewOnClose = true;
  bodyPanel = new FlowPanel_0;
  bodyPanel.setWidth('100%');
  bodyPanel.setHeight('100%');
  if (closeable) {
    closeBtn = new Button_3(' ', new DialogViewContainer$1_0(this));
    closeBtn.setStyleName('closeButton');
    $setFloat($getStyle($getElement(closeBtn)), ($clinit_Style$Float() , RIGHT));
    headerPanel = new FlowPanel_0;
    headerPanel.setWidth('100%');
    $add_3(headerPanel, closeBtn);
    $add_3(bodyPanel, headerPanel);
  }
  $add_3(bodyPanel, this.contentPanel);
  $add_2(this.dialog, bodyPanel);
  $initWidget(this, new Label_0);
}

defineSeed(800, 594, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$ViewContainer, Q$DialogViewContainer]), DialogViewContainer_0);
_.doAdd = function doAdd_1(view, lazy, parameter){
  var added;
  if (!$isEmpty_1(this.views)) {
    debugger;
    throw makeAssertionError_Object('DialogViewContainer can not contain more then one view');
  }
  this.activeView = view;
  added = $doAdd_0(this, view, lazy, parameter);
  added || (this.activeView = null);
  return added;
}
;
_.doRemove_0 = function doRemove_3(view, skipEvents){
  var removed;
  removed = $doRemove_0(this, view, skipEvents);
  removed && (this.activeView = null);
  return removed;
}
;
_.getContainerPanel = function getContainerPanel_1(view){
  return $getContainerPanel_1(this);
}
;
_.handleViewTitle = function handleViewTitle_1(title_0, containerPanel, viewId){
  $setText_1(this.dialog, title_0);
}
;
_.setHeight = function setHeight_6(height){
  this.dialog.setHeight(height);
}
;
_.setStyleDependentName = function setStyleDependentName_0(styleSuffix, add_0){
  this.dialog.setStyleDependentName(styleSuffix, add_0);
}
;
_.setStyleName = function setStyleName_3(style){
  this.dialog.setStyleName(style);
}
;
_.setStyleName_0 = function setStyleName_4(style, add_0){
  this.dialog.setStyleName_0(style, add_0);
}
;
_.setStylePrimaryName = function setStylePrimaryName_1(style){
  this.dialog.setStylePrimaryName(style);
}
;
_.setWidth = function setWidth_3(width_0){
  this.dialog.setWidth(width_0);
}
;
_.unloadViewOnClose = false;
function $$init_661(){
}

function DialogViewContainer$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_661();
}

defineSeed(801, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), DialogViewContainer$1_0);
_.onSelect = function onSelect_13(event_0){
  $closeDialog(this.this$0);
}
;
function $$init_662(){
}

function $addMenuEntry(this$static, label_0, targetView){
  var menuItem;
  menuItem = new MenuItem_0($toSafeHtml($appendEscaped(new SafeHtmlBuilder_0, label_0)));
  $addStyleName(menuItem, 'menuEntry');
  $setScheduledCommand(menuItem, new TopMenuDisposalLargeController$1_0(this$static, targetView));
  $addItem(this$static.menuBar, menuItem);
}

function $setDefaultView(this$static, viewName){
  this$static.viewName = viewName;
}

function $showView_3(this$static, viewName, saveHistory){
  if (saveHistory) {
    newItem('topMenuDisposal:' + viewName);
  }
   else {
    $showView(this$static.viewContainer, viewName);
    scrollTo_0(0, 0);
  }
}

function TopMenuDisposalLargeController_0(){
  DeviceAdaptiveController_0.call(this);
  $$init_662();
}

defineSeed(802, 592, makeCastMap([Q$IsWidget]));
_.addMenuEntry = function addMenuEntry_0(label_0, targetView){
  $addMenuEntry(this, label_0, targetView);
}
;
_.init_0 = function init_6(){
  this.menuBar = dynamicCast($getChildWidget(this, 'menuBar'), Q$MenuBar);
  this.viewContainer = dynamicCast($getChildWidget(this, 'viewContainer'), Q$SimpleViewContainer);
  $setStyleName_0(this, 'crux-TopMenuDisposal');
  addHistoryChangedHandler(new TopMenuDisposalLargeController$2_0(this));
  get_1().scheduleDeferred(new TopMenuDisposalLargeController$3_0(this));
}
;
_.setDefaultView = function setDefaultView_0(viewName){
  $setDefaultView(this, viewName);
}
;
function $$init_663(){
}

function TopMenuDisposalLargeController$1_0(this$0, val$targetView){
  this.this$0 = this$0;
  this.val$targetView = val$targetView;
  Object_1.call(this);
  $$init_663();
}

defineSeed(803, 1, {}, TopMenuDisposalLargeController$1_0);
_.execute_1 = function execute_15(){
  $showView_3(this.this$0, this.val$targetView, true);
}
;
function $$init_664(){
}

function TopMenuDisposalLargeController$2_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_664();
}

defineSeed(804, 1, makeCastMap([Q$ValueChangeHandler, Q$EventHandler]), TopMenuDisposalLargeController$2_0);
_.onValueChange = function onValueChange_1(event_0){
  var token;
  token = dynamicCast($getValue(event_0), Q$String);
  jsNotEquals(token, null) && $startsWith(token, 'topMenuDisposal:') && $showView_3(this.this$0, $replace_1(token, 'topMenuDisposal:', ''), false);
}
;
function $$init_665(){
}

function TopMenuDisposalLargeController$3_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_665();
}

defineSeed(805, 1, {}, TopMenuDisposalLargeController$3_0);
_.execute_1 = function execute_16(){
  var currentViewName, hash;
  hash = getHash();
  if (jsNotEquals(hash, null) && $startsWith(hash, '#topMenuDisposal:')) {
    currentViewName = $replace_1(hash, '#topMenuDisposal:', '');
    $showView_3(this.this$0, currentViewName, false);
    newItem('topMenuDisposal:' + currentViewName);
    return;
  }
  if (jsNotEquals(this.this$0.viewName, null)) {
    $showView_3(this.this$0, $replace_1(this.this$0.viewName, 'topMenuDisposal:', ''), false);
    newItem('topMenuDisposal:' + this.this$0.viewName);
    return;
  }
}
;
function $clinit_TopMenuDisposalLargeController_ControllerProxy(){
  $clinit_TopMenuDisposalLargeController_ControllerProxy = nullMethod;
  getLogger($getName_2(Lorg_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposalLargeController_1ControllerProxy_2_classLit));
}

function $$init_666(){
}

function TopMenuDisposalLargeController_ControllerProxy_0(view){
  $clinit_TopMenuDisposalLargeController_ControllerProxy();
  TopMenuDisposalLargeController_0.call(this);
  $$init_666();
  this.__view = view;
}

defineSeed(806, 802, makeCastMap([Q$IsWidget, Q$ViewAware]), TopMenuDisposalLargeController_ControllerProxy_0);
_.getBoundCruxView = function getBoundCruxView_19(){
  return this.__view;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_19(){
  return isNull_1(this.__view)?null:$getId_0(this.__view);
}
;
function $clinit_SelectEvent(){
  $clinit_SelectEvent = nullMethod;
  TYPE_24 = new GwtEvent$Type_0;
}

function $$init_667(this$static){
  this$static , false;
}

function $dispatch_24(this$static, handler){
  handler.onSelect(this$static);
}

function $isCanceled_3(){
  return false;
}

function $isStopped(this$static){
  return this$static.stopped;
}

function SelectEvent_0(){
  GwtEvent_0.call(this);
  $$init_667(this);
}

function fire_9(source){
  $clinit_SelectEvent();
  var event_0;
  if (isNotNull(TYPE_24)) {
    event_0 = new SelectEvent_0;
    source.fireEvent(event_0);
    return event_0;
  }
  return null;
}

function getType_31(){
  $clinit_SelectEvent();
  return TYPE_24;
}

defineSeed(807, 183, {}, SelectEvent_0);
_.dispatch_0 = function dispatch_25(handler){
  $dispatch_24(this, dynamicCast(handler, Q$SelectHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_26(){
  return TYPE_24;
}
;
_.stopped = false;
var TYPE_24;
function $clinit_PasteEvent(){
  $clinit_PasteEvent = nullMethod;
  TYPE_25 = new GwtEvent$Type_0;
}

function $$init_668(){
}

function $dispatch_25(this$static, handler){
  handler.onPaste(this$static);
}

function PasteEvent_0(){
  GwtEvent_0.call(this);
  $$init_668();
}

function fire_10(source){
  $clinit_PasteEvent();
  var event_0;
  event_0 = new PasteEvent_0;
  source.fireEvent(event_0);
  return event_0;
}

function getType_32(){
  $clinit_PasteEvent();
  return TYPE_25;
}

defineSeed(808, 183, {}, PasteEvent_0);
_.dispatch_0 = function dispatch_26(handler){
  $dispatch_25(this, dynamicCast(handler, Q$PasteHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_27(){
  return TYPE_25;
}
;
var TYPE_25;
function getRegister(){
  isNull_1(pasteRegister) && (pasteRegister = new PasteEventSourceRegisterImpl_0);
  return pasteRegister;
}

var pasteRegister = null;
function $$init_669(){
}

function PasteEventSourceRegisterImpl_0(){
  Object_1.call(this);
  $$init_669();
}

defineSeed(810, 1, {}, PasteEventSourceRegisterImpl_0);
_.registerPasteEventSource = function registerPasteEventSource(source, element){
  element.onpaste = function(){
    setTimeout(function(){
      fire_10(source);
    }
    , 10);
  }
  ;
}
;
function $clinit_SwapEvent(){
  $clinit_SwapEvent = nullMethod;
  TYPE_26 = new GwtEvent$Type_0;
}

function $$init_670(){
}

function $dispatch_26(){
  null.nullMethod();
}

function SwapEvent_0(){
  GwtEvent_0.call(this);
  $$init_670();
}

function fire_11(source){
  $clinit_SwapEvent();
  var event_0;
  if (isNotNull(TYPE_26)) {
    event_0 = new SwapEvent_0;
    source.fireEvent(event_0);
  }
}

defineSeed(811, 183, {}, SwapEvent_0);
_.dispatch_0 = function dispatch_27(handler){
  $dispatch_26(dynamicCast(handler, Q$SwapHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_28(){
  return TYPE_26;
}
;
var TYPE_26;
function $$init_671(this$static){
  this$static.panel = new FlexTable_0;
}

function $addEntry(this$static, label_0, widget, align_0){
  var entry;
  entry = new FormDisplay$FormEntry_0;
  $setLabel(entry, label_0);
  $setWidget_5(entry, widget);
  $setHorizontalAlignment(entry, align_0);
  $attachTo(entry, this$static.panel);
}

function FormDisplay_0(){
  $clinit_UIObject();
  Composite_0.call(this);
  $$init_671(this);
  $initWidget(this, this.panel);
  this.setStyleName('crux-FormDisplay');
}

defineSeed(812, 365, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]), FormDisplay_0);
function $$init_672(this$static){
  this$static.align_0 = ($clinit_HasHorizontalAlignment() , ALIGN_LEFT);
}

function $attachTo(this$static, panel){
  var cellFormatter, numRows, widgetColumnIndex;
  cellFormatter = dynamicCast($getCellFormatter(panel), Q$FlexTable$FlexCellFormatter);
  numRows = $getRowCount(panel);
  widgetColumnIndex = 0;
  if (jsNotEquals(this$static.label_0, null)) {
    $setWidget_3(panel, numRows, 0, new Label_2(this$static.label_0));
    $setStyleName(cellFormatter, numRows, 0, 'formEntryLabel');
    $setProperty_0($getStyle($getElement_0(cellFormatter, numRows, 0)), 'display', 'table-cell');
    $setProperty_0($getStyle($getElement_0(cellFormatter, numRows, widgetColumnIndex)), 'textAlign', $getTextAlignString(this$static.align_0));
    widgetColumnIndex = 1;
  }
  $setWidget_2(panel, numRows, widgetColumnIndex, this$static.widget);
  $setStyleName(cellFormatter, numRows, widgetColumnIndex, 'formEntryData');
  $setProperty_0($getStyle($getElement_0(cellFormatter, numRows, widgetColumnIndex)), 'display', 'table-cell');
  $setProperty_0($getStyle($getElement_0(cellFormatter, numRows, widgetColumnIndex)), 'textAlign', $getTextAlignString(this$static.align_0));
  jsEquals(this$static.label_0, null) && $setColSpan(cellFormatter, numRows, widgetColumnIndex, 2);
}

function $setHorizontalAlignment(this$static, align_0){
  this$static.align_0 = align_0;
}

function $setLabel(this$static, label_0){
  this$static.label_0 = label_0;
}

function $setWidget_5(this$static, widget){
  this$static.widget = widget;
}

function FormDisplay$FormEntry_0(){
  Object_1.call(this);
  $$init_672(this);
}

defineSeed(813, 1, {}, FormDisplay$FormEntry_0);
function $$init_673(this$static){
  this$static , false;
}

function $conclude(this$static){
  $update_0(this$static, 100);
  this$static.loading = false;
}

function $ensureVisible(){
}

function $setError(this$static, error){
  if (error) {
    $ensureVisible();
    $addStyleDependentName(this$static.progressBar, 'error');
  }
   else {
    $removeStyleDependentName(this$static.progressBar, 'error');
  }
}

function $update_0(this$static, percent){
  if (percent >= 0 && percent <= 100) {
    if (!this$static.loading) {
      this$static.loading = true;
      $ensureVisible();
    }
    $setWidth($getStyle($getElement(this$static.percentBar)), percent, ($clinit_Style$Unit() , PCT));
    $setText_2(this$static.percentBar, percent + '%');
  }
}

function ProgressBar_0(){
  Composite_0.call(this);
  $$init_673(this);
  this.progressBar = new SimplePanel_0;
  this.percentBar = new Label_2('0%');
  $setProperty_0($getStyle($getElement(this.percentBar)), 'height', 'auto');
  $setWidth($getStyle($getElement(this.percentBar)), 0, ($clinit_Style$Unit() , PX));
  $setFloat($getStyle($getElement(this.percentBar)), ($clinit_Style$Float() , LEFT));
  this.percentBar.setStyleName('percentBar');
  $add_2(this.progressBar, this.percentBar);
  $initWidget(this, this.progressBar);
  this.setStyleName('crux-ProgressBar');
}

defineSeed(814, 365, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$ProgressBar]), ProgressBar_0);
_.loading = false;
function $$init_674(){
}

function SingleSelect_0(){
  $clinit_ListBox();
  ListBox_0.call(this);
  $$init_674();
}

defineSeed(815, 404, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), SingleSelect_0);
function $clinit_SelectablePanel(){
  $clinit_SelectablePanel = nullMethod;
  $clinit_UIObject();
  focusImpl = getFocusImplForPanel();
}

function $$init_675(){
}

function $addClickHandler_1(this$static, handler){
  return $addDomHandler(this$static, handler, getType_10());
}

function $addSelectHandler_1(this$static, handler){
  return $addHandler_2(this$static, handler, getType_31());
}

function SelectablePanel_0(){
  $clinit_SelectablePanel();
  SimplePanel_1.call(this, focusImpl.createFocusable());
  $$init_675();
  this.impl = new SelectablePanel$PanelEventsHandlerNoTouchImpl_0;
  $setPanel(this.impl, this);
  this.impl.handlePanel();
  this.setStyleName('crux-SelectablePanel');
}

defineSeed(816, 368, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$SimplePanel, Q$UIObject, Q$Widget]), SelectablePanel_0);
var focusImpl;
function $$init_676(this$static){
  this$static , false;
}

function $select(this$static){
  fire_9(this$static.selectablePanel);
}

function $setPanel(this$static, selectablePanel){
  this$static.selectablePanel = selectablePanel;
}

function SelectablePanel$PanelEventsHandler_0(){
  Object_1.call(this);
  $$init_676(this);
}

defineSeed(817, 1, {});
function $$init_677(){
}

function $addClickHandler_2(this$static){
  $addClickHandler_1(this$static.selectablePanel, new SelectablePanel$PanelEventsHandlerNoTouchImpl$1_0(this$static));
}

function SelectablePanel$PanelEventsHandlerNoTouchImpl_0(){
  SelectablePanel$PanelEventsHandler_0.call(this);
  $$init_677();
}

defineSeed(818, 817, {}, SelectablePanel$PanelEventsHandlerNoTouchImpl_0);
_.handlePanel = function handlePanel(){
  $addClickHandler_2(this);
}
;
function $$init_678(){
}

function SelectablePanel$PanelEventsHandlerNoTouchImpl$1_0(this$1){
  this.this$1 = this$1;
  Object_1.call(this);
  $$init_678();
}

defineSeed(819, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), SelectablePanel$PanelEventsHandlerNoTouchImpl$1_0);
_.onClick = function onClick_1(event_0){
  $select(this.this$1);
}
;
function $$init_679(){
}

function $getContainerPanel_2(this$static){
  return this$static.containerPanel;
}

function $getView_2(this$static){
  return this$static.innerView;
}

function SimpleViewContainer_0(){
  $clinit_ViewContainer();
  SingleViewContainer_0.call(this, new SimplePanel_0, true);
  $$init_679();
  this.containerPanel = dynamicCast($getMainWidget(this), Q$SimplePanel);
  this.containerPanel.setStyleName('crux-SimpleViewContainer');
}

defineSeed(820, 594, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$ViewContainer, Q$SimpleViewContainer]), SimpleViewContainer_0);
_.doAdd = function doAdd_2(view, lazy, parameter){
  var added;
  if (!$isEmpty_1(this.views)) {
    debugger;
    throw makeAssertionError_Object('SimpleViewContainer can not contain more then one view');
  }
  this.innerView = view;
  added = $doAdd_0(this, view, lazy, parameter);
  added || (this.innerView = null);
  return added;
}
;
_.doRemove_0 = function doRemove_4(view, skipEvents){
  var removed;
  removed = $doRemove_0(this, view, skipEvents);
  removed && (this.innerView = null);
  return removed;
}
;
_.getContainerPanel = function getContainerPanel_2(view){
  return $getContainerPanel_2(this);
}
;
_.handleViewTitle = function handleViewTitle_2(title_0, containerPanel, viewId){
}
;
_.showView = function showView_1(viewName, viewId, parameter){
  isNotNull($getView_2(this))?$removeFromContainer($getView_2(this)) && $showView_2(this, viewName, viewId, parameter):$showView_2(this, viewName, viewId, parameter);
}
;
function $$init_680(this$static){
  this$static , true;
  this$static , true;
}

function $add_12(this$static, widget){
  $add_3(this$static.storyboard, this$static.createClickablePanelForCell(widget));
}

function $configHeightWidth(this$static, panel){
  isEmpty_5(this$static.itemHeight) || panel.setHeight(this$static.itemHeight);
  isEmpty_5(this$static.itemWidth) || panel.setWidth(this$static.itemWidth);
}

function $createClickablePanelForCell(this$static, widget){
  var panel;
  panel = new SelectablePanel_0;
  $add_2(panel, widget);
  panel.setStyleName('item');
  $configHeightWidth(this$static, panel);
  $addSelectHandler_1(panel, new StoryboardSmallController$2_0(this$static, panel));
  return panel;
}

function $getWidget_3(this$static, index_0){
  return dynamicCast($getWidget(this$static.storyboard, index_0), Q$SimplePanel).getWidget();
}

function $getWidgetCount_0(this$static){
  return $getWidgetCount(this$static.storyboard);
}

function $getWidgetIndex_0(this$static, child){
  var count, i;
  count = $getWidgetCount_0(this$static);
  for (i = 0; i < count; i++) {
    if ($getWidget_3(this$static, i).equals$(child)) {
      return i;
    }
  }
  return -1;
}

function $init_1(this$static){
  this$static.storyboard = dynamicCast($getChildWidget(this$static, 'storyboard'), Q$FlowPanel);
  this$static.itemHeight = '75px';
  this$static.itemWidth = '100%';
  $setStyleName_0(this$static, 'crux-Storyboard');
}

function $iterator_1(this$static){
  return new StoryboardSmallController$1_0(this$static);
}

function $remove_13(this$static, index_0){
  return $remove(this$static.storyboard, index_0);
}

function $remove_14(this$static, w){
  var index_0;
  index_0 = $getWidgetIndex_0(this$static, w);
  if (index_0 >= 0) {
    return $remove_13(this$static, index_0);
  }
  return false;
}

function StoryboardSmallController_0(){
  DeviceAdaptiveController_0.call(this);
  $$init_680(this);
}

defineSeed(822, 592, makeCastMap([Q$HasHandlers, Q$IsWidget]));
_.add_1 = function add_18(widget){
  $add_12(this, widget);
}
;
_.createClickablePanelForCell = function createClickablePanelForCell(widget){
  return $createClickablePanelForCell(this, widget);
}
;
_.init_0 = function init_7(){
  $init_1(this);
}
;
_.iterator = function iterator_15(){
  return $iterator_1(this);
}
;
_.remove_0 = function remove_27(w){
  return $remove_14(this, w);
}
;
function $$init_681(){
}

function $setHorizontalAlignment_0(this$static, value_0){
  $setProperty_0($getStyle($getElement(this$static.storyboard)), 'textAlign', $getTextAlignString(value_0));
}

function StoryboardLargeController_0(){
  StoryboardSmallController_0.call(this);
  $$init_681();
}

defineSeed(821, 822, makeCastMap([Q$HasHandlers, Q$IsWidget]));
_.createClickablePanelForCell = function createClickablePanelForCell_0(widget){
  var panel;
  panel = $createClickablePanelForCell(this, widget);
  $setProperty_0($getStyle($getElement(panel)), 'display', 'inline-table');
  return panel;
}
;
_.init_0 = function init_8(){
  $init_1(this);
  this.itemHeight = '200px';
  this.itemWidth = '200px';
  $setHorizontalAlignment_0(this, ($clinit_HasHorizontalAlignment() , ALIGN_CENTER));
}
;
function $$init_682(){
}

function StoryboardLargeMouseController_0(){
  StoryboardLargeController_0.call(this);
  $$init_682();
}

defineSeed(823, 821, makeCastMap([Q$HasHandlers, Q$IsWidget]));
_.createClickablePanelForCell = function createClickablePanelForCell_1(widget){
  var panel;
  panel = new FocusPanel_0;
  $add_2(panel, widget);
  panel.setStyleName('item');
  $configHeightWidth(this, panel);
  $addClickHandler_0(panel, new StoryboardLargeMouseController$1_0(this, panel));
  $setProperty_0($getStyle($getElement(panel)), 'display', 'inline-table');
  $setProperty_0($getStyle($getElement(panel)), 'verticalAlign', 'bottom');
  $addKeyPressHandler(panel, new StoryboardLargeMouseController$2_0(this, panel));
  return panel;
}
;
function $$init_683(){
}

function StoryboardLargeMouseController$1_0(this$0, val$panel){
  this.this$0 = this$0;
  this.val$panel = val$panel;
  Object_1.call(this);
  $$init_683();
}

defineSeed(824, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), StoryboardLargeMouseController$1_0);
_.onClick = function onClick_2(event_0){
  var index_0;
  index_0 = $getWidgetIndex(this.this$0.storyboard, this.val$panel);
  fire_5(this.this$0, valueOf_12(index_0));
}
;
function $$init_684(){
}

function StoryboardLargeMouseController$2_0(this$0, val$panel){
  this.this$0 = this$0;
  this.val$panel = val$panel;
  Object_1.call(this);
  $$init_684();
}

defineSeed(825, 1, makeCastMap([Q$KeyPressHandler, Q$EventHandler]), StoryboardLargeMouseController$2_0);
_.onKeyPress = function onKeyPress(event_0){
  var index_0;
  if ($getKeyCode($getNativeEvent(event_0)) == 13) {
    index_0 = $getWidgetIndex(this.this$0.storyboard, this.val$panel);
    fire_5(this.this$0, valueOf_12(index_0));
  }
}
;
function $clinit_StoryboardLargeMouseController_ControllerProxy(){
  $clinit_StoryboardLargeMouseController_ControllerProxy = nullMethod;
  getLogger($getName_2(Lorg_cruxframework_crux_widgets_client_storyboard_StoryboardLargeMouseController_1ControllerProxy_2_classLit));
}

function $$init_685(){
}

function StoryboardLargeMouseController_ControllerProxy_0(view){
  $clinit_StoryboardLargeMouseController_ControllerProxy();
  StoryboardLargeMouseController_0.call(this);
  $$init_685();
  this.__view = view;
}

defineSeed(826, 823, makeCastMap([Q$HasHandlers, Q$IsWidget, Q$ViewAware]), StoryboardLargeMouseController_ControllerProxy_0);
_.getBoundCruxView = function getBoundCruxView_20(){
  return this.__view;
}
;
_.getBoundCruxViewId = function getBoundCruxViewId_20(){
  return isNull_1(this.__view)?null:$getId_0(this.__view);
}
;
function $$init_686(this$static){
}

function $next_4(this$static){
  if (this$static.index_0 >= $getWidgetCount_0(this$static.this$0)) {
    throw new NoSuchElementException_0;
  }
  return $getWidget_3(this$static.this$0, ++this$static.index_0);
}

function StoryboardSmallController$1_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_686(this);
}

defineSeed(827, 1, {}, StoryboardSmallController$1_0);
_.hasNext = function hasNext_8(){
  return this.index_0 < $getWidgetCount_0(this.this$0) - 1;
}
;
_.next_0 = function next_9(){
  return $next_4(this);
}
;
_.remove_1 = function remove_28(){
  if (this.index_0 < 0 || this.index_0 >= $getWidgetCount_0(this.this$0)) {
    throw new IllegalStateException_0;
  }
  $remove_13(this.this$0, this.index_0--);
}
;
_.index_0 = -1;
function $$init_687(){
}

function StoryboardSmallController$2_0(this$0, val$panel){
  this.this$0 = this$0;
  this.val$panel = val$panel;
  Object_1.call(this);
  $$init_687();
}

defineSeed(828, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), StoryboardSmallController$2_0);
_.onSelect = function onSelect_14(event_0){
  var index_0;
  index_0 = $getWidgetIndex(this.this$0.storyboard, this.val$panel);
  fire_5(this.this$0, valueOf_12(index_0));
}
;
function $$init_688(this$static){
  this$static.verticalAlignment = ($clinit_HasVerticalAlignment() , ALIGN_MIDDLE);
  this$static.horizontalAlignment = ($clinit_HasHorizontalAlignment() , ALIGN_CENTER);
  this$static.externalPanel = new SimplePanel_0;
  this$static.internalPanel = new SimplePanel_0;
}

function $add_13(this$static, w){
  $add_2(this$static.internalPanel, w);
  $setHorizontalAlignment_1(this$static, $getHorizontalAlignment(this$static));
}

function $getHorizontalAlignment(this$static){
  return this$static.horizontalAlignment;
}

function $setHorizontalAlignment_1(this$static, align_0){
  var childStyle, marginLeft, marginRight;
  marginLeft = '';
  marginRight = '';
  if (isNotNull(align_0)) {
    this$static.horizontalAlignment = align_0;
    this$static.horizontalAlignment.equals$(($clinit_HasHorizontalAlignment() , ALIGN_RIGHT)) && (marginRight = 'auto');
    if (this$static.horizontalAlignment.equals$(($clinit_HasHorizontalAlignment() , ALIGN_CENTER))) {
      marginLeft = 'auto';
      marginRight = 'auto';
    }
  }
  if (isNotNull(this$static.internalPanel.getWidget())) {
    childStyle = $getStyle($getElement(this$static.internalPanel.getWidget()));
    $setProperty_0(childStyle, 'marginLeft', marginLeft);
    $setProperty_0(childStyle, 'marginRight', marginRight);
  }
}

function $setVerticalAlignment(this$static, align_0){
  var style, verticalAlign;
  verticalAlign = '';
  if (isNotNull(align_0)) {
    this$static.verticalAlignment = align_0;
    this$static.verticalAlignment.equals$(($clinit_HasVerticalAlignment() , ALIGN_MIDDLE))?(verticalAlign = 'middle'):this$static.verticalAlignment.equals$(($clinit_HasVerticalAlignment() , ALIGN_BOTTOM)) && (verticalAlign = 'bottom');
  }
  style = $getStyle($getElement(this$static.internalPanel));
  $setProperty_0(style, 'verticalAlign', verticalAlign);
}

function StyledPanel_0(){
  $clinit_UIObject();
  var extrnStyle, intrnStyle;
  Composite_0.call(this);
  $$init_688(this);
  $initWidget(this, this.externalPanel);
  $add_2(this.externalPanel, this.internalPanel);
  extrnStyle = $getStyle($getElement(this.externalPanel));
  $setProperty_0(extrnStyle, 'display', 'table');
  $setProperty_0(extrnStyle, 'boxSizing', 'border-box');
  intrnStyle = $getStyle($getElement(this.internalPanel));
  $setProperty_0(intrnStyle, 'display', 'table-cell');
  $setWidth(intrnStyle, 100, ($clinit_Style$Unit() , PCT));
  this.externalPanel.setStyleName('crux-StyledPanelOuter');
  this.internalPanel.setStyleName('crux-StyledPanel');
  $setHorizontalAlignment_1(this, this.horizontalAlignment);
  $setVerticalAlignment(this, this.verticalAlignment);
}

defineSeed(829, 365, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]), StyledPanel_0);
function $$init_689(this$static){
  this$static , false;
  this$static , true;
  this$static , false;
  this$static , false;
}

function $concludeViewsSwapping(this$static, previous, next){
  this$static.swap.clear_0();
  fire_8(this$static, previous, next);
}

function $renderView_0(this$static, view, direction, animationCallback, parameter){
  var next, previous, rendered;
  if (isNull_1(this$static.activeView) || !$equals_2($getId_0(this$static.activeView), $getId_0(view))) {
    previous = this$static.activeView;
    next = view;
    rendered = $renderView(this$static, view, parameter);
    if (rendered) {
      if (isNull_1(previous) || isNull_1(direction)) {
        $setCurrentWidget(this$static.swapPanel, this$static.active);
        $concludeViewsSwapping(this$static, previous, next);
      }
       else {
        this$static , true;
        $transitTo(this$static.swapPanel, this$static.active, direction, new HorizontalSwapContainer$2_0(this$static, previous, next, animationCallback));
      }
    }
    return rendered;
  }
  return false;
}

function $swapPanelVariables(this$static){
  var temp;
  temp = this$static.active;
  this$static.active = this$static.swap;
  this$static.swap = temp;
}

function HorizontalSwapContainer_0(){
  $clinit_ViewContainer();
  SingleViewContainer_0.call(this, new HorizontalSwapPanel_0, false);
  $$init_689(this);
  this.swapPanel = dynamicCast($getMainWidget(this), Q$HorizontalSwapPanel);
  this.swapPanel.setStyleName('crux-HorizontalSwapContainer');
  this.active = new SimplePanel_0;
  this.swap = new SimplePanel_0;
}

defineSeed(830, 594, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$ViewContainer, Q$HorizontalSwapContainer]), HorizontalSwapContainer_0);
_.activate = function activate_1(view, containerPanel, parameter){
  var activated;
  activated = $activate_0(this, view, containerPanel, parameter);
  activated && $swapPanelVariables(this);
  return activated;
}
;
_.getContainerPanel = function getContainerPanel_3(view){
  if (isNull_1(view)) {
    debugger;
    throw makeAssertionError_Object('Can not retrieve a container for a null view');
  }
  if (isNotNull(this.activeView) && $equals_2($getId_0(this.activeView), $getId_0(view))) {
    return this.active;
  }
  return this.swap;
}
;
_.handleViewTitle = function handleViewTitle_3(title_0, containerPanel, viewId){
}
;
_.renderView = function renderView_0(view, parameter){
  return $renderView_0(this, view, ($clinit_HorizontalSwapPanel$Direction() , FORWARD), null, parameter);
}
;
function $$init_690(){
}

function HorizontalSwapContainer$2_0(this$0, val$previous, val$next, val$animationCallback){
  this.this$0 = this$0;
  this.val$previous = val$previous;
  this.val$next = val$next;
  this.val$animationCallback = val$animationCallback;
  Object_1.call(this);
  $$init_690();
}

defineSeed(831, 1, {}, HorizontalSwapContainer$2_0);
_.onTransitionCompleted = function onTransitionCompleted_0(){
  $concludeViewsSwapping(this.this$0, this.val$previous, this.val$next);
  isNotNull(this.val$animationCallback) && this.val$animationCallback.onTransitionCompleted();
  this.this$0 , false;
}
;
function $$init_691(this$static){
  this$static.currentPanel = new SimplePanel_0;
  this$static.nextPanel = new SimplePanel_0;
  this$static , 500;
  this$static , false;
}

function $concludeSlide(this$static, completeCallback){
  var currentPanelHeight;
  80;
  currentPanelHeight = isNotNull(this$static.currentPanel.getWidget())?this$static.currentPanel.getWidget().getOffsetHeight():this$static.currentPanel.getOffsetHeight();
  if (this$static.contentPanel.getOffsetHeight() != currentPanelHeight) {
    setHeight_3(this$static.contentPanel, currentPanelHeight, 80, new HorizontalSwapPanel$3_0(this$static, completeCallback));
  }
   else {
    isNotNull(completeCallback) && completeCallback.onTransitionCompleted();
    fire_11(this$static);
  }
}

function $configureCurrentPanel(this$static){
  var style;
  resetTransition_0(this$static.currentPanel);
  style = $getStyle($getElement(this$static.currentPanel));
  $setPosition(style, ($clinit_Style$Position() , RELATIVE));
  $setTop(style, 0, ($clinit_Style$Unit() , PX));
  $setLeft(style, 0, ($clinit_Style$Unit() , PX));
  $setWidth(style, 100, ($clinit_Style$Unit() , PCT));
  $setHeight(style, 100, ($clinit_Style$Unit() , PCT));
  $setOverflowX(style, ($clinit_Style$Overflow() , HIDDEN));
  $setOverflowY(style, ($clinit_Style$Overflow() , VISIBLE));
  $setVisibility(style, ($clinit_Style$Visibility() , VISIBLE_0));
  $setOpacity(style, 1);
}

function $configureNextPanel(this$static){
  var style;
  style = $getStyle($getElement(this$static.nextPanel));
  $setTop(style, 0, ($clinit_Style$Unit() , PX));
  $setLeft(style, 0, ($clinit_Style$Unit() , PX));
  $setPosition(style, ($clinit_Style$Position() , ABSOLUTE));
  $setWidth(style, 100, ($clinit_Style$Unit() , PCT));
  $setHeight(style, 100, ($clinit_Style$Unit() , PCT));
  $setOverflowX(style, ($clinit_Style$Overflow() , HIDDEN));
  $setOverflowY(style, ($clinit_Style$Overflow() , VISIBLE));
  $setVisibility(style, ($clinit_Style$Visibility() , HIDDEN_0));
  $setOpacity(style, 0);
}

function $freezeContainerHeight(this$static){
  var currentContentHeight;
  currentContentHeight = $getOffsetHeight($getElement(this$static.currentPanel));
  currentContentHeight > 0 && $setHeight($getStyle($getElement(this$static.contentPanel)), currentContentHeight, ($clinit_Style$Unit() , PX));
}

function $onTransitionComplete(this$static, completeCallback){
  var temp;
  temp = this$static.nextPanel;
  this$static.nextPanel = this$static.currentPanel;
  this$static.currentPanel = temp;
  $configureNextPanel(this$static);
  $configureCurrentPanel(this$static);
  get_1().scheduleDeferred(new HorizontalSwapPanel$5_0(this$static, completeCallback));
}

function $prepareCurrentPanelToSlideOut(this$static){
  $setPosition($getStyle($getElement(this$static.nextPanel)), ($clinit_Style$Position() , ABSOLUTE));
}

function $prepareNextPanelToSlideIn(this$static, w, direction){
  var left, style;
  try {
    this$static.nextPanel.clear_0();
  }
   catch ($e0) {
    $e0 = wrap($e0);
    if (instanceOf($e0, Q$Exception)) {
      $e0;
      this$static.nextPanel = new SimplePanel_0;
    }
     else 
      throw unwrap($e0);
  }
  $add_2(this$static.nextPanel, w);
  $equals_1(direction, ($clinit_HorizontalSwapPanel$Direction() , FORWARD))?(left = this$static.contentPanel.getOffsetWidth()):(left = -this$static.contentPanel.getOffsetWidth());
  translateX_2(this$static.nextPanel, left, null);
  style = $getStyle($getElement(this$static.nextPanel));
  $setVisibility(style, ($clinit_Style$Visibility() , VISIBLE_0));
  $setOpacity(style, 1);
}

function $setCurrentWidget(this$static, widget){
  this$static.currentPanel.clear_0();
  $add_2(this$static.currentPanel, widget);
}

function $slide(this$static, direction, completeCallback){
  var delta;
  delta = $getClientWidth($getElement(this$static.contentPanel));
  jsEquals(direction, ($clinit_HorizontalSwapPanel$Direction() , FORWARD)) && (delta = -delta);
  translateX_1(this$static.currentPanel, delta, 500, null);
  translateX_1(this$static.nextPanel, 0, 500, new HorizontalSwapPanel$4_0(this$static, completeCallback));
}

function $transitTo(this$static, w, direction, completeCallback){
  $prepareNextPanelToSlideIn(this$static, w, direction);
  $freezeContainerHeight(this$static);
  $prepareCurrentPanelToSlideOut(this$static);
  get_1().scheduleDeferred(new HorizontalSwapPanel$2_0(this$static, direction, completeCallback));
}

function HorizontalSwapPanel_0(){
  $clinit_UIObject();
  var style;
  Composite_0.call(this);
  $$init_691(this);
  this.contentPanel = new FlowPanel_0;
  $initWidget(this, this.contentPanel);
  this.setStyleName('crux-HorizontalSwapPanel');
  style = $getStyle($getElement(this.contentPanel));
  $setPosition(style, ($clinit_Style$Position() , RELATIVE));
  $setOverflow(style, ($clinit_Style$Overflow() , HIDDEN));
  $setWidth(style, 100, ($clinit_Style$Unit() , PCT));
  $setVisibility(style, ($clinit_Style$Visibility() , VISIBLE_0));
  $setOpacity(style, 1);
  $configureCurrentPanel(this);
  $configureNextPanel(this);
  hideBackface_0(this.currentPanel);
  hideBackface_0(this.nextPanel);
  $add_3(this.contentPanel, this.currentPanel);
  $add_3(this.contentPanel, this.nextPanel);
}

defineSeed(832, 365, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget, Q$HorizontalSwapPanel]), HorizontalSwapPanel_0);
_.setHeight = function setHeight_7(height){
  this.height_0 = height;
  $setHeight_0(this, height);
}
;
function $$init_692(){
}

function HorizontalSwapPanel$2_0(this$0, val$direction, val$completeCallback){
  this.this$0 = this$0;
  this.val$direction = val$direction;
  this.val$completeCallback = val$completeCallback;
  Object_1.call(this);
  $$init_692();
}

defineSeed(833, 1, {}, HorizontalSwapPanel$2_0);
_.execute_1 = function execute_17(){
  $slide(this.this$0, this.val$direction, this.val$completeCallback);
}
;
function $$init_693(){
}

function HorizontalSwapPanel$3_0(this$0, val$completeCallback){
  this.this$0 = this$0;
  this.val$completeCallback = val$completeCallback;
  Object_1.call(this);
  $$init_693();
}

defineSeed(834, 1, {}, HorizontalSwapPanel$3_0);
_.onTransitionCompleted = function onTransitionCompleted_1(){
  get_1().scheduleDeferred(new HorizontalSwapPanel$3$1_0(this));
  isNotNull(this.val$completeCallback) && this.val$completeCallback.onTransitionCompleted();
  fire_11(this.this$0);
}
;
function $$init_694(){
}

function HorizontalSwapPanel$3$1_0(this$1){
  this.this$1 = this$1;
  Object_1.call(this);
  $$init_694();
}

defineSeed(835, 1, {}, HorizontalSwapPanel$3$1_0);
_.execute_1 = function execute_18(){
  isEmpty_5(this.this$1.this$0.height_0)?this.this$1.this$0.contentPanel.setHeight('auto'):this.this$1.this$0.contentPanel.setHeight(this.this$1.this$0.height_0);
}
;
function $$init_695(){
}

function HorizontalSwapPanel$4_0(this$0, val$completeCallback){
  this.this$0 = this$0;
  this.val$completeCallback = val$completeCallback;
  Object_1.call(this);
  $$init_695();
}

defineSeed(836, 1, {}, HorizontalSwapPanel$4_0);
_.onTransitionCompleted = function onTransitionCompleted_2(){
  $onTransitionComplete(this.this$0, this.val$completeCallback);
}
;
function $$init_696(){
}

function HorizontalSwapPanel$5_0(this$0, val$completeCallback){
  this.this$0 = this$0;
  this.val$completeCallback = val$completeCallback;
  Object_1.call(this);
  $$init_696();
}

defineSeed(837, 1, {}, HorizontalSwapPanel$5_0);
_.execute_1 = function execute_19(){
  $concludeSlide(this.this$0, this.val$completeCallback);
}
;
function $clinit_HorizontalSwapPanel$Direction(){
  $clinit_HorizontalSwapPanel$Direction = nullMethod;
  FORWARD = new HorizontalSwapPanel$Direction_0('FORWARD', 0);
  BACKWARDS = new HorizontalSwapPanel$Direction_0('BACKWARDS', 1);
  $VALUES_17 = initValues(_3Lorg_cruxframework_crux_widgets_client_swappanel_HorizontalSwapPanel$Direction_2_classLit, makeCastMap([Q$Serializable]), Q$HorizontalSwapPanel$Direction, [FORWARD, BACKWARDS]);
}

function $$init_697(){
}

function HorizontalSwapPanel$Direction_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_697();
}

function valueOf_25(name_0){
  $clinit_HorizontalSwapPanel$Direction();
  return valueOf(($clinit_HorizontalSwapPanel$Direction$Map() , $MAP_17), name_0);
}

function values_18(){
  $clinit_HorizontalSwapPanel$Direction();
  return $VALUES_17;
}

defineSeed(838, 134, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$HorizontalSwapPanel$Direction]), HorizontalSwapPanel$Direction_0);
var $VALUES_17, BACKWARDS, FORWARD;
function $clinit_HorizontalSwapPanel$Direction$Map(){
  $clinit_HorizontalSwapPanel$Direction$Map = nullMethod;
  $MAP_17 = createValueOfMap(($clinit_HorizontalSwapPanel$Direction() , $VALUES_17));
}

var $MAP_17;
function $$init_698(this$static){
  this$static.maxLengthHandler = new TextArea$MaxLengthHandler_0(this$static);
  this$static , -1;
}

function $addPasteHandler(this$static, handler){
  return $addHandler_2(this$static, handler, getType_32());
}

function $attachHandlers(this$static){
  this$static.registrations = new FastList_0;
  $add_9(this$static.registrations, $addKeyDownHandler(this$static, this$static.maxLengthHandler));
  $add_9(this$static.registrations, $addChangeHandler(this$static, this$static.maxLengthHandler));
  $add_9(this$static.registrations, $addPasteHandler(this$static, this$static.maxLengthHandler));
}

function $setText_6(this$static, text_0){
  $setText_4(this$static, text_0);
  $maybeTruncateText(this$static.maxLengthHandler);
}

function $setValue_2(this$static, value_0, fireEvents){
  $setValue_1(this$static, value_0, fireEvents);
  $maybeTruncateText(this$static.maxLengthHandler);
}

function TextArea_3(){
  $clinit_TextBoxBase();
  TextArea_1.call(this);
  $$init_698(this);
  getRegister().registerPasteEventSource(this, $getElement(this));
  $attachHandlers(this);
}

defineSeed(840, 433, makeCastMap([Q$HasAllMouseHandlers, Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), TextArea_3);
_.setText = function setText_5(text_0){
  $setText_6(this, text_0);
}
;
_.setValue = function setValue_4(value_0, fireEvents){
  $setValue_2(this, dynamicCast(value_0, Q$String), fireEvents);
}
;
function $$init_699(this$static){
  this$static.truncTimer = new TextArea$MaxLengthHandler$1_0(this$static);
}

function $maybeTruncateText(this$static){
  $schedule(this$static.truncTimer, 1);
}

function TextArea$MaxLengthHandler_0(textArea){
  Object_1.call(this);
  $$init_699(this);
  this.textArea = textArea;
}

defineSeed(841, 1, makeCastMap([Q$ChangeHandler, Q$KeyDownHandler, Q$EventHandler, Q$PasteHandler]), TextArea$MaxLengthHandler_0);
_.onChange = function onChange(event_0){
  $maybeTruncateText(this);
}
;
_.onKeyDown = function onKeyDown(event_0){
  $maybeTruncateText(this);
}
;
_.onPaste = function onPaste(event_0){
  $maybeTruncateText(this);
}
;
function $$init_700(){
}

function TextArea$MaxLengthHandler$1_0(this$1){
  this.this$1 = this$1;
  Timer_0.call(this);
  $$init_700();
}

defineSeed(842, 10, {}, TextArea$MaxLengthHandler$1_0);
_.run = function run_4(){
  var target;
  target = this.this$1.textArea;
  $length_1($getText_1(target));
}
;
function $$init_701(this$static){
  this$static.files_0 = new HashMap_0;
  this$static.filePanelWidgets = new HashMap_0;
  this$static , true;
  this$static , true;
}

function $clear_3(this$static){
  var filePanel, key, keys_0;
  keys_0 = this$static.files_0.keySet_0().iterator();
  while (keys_0.hasNext()) {
    key = dynamicCast(keys_0.next_0(), Q$String);
    keys_0.remove_1();
    filePanel = dynamicCast(this$static.filePanelWidgets.get_2(key), Q$Widget);
    if (isNotNull(filePanel)) {
      this$static.filePanelWidgets.remove_3(key);
      $removeFromParent(filePanel);
    }
  }
}

function $concludeUpload(this$static, fileName){
  $conclude($getProgressBar(this$static, fileName));
  $setVisibility($getStyle($getElement($getRemoveButton(this$static, fileName))), ($clinit_Style$Visibility() , HIDDEN_0));
  fire_15(this$static, dynamicCastJso(this$static.files_0.get_2(fileName)), fileName);
}

function $createDeleteButton(this$static, fileName){
  var delete_$;
  delete_$ = new Button_2;
  delete_$.setStyleName('cancelUploadButton');
  $setFloat($getStyle($getElement(delete_$)), ($clinit_Style$Float() , LEFT));
  $addSelectHandler(delete_$, new AbstractFileUploader$5_0(this$static, fileName));
  return delete_$;
}

function $createFilePanel(this$static, fileName, file){
  var filePanel;
  filePanel = new FlowPanel_0;
  filePanel.setStyleName('filePanel');
  $setDisplay($getStyle($getElement(filePanel)), ($clinit_Style$Display() , INLINE_BLOCK));
  $add_3(filePanel, $createDeleteButton(this$static, fileName));
  $createThumbnailIfSupported(this$static, file, filePanel);
  $add_3(filePanel, $createNameLabel(fileName));
  $add_3(filePanel, this$static.createProgressBar());
  return filePanel;
}

function $createNameLabel(fileName){
  var label_0;
  label_0 = new Label_2(fileName);
  $setFloat($getStyle($getElement(label_0)), ($clinit_Style$Float() , LEFT));
  return label_0;
}

function $createProgressBar(){
  var progressBar;
  progressBar = new ProgressBar_0;
  return progressBar;
}

function $createThumbnailIfSupported(this$static, file, filePanel){
  var fileExt, fileReader, label_0;
  fileReader = createIfSupported();
  if (isNull_1(fileReader) || !$contains_0('image/jpg,image/jpeg,image/tif,image/gif,image/png,image/rawimage/svg+xml', $getType_0(file)) || !$contains_0('jpg,jpeg,tif,gif,png,rawsvg', $retrieveFileExtension($getName_3(file)))) {
    fileExt = '.' + $retrieveFileExtension($getName_3(file));
    label_0 = new Label_0;
    label_0.setStyleName('thumbnailImage noPreview');
    $setText_2(label_0, fileExt);
    $add_3(filePanel, label_0);
    return;
  }
   else {
    $readAsDataURL(fileReader, file, new AbstractFileUploader$4_0(this$static, filePanel));
  }
}

function $getBrowserSpecificFailure_0(xhr){
  try {
    if (xhr.status === undefined) {
      return 'XmlHttpRequest.status == undefined, please see Safari bug ' + 'http://bugs.webkit.org/show_bug.cgi?id=3810 for more details';
    }
    return null;
  }
   catch (e) {
    return 'Unable to read XmlHttpRequest.status; likely causes are a ' + 'networking error or bad cross-domain request. Please see ' + 'https://bugzilla.mozilla.org/show_bug.cgi?id=238559 for more ' + 'details';
  }
}

function $getFiles(event_0){
  return event_0.target.files || event_0.dataTransfer.files;
}

function $getProgressBar(this$static, fileName){
  var filePanel, progressBar;
  filePanel = dynamicCast(this$static.filePanelWidgets.get_2(fileName), Q$FlowPanel);
  progressBar = dynamicCast($getWidget(filePanel, $getWidgetCount(filePanel) - 1), Q$ProgressBar);
  return progressBar;
}

function $getRemoveButton(this$static, fileName){
  var button, filePanel;
  filePanel = dynamicCast(this$static.filePanelWidgets.get_2(fileName), Q$FlowPanel);
  button = dynamicCast($getWidget(filePanel, 0), Q$Button);
  return button;
}

function $getXhr(this$static, fileName){
  var xhr;
  xhr = create_10();
  $setOnProgressHandler(xhr, new AbstractFileUploader$6_0(this$static, fileName));
  $setOnReadyStateChange(xhr, new AbstractFileUploader$7_0(this$static, fileName));
  return xhr;
}

function $initButtonsPanel(this$static){
  var buttonsPanel;
  buttonsPanel = new FlowPanel_0;
  buttonsPanel.setStyleName('buttonsPanel');
  this$static.fileInput = $initFileInput(this$static);
  $add_3(buttonsPanel, this$static.fileInput);
  this$static.sendButton = $initSendButton(this$static);
  $add_3(buttonsPanel, this$static.sendButton);
  return buttonsPanel;
}

function $initFileInput(this$static){
  var fileInput;
  fileInput = new FileButton_0;
  fileInput.setStyleName('fileInputButton');
  $setDisplay($getStyle($getElement(fileInput)), ($clinit_Style$Display() , INLINE_BLOCK));
  $addChangeHandler_0(fileInput, new AbstractFileUploader$3_0(this$static));
  return fileInput;
}

function $initFilesPanel(){
  var filesPanel;
  filesPanel = new FlowPanel_0;
  filesPanel.setStyleName('filesArea');
  return filesPanel;
}

function $initSendButton(this$static){
  var sendButton;
  sendButton = new Button_2;
  sendButton.setStyleName('sendButton');
  $setDisplay($getStyle($getElement(sendButton)), ($clinit_Style$Display() , INLINE_BLOCK));
  $addSelectHandler(sendButton, new AbstractFileUploader$2_0(this$static));
  return sendButton;
}

function $isAutoUploadFiles(this$static){
  return this$static.autoUploadFiles;
}

function $isMultiple(this$static){
  return $isMultiple_0(this$static.fileInput);
}

function $onSelectFile(this$static, event_0){
  $stopPropagation_0(event_0);
  $preventDefault_0(event_0);
  $processFiles(this$static, $getNativeEvent(event_0));
  $resetFileInput(this$static);
}

function $processFile(this$static, file, fileName){
  var filePanel;
  if (!this$static.filePanelWidgets.containsKey(fileName)) {
    if ($isMultiple(this$static) || this$static.files_0.size_1() < 1) {
      this$static.files_0.put(fileName, file);
      filePanel = $createFilePanel(this$static, fileName, file);
      this$static.filePanelWidgets.put(fileName, filePanel);
      $add_3(this$static.filesPanel, filePanel);
      return true;
    }
  }
  return false;
}

function $processFiles(this$static, event_0){
  var addFileEvent, file, files, i, processed;
  files = $getFiles(event_0);
  $length(files) > 0 && !$isMultiple(this$static) && $clear_3(this$static);
  for (i = 0; i < $length(files); i++) {
    file = $get(files, i);
    addFileEvent = fire_12(this$static, file, $getName_3(file));
    if (!$isCanceled_4(addFileEvent)) {
      processed = $processFile(this$static, file, $getName_3(file));
      processed && $isAutoUploadFiles(this$static) && $uploadFile_0(this$static, file, $getName_3(file));
    }
  }
}

function $removeFile(this$static, fileName){
  var filePanel, removedFile;
  filePanel = dynamicCast(this$static.filePanelWidgets.get_2(fileName), Q$Widget);
  if (isNotNull(filePanel)) {
    if (this$static.hasRemoveFileHandler) {
      removedFile = dynamicCastJso(this$static.files_0.get_2(fileName));
      fire_13(this$static, removedFile, fileName, new AbstractFileUploader$1_0(this$static, fileName, filePanel));
    }
     else {
      this$static.filePanelWidgets.remove_3(fileName);
      $removeFromParent(filePanel);
      this$static.files_0.remove_3(fileName);
    }
  }
}

function $resetFileInput(this$static){
  var buttonsPanel, index_0, multiple, text_0;
  buttonsPanel = dynamicCast($getParent_1(this$static.fileInput), Q$FlowPanel);
  index_0 = $getWidgetIndex(buttonsPanel, this$static.fileInput);
  $remove(buttonsPanel, index_0);
  text_0 = $getText_5(this$static.fileInput);
  multiple = $isMultiple_0(this$static.fileInput);
  this$static.fileInput = $initFileInput(this$static);
  $setText_7(this$static.fileInput, text_0);
  $setMultiple_1(this$static.fileInput, multiple);
  $insert_0(buttonsPanel, this$static.fileInput, index_0);
}

function $retrieveFileExtension(fileName){
  var extension, i;
  extension = '';
  i = $lastIndexOf(fileName, 46);
  i > 0 && (extension = $substring(fileName, i + 1));
  return extension;
}

function $setAutoUploadFiles(this$static, autoUploadFiles){
  this$static.autoUploadFiles = autoUploadFiles;
  this$static.sendButton.setVisible(!autoUploadFiles);
}

function $setFileInputText(this$static, text_0){
  $setText_7(this$static.fileInput, text_0);
}

function $setMultiple_0(this$static, multiple){
  $setMultiple_1(this$static.fileInput, multiple);
}

function $setUrl_0(this$static, url_0){
  this$static.url_0 = url_0;
}

function $updateProgressBar(this$static, fileName, loaded, total){
  var percentLoaded, progressBar;
  progressBar = $getProgressBar(this$static, fileName);
  percentLoaded = toInt(round_0(loaded / total * 100));
  $update_0(progressBar, percentLoaded);
}

function $uploadAllFiles(this$static){
  $uploadAllFiles_0(this$static, this$static.url_0);
}

function $uploadAllFiles_0(this$static, url_0){
  var fileName, fileName$iterator;
  for (fileName$iterator = this$static.files_0.keySet_0().iterator(); fileName$iterator.hasNext();) {
    fileName = dynamicCast(fileName$iterator.next_0(), Q$String);
    $uploadFile(this$static, fileName, url_0);
  }
}

function $uploadError(this$static, fileName){
  $setError($getProgressBar(this$static, fileName), true);
  fire_16(this$static, dynamicCastJso(this$static.files_0.get_2(fileName)), fileName);
}

function $uploadFile(this$static, fileName, url_0){
  $uploadFile_1(this$static, dynamicCastJso(this$static.files_0.get_2(fileName)), fileName, url_0);
}

function $uploadFile_0(this$static, file, fileName){
  $uploadFile_1(this$static, file, fileName, this$static.url_0);
}

function $uploadFile_1(this$static, file, fileName, url_0){
  var uploadStartEvent, xhr;
  uploadStartEvent = fire_17(this$static, file, fileName);
  if ($isCanceled_5(uploadStartEvent)) {
    fire_14(this$static, file, fileName);
  }
   else {
    xhr = $getXhr(this$static, fileName);
    $open(xhr, 'POST', url_0);
    $send_1(xhr, 'file', file);
  }
}

function AbstractFileUploader_0(){
  Composite_0.call(this);
  $$init_701(this);
  this.initializeWidgets();
  $initWidget(this, this.mainPanel);
  this.setStyleName('crux-FileUploader');
}

function isSupported_5(){
  return isSupported_0() && isSupported_1() && isSupported_2() && isSupported_4();
}

defineSeed(843, 365, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]));
_.createProgressBar = function createProgressBar(){
  return $createProgressBar();
}
;
_.onSelectFile = function onSelectFile(event_0){
  $onSelectFile(this, event_0);
}
;
_.autoUploadFiles = false;
_.hasRemoveFileHandler = false;
function $$init_702(){
}

function AbstractFileUploader$1_0(this$0, val$fileName, val$filePanel){
  this , this$0;
  this , val$fileName;
  this , val$filePanel;
  Object_1.call(this);
  $$init_702();
}

defineSeed(844, 1, {}, AbstractFileUploader$1_0);
function $$init_703(){
}

function AbstractFileUploader$2_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_703();
}

defineSeed(845, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), AbstractFileUploader$2_0);
_.onSelect = function onSelect_15(event_0){
  $uploadAllFiles(this.this$0);
}
;
function $$init_704(){
}

function AbstractFileUploader$3_0(this$0){
  this.this$0 = this$0;
  Object_1.call(this);
  $$init_704();
}

defineSeed(846, 1, makeCastMap([Q$ChangeHandler, Q$EventHandler]), AbstractFileUploader$3_0);
_.onChange = function onChange_0(event_0){
  this.this$0.onSelectFile(event_0);
}
;
function $$init_705(){
}

function AbstractFileUploader$4_0(this$0, val$filePanel){
  this , this$0;
  this.val$filePanel = val$filePanel;
  Object_1.call(this);
  $$init_705();
}

defineSeed(847, 1, {}, AbstractFileUploader$4_0);
_.onComplete_0 = function onComplete_1(result){
  var image;
  image = new Image_2(result);
  image.setStyleName('thumbnailImage');
  $setFloat($getStyle($getElement(image)), ($clinit_Style$Float() , LEFT));
  $add_3(this.val$filePanel, image);
}
;
function $$init_706(){
}

function AbstractFileUploader$5_0(this$0, val$fileName){
  this.this$0 = this$0;
  this.val$fileName = val$fileName;
  Object_1.call(this);
  $$init_706();
}

defineSeed(848, 1, makeCastMap([Q$EventHandler, Q$SelectHandler]), AbstractFileUploader$5_0);
_.onSelect = function onSelect_16(event_0){
  $removeFile(this.this$0, this.val$fileName);
}
;
function $$init_707(){
}

function AbstractFileUploader$6_0(this$0, val$fileName){
  this.this$0 = this$0;
  this.val$fileName = val$fileName;
  Object_1.call(this);
  $$init_707();
}

defineSeed(849, 1, {}, AbstractFileUploader$6_0);
_.onProgress = function onProgress(loaded, total){
  $updateProgressBar(this.this$0, this.val$fileName, loaded, total);
}
;
function $$init_708(){
}

function AbstractFileUploader$7_0(this$0, val$fileName){
  this.this$0 = this$0;
  this.val$fileName = val$fileName;
  Object_1.call(this);
  $$init_708();
}

defineSeed(850, 1, {}, AbstractFileUploader$7_0);
_.onReadyStateChange = function onReadyStateChange_0(xhr){
  var status_0;
  if ($getReadyState(xhr) == 4) {
    $clearOnReadyStateChange(xhr);
    if (jsNotEquals($getBrowserSpecificFailure_0(xhr), null)) {
      $uploadError(this.this$0, this.val$fileName);
    }
     else {
      status_0 = $getStatus(xhr) - 200;
      status_0 >= 0 && status_0 < 10?$concludeUpload(this.this$0, this.val$fileName):$uploadError(this.this$0, this.val$fileName);
    }
  }
}
;
function $$init_709(){
}

function $addChangeHandler_0(this$static, handler){
  return $addChangeHandler_1(this$static.fileInput, handler);
}

function $getText_5(this$static){
  return $getText_0(this$static.visibleButton);
}

function $isMultiple_0(this$static){
  return $isMultiple_1(this$static.fileInput);
}

function $setMultiple_1(this$static, multiple){
  $setMultiple_2(this$static.fileInput, multiple);
}

function $setText_7(this$static, text_0){
  $setText_2(this$static.visibleButton, text_0);
}

function FileButton_0(){
  var style;
  Composite_0.call(this);
  $$init_709();
  this.mainPanel = new FlowPanel_0;
  $setPosition($getStyle($getElement(this.mainPanel)), ($clinit_Style$Position() , RELATIVE));
  this.fileInput = new FileInput_0;
  style = $getStyle($getElement(this.fileInput));
  $setPosition(style, ($clinit_Style$Position() , ABSOLUTE));
  $setTextAlign(style, ($clinit_Style$TextAlign() , RIGHT_0));
  $setOpacity(style, 0);
  $setProperty_0(style, 'cursor', 'inherit');
  $setZIndex(style, 2);
  $setWidth(style, 100, ($clinit_Style$Unit() , PCT));
  $setHeight(style, 100, ($clinit_Style$Unit() , PCT));
  $setTop(style, 0, ($clinit_Style$Unit() , PX));
  $setLeft(style, 0, ($clinit_Style$Unit() , PX));
  $add_3(this.mainPanel, this.fileInput);
  this.visibleButton = new Label_0;
  this.visibleButton.setStyleName('chooseButton');
  style = $getStyle($getElement(this.visibleButton));
  $setPosition(style, ($clinit_Style$Position() , ABSOLUTE));
  $setTop(style, 0, ($clinit_Style$Unit() , PX));
  $setLeft(style, 0, ($clinit_Style$Unit() , PX));
  $setZIndex(style, 1);
  $setWidth(style, 100, ($clinit_Style$Unit() , PCT));
  $setHeight(style, 100, ($clinit_Style$Unit() , PCT));
  $add_3(this.mainPanel, this.visibleButton);
  $initWidget(this, this.mainPanel);
  this.setStyleName('crux-FileButton');
}

defineSeed(851, 365, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]), FileButton_0);
function $$init_710(){
}

function $addChangeHandler_1(this$static, handler){
  return $addDomHandler(this$static, handler, getType_9());
}

function $isMultiple_1(this$static){
  return $getPropertyBoolean($getElement(this$static), 'multiple');
}

function $setMultiple_2(this$static, multiple){
  $setPropertyBoolean($getElement(this$static), 'multiple', multiple);
}

function FileInput_0(){
  var fileInputElement;
  Widget_0.call(this);
  $$init_710();
  fileInputElement = $createFileInputElement(get_2());
  $setElement(this, fileInputElement);
}

defineSeed(852, 355, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), FileInput_0);
function $$init_711(){
}

function $setAutoUploadFiles_0(this$static, autoUploadFiles){
  $setAutoUploadFiles(this$static.impl, autoUploadFiles);
}

function $setFileInputText_0(this$static, text_0){
  $setFileInputText(this$static.impl, text_0);
}

function $setMultiple_3(this$static, multiple){
  $setMultiple_0(this$static.impl, multiple);
}

function $setUrl_1(this$static, url_0){
  $setUrl_0(this$static.impl, url_0);
}

function FileUploader_0(){
  Composite_0.call(this);
  $$init_711();
  this.impl = new FileUploaderLargeImpl_0;
  $initWidget(this, this.impl);
  this.setStyleName('crux-FileUploader');
}

function createIfSupported_1(){
  $clinit_UIObject();
  if (isSupported_6()) {
    return new FileUploader_0;
  }
  return null;
}

function isSupported_6(){
  $clinit_UIObject();
  return isSupported_5();
}

defineSeed(853, 365, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]), FileUploader_0);
function $$init_712(){
}

function $initDropArea(this$static){
  var dropArea;
  dropArea = new FocusPanel_0;
  dropArea.setStyleName('dropArea');
  $addDragOverHandler(dropArea, new FileUploaderLargeImpl$1_0(this$static, dropArea));
  $addDragLeaveHandler(dropArea, new FileUploaderLargeImpl$2_0(this$static, dropArea));
  $addDropHandler(dropArea, new FileUploaderLargeImpl$3_0(this$static, dropArea));
  return dropArea;
}

function FileUploaderLargeImpl_0(){
  AbstractFileUploader_0.call(this);
  $$init_712();
}

defineSeed(854, 843, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsRenderable, Q$IsWidget, Q$UIObject, Q$Widget]), FileUploaderLargeImpl_0);
_.createProgressBar = function createProgressBar_0(){
  var progressBar;
  progressBar = $createProgressBar();
  $setFloat($getStyle($getElement(progressBar)), ($clinit_Style$Float() , RIGHT));
  return progressBar;
}
;
_.initializeWidgets = function initializeWidgets(){
  var buttonsPanel, clearDiv;
  this.mainPanel = new FlowPanel_0;
  this.mainPanel.setStyleName('crux-FileUploader');
  this.filesPanel = $initFilesPanel();
  if (isSupported()) {
    this.dropArea = $initDropArea(this);
    $add_3(this.mainPanel, this.dropArea);
    $add_2(this.dropArea, this.filesPanel);
  }
   else {
    $add_3(this.mainPanel, this.filesPanel);
  }
  buttonsPanel = $initButtonsPanel(this);
  $add_3(this.mainPanel, buttonsPanel);
  clearDiv = new FlowPanel_0;
  $setProperty_0($getStyle($getElement(clearDiv)), 'clear', 'both');
  $add_3(this.mainPanel, clearDiv);
}
;
_.onSelectFile = function onSelectFile_0(event_0){
  $onSelectFile(this, event_0);
  isNotNull(this.dropArea) && $removeStyleDependentName(this.dropArea, 'hover');
}
;
function $$init_713(){
}

function FileUploaderLargeImpl$1_0(this$0, val$dropArea){
  this , this$0;
  this.val$dropArea = val$dropArea;
  Object_1.call(this);
  $$init_713();
}

defineSeed(855, 1, makeCastMap([Q$DragOverHandler, Q$EventHandler]), FileUploaderLargeImpl$1_0);
_.onDragOver = function onDragOver(event_0){
  $stopPropagation_0(event_0);
  $preventDefault_0(event_0);
  $addStyleDependentName(this.val$dropArea, 'hover');
}
;
function $$init_714(){
}

function FileUploaderLargeImpl$2_0(this$0, val$dropArea){
  this , this$0;
  this.val$dropArea = val$dropArea;
  Object_1.call(this);
  $$init_714();
}

defineSeed(856, 1, makeCastMap([Q$DragLeaveHandler, Q$EventHandler]), FileUploaderLargeImpl$2_0);
_.onDragLeave = function onDragLeave(event_0){
  $stopPropagation_0(event_0);
  $preventDefault_0(event_0);
  $removeStyleDependentName(this.val$dropArea, 'hover');
}
;
function $$init_715(){
}

function FileUploaderLargeImpl$3_0(this$0, val$dropArea){
  this.this$0 = this$0;
  this.val$dropArea = val$dropArea;
  Object_1.call(this);
  $$init_715();
}

defineSeed(857, 1, makeCastMap([Q$DropHandler, Q$EventHandler]), FileUploaderLargeImpl$3_0);
_.onDrop = function onDrop(event_0){
  $stopPropagation_0(event_0);
  $preventDefault_0(event_0);
  $removeStyleDependentName(this.val$dropArea, 'hover');
  $processFiles(this.this$0, $getNativeEvent(event_0));
}
;
function $$init_716(){
}

function AbstractFileEvent_0(file, fileName){
  GwtEvent_0.call(this);
  $$init_716();
  this , file;
  this , fileName;
}

defineSeed(858, 183, {});
function $clinit_AddFileEvent(){
  $clinit_AddFileEvent = nullMethod;
  TYPE_27 = new GwtEvent$Type_0;
}

function $$init_717(this$static){
}

function $dispatch_27(){
  null.nullMethod();
}

function $isCanceled_4(this$static){
  return this$static.canceled;
}

function AddFileEvent_0(file, fileName){
  AbstractFileEvent_0.call(this, file, fileName);
  $$init_717(this);
}

function fire_12(source, file, fileName){
  $clinit_AddFileEvent();
  var event_0;
  event_0 = new AddFileEvent_0(file, fileName);
  source.fireEvent(event_0);
  return event_0;
}

defineSeed(859, 858, {}, AddFileEvent_0);
_.dispatch_0 = function dispatch_28(handler){
  $dispatch_27(dynamicCast(handler, Q$AddFileHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_29(){
  return TYPE_27;
}
;
_.canceled = false;
var TYPE_27;
function $clinit_RemoveFileEvent(){
  $clinit_RemoveFileEvent = nullMethod;
  TYPE_28 = new GwtEvent$Type_0;
}

function $$init_718(){
}

function $dispatch_28(){
  null.nullMethod();
}

function RemoveFileEvent_0(file, fileName, fileRemoveAction){
  AbstractFileEvent_0.call(this, file, fileName);
  $$init_718();
  this , fileRemoveAction;
}

function fire_13(source, removedFile, fileName, fileRemoveAction){
  $clinit_RemoveFileEvent();
  var event_0;
  event_0 = new RemoveFileEvent_0(removedFile, fileName, fileRemoveAction);
  source.fireEvent(event_0);
  return event_0;
}

defineSeed(860, 858, {}, RemoveFileEvent_0);
_.dispatch_0 = function dispatch_29(handler){
  $dispatch_28(dynamicCast(handler, Q$RemoveFileHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_30(){
  return TYPE_28;
}
;
var TYPE_28;
function $clinit_UploadCanceledEvent(){
  $clinit_UploadCanceledEvent = nullMethod;
  TYPE_29 = new GwtEvent$Type_0;
}

function $$init_719(){
}

function $dispatch_29(){
  null.nullMethod();
}

function UploadCanceledEvent_0(file, fileName){
  AbstractFileEvent_0.call(this, file, fileName);
  $$init_719();
}

function fire_14(source, file, fileName){
  $clinit_UploadCanceledEvent();
  var event_0;
  event_0 = new UploadCanceledEvent_0(file, fileName);
  source.fireEvent(event_0);
  return event_0;
}

defineSeed(861, 858, {}, UploadCanceledEvent_0);
_.dispatch_0 = function dispatch_30(handler){
  $dispatch_29(dynamicCast(handler, Q$UploadCanceledHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_31(){
  return TYPE_29;
}
;
var TYPE_29;
function $clinit_UploadCompleteEvent(){
  $clinit_UploadCompleteEvent = nullMethod;
  TYPE_30 = new GwtEvent$Type_0;
}

function $$init_720(){
}

function $dispatch_30(){
  null.nullMethod();
}

function UploadCompleteEvent_0(file, fileName){
  AbstractFileEvent_0.call(this, file, fileName);
  $$init_720();
}

function fire_15(source, file, fileName){
  $clinit_UploadCompleteEvent();
  var event_0;
  event_0 = new UploadCompleteEvent_0(file, fileName);
  source.fireEvent(event_0);
  return event_0;
}

defineSeed(862, 858, {}, UploadCompleteEvent_0);
_.dispatch_0 = function dispatch_31(handler){
  $dispatch_30(dynamicCast(handler, Q$UploadCompleteHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_32(){
  return TYPE_30;
}
;
var TYPE_30;
function $clinit_UploadErrorEvent(){
  $clinit_UploadErrorEvent = nullMethod;
  TYPE_31 = new GwtEvent$Type_0;
}

function $$init_721(){
}

function $dispatch_31(){
  null.nullMethod();
}

function UploadErrorEvent_0(file, fileName){
  AbstractFileEvent_0.call(this, file, fileName);
  $$init_721();
}

function fire_16(source, file, fileName){
  $clinit_UploadErrorEvent();
  var event_0;
  event_0 = new UploadErrorEvent_0(file, fileName);
  source.fireEvent(event_0);
  return event_0;
}

defineSeed(863, 858, {}, UploadErrorEvent_0);
_.dispatch_0 = function dispatch_32(handler){
  $dispatch_31(dynamicCast(handler, Q$UploadErrorHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_33(){
  return TYPE_31;
}
;
var TYPE_31;
function $clinit_UploadStartEvent(){
  $clinit_UploadStartEvent = nullMethod;
  TYPE_32 = new GwtEvent$Type_0;
}

function $$init_722(this$static){
}

function $dispatch_32(){
  null.nullMethod();
}

function $isCanceled_5(this$static){
  return this$static.canceled;
}

function UploadStartEvent_0(file, fileName){
  AbstractFileEvent_0.call(this, file, fileName);
  $$init_722(this);
}

function fire_17(source, file, fileName){
  $clinit_UploadStartEvent();
  var event_0;
  event_0 = new UploadStartEvent_0(file, fileName);
  source.fireEvent(event_0);
  return event_0;
}

defineSeed(864, 858, {}, UploadStartEvent_0);
_.dispatch_0 = function dispatch_33(handler){
  $dispatch_32(dynamicCast(handler, Q$UploadStartHandler));
}
;
_.getAssociatedType_0 = function getAssociatedType_34(){
  return TYPE_32;
}
;
_.canceled = false;
var TYPE_32;
function $$init_723(){
}

function $applyTo(this$static, draggable){
  dynamicCast(draggable.getHandle(this$static.action_0.getFeature()), Q$HasAllMouseHandlers).addMouseDownHandler(this$static);
  dynamicCast(draggable.getHandle(this$static.action_0.getFeature()), Q$HasAllMouseHandlers).addMouseMoveHandler(this$static);
  dynamicCast(draggable.getHandle(this$static.action_0.getFeature()), Q$HasAllMouseHandlers).addMouseUpHandler(this$static);
}

function GenericDragEventHandler_0(action){
  Object_1.call(this);
  $$init_723();
  this.action_0 = action;
}

defineSeed(865, 1, makeCastMap([Q$MouseDownHandler, Q$MouseMoveHandler, Q$MouseUpHandler, Q$EventHandler]), GenericDragEventHandler_0);
_.onMouseDown = function onMouseDown_0(event_0){
  if (isNull_1(getCaptureElement())) {
    this.windowWidth = getClientWidth();
    this.clientLeft = $getBodyOffsetLeft_0(get_2());
    this.clientTop = $getBodyOffsetTop_0(get_2());
    this.dragging = true;
    setCapture($getElement($getDraggable(this.action_0).getHandle(this.action_0.getFeature()).asWidget()));
    this.dragStartX = $getClientX_0(event_0);
    this.dragStartY = $getClientY_0(event_0);
    this.action_0.onStartDrag();
  }
}
;
_.onMouseMove = function onMouseMove_0(event_0){
  var x_0, y_0;
  if (this.dragging) {
    x_0 = $getClientX_0(event_0);
    y_0 = $getClientY_0(event_0);
    if (x_0 < this.clientLeft || x_0 >= this.windowWidth || y_0 < this.clientTop) {
      return;
    }
    this.action_0.onDrag(x_0, y_0, this.dragStartX, this.dragStartY);
  }
}
;
_.onMouseUp = function onMouseUp_0(event_0){
  this.dragging = false;
  releaseCapture($getElement($getDraggable(this.action_0).getHandle(this.action_0.getFeature()).asWidget()));
}
;
_.clientLeft = 0;
_.clientTop = 0;
_.dragStartX = 0;
_.dragStartY = 0;
_.dragging = false;
_.windowWidth = 0;
function $$init_724(){
}

function $getDraggable(this$static){
  return this$static.draggable;
}

function GenericDragEventHandler$DragAction_0(draggable){
  Object_1.call(this);
  $$init_724();
  this.draggable = draggable;
}

defineSeed(866, 1, {});
function $clinit_GenericDragEventHandler$DragAndDropFeature(){
  $clinit_GenericDragEventHandler$DragAndDropFeature = nullMethod;
  MOVE = new GenericDragEventHandler$DragAndDropFeature_0('MOVE', 0);
  RESIZE = new GenericDragEventHandler$DragAndDropFeature_0('RESIZE', 1);
  $VALUES_18 = initValues(_3Lorg_cruxframework_crux_widgets_client_util_draganddrop_GenericDragEventHandler$DragAndDropFeature_2_classLit, makeCastMap([Q$Serializable]), Q$GenericDragEventHandler$DragAndDropFeature, [MOVE, RESIZE]);
}

function $$init_725(){
}

function GenericDragEventHandler$DragAndDropFeature_0(enum$name, enum$ordinal){
  Enum_0.call(this, enum$name, enum$ordinal);
  $$init_725();
}

function valueOf_26(name_0){
  $clinit_GenericDragEventHandler$DragAndDropFeature();
  return valueOf(($clinit_GenericDragEventHandler$DragAndDropFeature$Map() , $MAP_18), name_0);
}

function values_19(){
  $clinit_GenericDragEventHandler$DragAndDropFeature();
  return $VALUES_18;
}

defineSeed(867, 134, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$GenericDragEventHandler$DragAndDropFeature]), GenericDragEventHandler$DragAndDropFeature_0);
var $VALUES_18, MOVE, RESIZE;
function $clinit_GenericDragEventHandler$DragAndDropFeature$Map(){
  $clinit_GenericDragEventHandler$DragAndDropFeature$Map = nullMethod;
  $MAP_18 = createValueOfMap(($clinit_GenericDragEventHandler$DragAndDropFeature() , $VALUES_18));
}

var $MAP_18;
function addMoveCapability(movable){
  var handler;
  handler = new GenericDragEventHandler_0(new MoveCapability$DragMoveAction_0(movable));
  $applyTo(handler, movable);
}

function $$init_726(){
}

function MoveCapability$DragMoveAction_0(movable){
  GenericDragEventHandler$DragAction_0.call(this, movable);
  $$init_726();
}

defineSeed(870, 866, {}, MoveCapability$DragMoveAction_0);
_.getFeature = function getFeature(){
  return $clinit_GenericDragEventHandler$DragAndDropFeature() , MOVE;
}
;
_.onDrag = function onDrag(x_0, y_0, dragStartX, dragStartY){
  dynamicCast($getDraggable(this), Q$MoveCapability$Movable).setPosition(this.originalLeft + (x_0 - dragStartX), this.originalTop + (y_0 - dragStartY));
}
;
_.onStartDrag = function onStartDrag(){
  this.originalLeft = dynamicCast($getDraggable(this), Q$MoveCapability$Movable).getAbsoluteLeft_0();
  this.originalTop = dynamicCast($getDraggable(this), Q$MoveCapability$Movable).getAbsoluteTop_0();
}
;
_.originalLeft = 0;
_.originalTop = 0;
function addResizeCapability(resizable, minWidth, minHeight){
  var handler;
  handler = new GenericDragEventHandler_0(new ResizeCapability$DragResizeAction_0(resizable, minWidth, minHeight));
  $applyTo(handler, resizable);
}

function $$init_727(){
}

function ResizeCapability$DragResizeAction_0(resizable, minWidth, minHeight){
  GenericDragEventHandler$DragAction_0.call(this, resizable);
  $$init_727();
  this.minWidth = minWidth;
  this.minHeight = minHeight;
}

defineSeed(872, 866, {}, ResizeCapability$DragResizeAction_0);
_.getFeature = function getFeature_0(){
  return $clinit_GenericDragEventHandler$DragAndDropFeature() , RESIZE;
}
;
_.onDrag = function onDrag_0(x_0, y_0, dragStartX, dragStartY){
  var deltaX, deltaY, newHeight, newWidth;
  deltaX = x_0 - dragStartX;
  deltaY = y_0 - dragStartY;
  newWidth = this.originalWidth + deltaX;
  newHeight = this.originalHeight + deltaY;
  dynamicCast($getDraggable(this), Q$ResizeCapability$Resizable).setDimensions(newWidth >= this.minWidth?newWidth:this.minWidth, newHeight >= this.minHeight?newHeight:this.minHeight);
}
;
_.onStartDrag = function onStartDrag_0(){
  this.originalWidth = dynamicCast($getDraggable(this), Q$ResizeCapability$Resizable).getAbsoluteWidth();
  this.originalHeight = dynamicCast($getDraggable(this), Q$ResizeCapability$Resizable).getAbsoluteHeight();
}
;
_.minHeight = 0;
_.minWidth = 0;
_.originalHeight = 0;
_.originalWidth = 0;
var $entry = registerEntry();
function gwtOnLoad(errFn, modName, modBase, softPermutationId){
  $moduleName = modName;
  $moduleBase = modBase;
  if (errFn)
    try {
      $entry(init_0)();
    }
     catch (e) {
      errFn(modName);
    }
   else {
    $entry(init_0)();
  }
}

var Ljava_lang_Object_2_classLit = createForClass('java.lang.', 'Object', 1, null), Lcom_google_gwt_core_client_Scheduler_2_classLit = createForClass('com.google.gwt.core.client.', 'Scheduler', 93, Ljava_lang_Object_2_classLit), Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptObject$', 88, Ljava_lang_Object_2_classLit), Ljava_lang_Throwable_2_classLit = createForClass('java.lang.', 'Throwable', 87, Ljava_lang_Object_2_classLit), Ljava_lang_Exception_2_classLit = createForClass('java.lang.', 'Exception', 86, Ljava_lang_Throwable_2_classLit), Ljava_lang_RuntimeException_2_classLit = createForClass('java.lang.', 'RuntimeException', 85, Ljava_lang_Exception_2_classLit), Ljava_lang_StackTraceElement_2_classLit = createForClass('java.lang.', 'StackTraceElement', 516, Ljava_lang_Object_2_classLit), _3Ljava_lang_StackTraceElement_2_classLit = createForArray('[Ljava.lang.', 'StackTraceElement;', 878, Ljava_lang_StackTraceElement_2_classLit), Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit = createForClass('com.google.gwt.lang.', 'LongLibBase$LongEmul', 276, Ljava_lang_Object_2_classLit), _3Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit = createForArray('[Lcom.google.gwt.lang.', 'LongLibBase$LongEmul;', 879, Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit), I_classLit = createForPrimitive('', 'int', ' I'), _3I_classLit = createForArray('', '[I', 880, I_classLit), Lcom_google_gwt_lang_SeedUtil_2_classLit = createForClass('com.google.gwt.lang.', 'SeedUtil', 277, Ljava_lang_Object_2_classLit), Lcom_google_gwt_logging_client_LogConfiguration_2_classLit = createForClass('com.google.gwt.logging.client.', 'LogConfiguration', 293, Ljava_lang_Object_2_classLit), Lcom_google_gwt_logging_client_LogConfiguration$LogConfigurationImplRegular_2_classLit = createForClass('com.google.gwt.logging.client.', 'LogConfiguration$LogConfigurationImplRegular', 295, Ljava_lang_Object_2_classLit), Lcom_google_gwt_logging_client_LogConfiguration$1_2_classLit = createForClass('com.google.gwt.logging.client.', 'LogConfiguration$1', 294, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_DocumentModeAsserter_2_classLit = createForClass('com.google.gwt.user.client.', 'DocumentModeAsserter', 324, Ljava_lang_Object_2_classLit), Ljava_lang_Enum_2_classLit = createForClass('java.lang.', 'Enum', 134, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_DocumentModeAsserter$Severity_2_classLit = createForEnum('com.google.gwt.user.client.', 'DocumentModeAsserter$Severity', 325, Ljava_lang_Enum_2_classLit, values_8, valueOf_8), _3Lcom_google_gwt_user_client_DocumentModeAsserter$Severity_2_classLit = createForArray('[Lcom.google.gwt.user.client.', 'DocumentModeAsserter$Severity;', 881, Lcom_google_gwt_user_client_DocumentModeAsserter$Severity_2_classLit), Lcom_google_gwt_useragent_client_UserAgentAsserter_2_classLit = createForClass('com.google.gwt.useragent.client.', 'UserAgentAsserter', 454, Ljava_lang_Object_2_classLit), Ljava_lang_Error_2_classLit = createForClass('java.lang.', 'Error', 498, Ljava_lang_Throwable_2_classLit), Ljava_lang_AssertionError_2_classLit = createForClass('java.lang.', 'AssertionError', 497, Ljava_lang_Error_2_classLit), Z_classLit = createForPrimitive('', 'boolean', ' Z'), Ljava_lang_Boolean_2_classLit = createForClass('java.lang.', 'Boolean', 499, Ljava_lang_Object_2_classLit), Ljava_lang_Number_2_classLit = createForClass('java.lang.', 'Number', 504, Ljava_lang_Object_2_classLit), C_classLit = createForPrimitive('', 'char', ' C'), _3C_classLit = createForArray('', '[C', 882, C_classLit), J_classLit = createForPrimitive('', 'long', ' J'), _3J_classLit = createForArray('', '[J', 883, J_classLit), Ljava_lang_Character_2_classLit = createForClass('java.lang.', 'Character', null, Ljava_lang_Object_2_classLit), Ljava_lang_Class_2_classLit = createForClass('java.lang.', 'Class', 501, Ljava_lang_Object_2_classLit), D_classLit = createForPrimitive('', 'double', ' D'), _3D_classLit = createForArray('', '[D', 884, D_classLit), Ljava_lang_Double_2_classLit = createForClass('java.lang.', 'Double', 503, Ljava_lang_Number_2_classLit), Ljava_lang_Integer_2_classLit = createForClass('java.lang.', 'Integer', 508, Ljava_lang_Number_2_classLit), _3Ljava_lang_Integer_2_classLit = createForArray('[Ljava.lang.', 'Integer;', 885, Ljava_lang_Integer_2_classLit), Ljava_lang_String_2_classLit = createForClass('java.lang.', 'String', 2, Ljava_lang_Object_2_classLit), _3Ljava_lang_String_2_classLit = createForArray('[Ljava.lang.', 'String;', 877, Ljava_lang_String_2_classLit), Ljava_lang_String$1_2_classLit = createForClass('java.lang.', 'String$1', 517, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_Crux_2_classLit = createForClass('org.cruxframework.crux.core.client.', 'Crux', 572, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_Crux$1_2_classLit = createForClass('org.cruxframework.crux.core.client.', 'Crux$1', 573, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_Timer_2_classLit = createForClass('com.google.gwt.user.client.', 'Timer', 10, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_Crux$2_2_classLit = createForClass('org.cruxframework.crux.core.client.', 'Crux$2', 574, Lcom_google_gwt_user_client_Timer_2_classLit), Lorg_cruxframework_crux_tools_codeserver_client_CodeServerNotifier_2_classLit = createForClass('org.cruxframework.crux.tools.codeserver.client.', 'CodeServerNotifier', 779, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_tools_codeserver_client_CodeServerNotifier$1_2_classLit = createForClass('org.cruxframework.crux.tools.codeserver.client.', 'CodeServerNotifier$1', 780, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_tools_codeserver_client_CodeServerNotifier$2_2_classLit = createForClass('org.cruxframework.crux.tools.codeserver.client.', 'CodeServerNotifier$2', 781, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_tools_codeserver_client_CodeServerNotifier$3_2_classLit = createForClass('org.cruxframework.crux.tools.codeserver.client.', 'CodeServerNotifier$3', 782, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_tools_codeserver_client_CodeServerNotifier$4_2_classLit = createForClass('org.cruxframework.crux.tools.codeserver.client.', 'CodeServerNotifier$4', 783, Ljava_lang_Object_2_classLit), Ljava_lang_ClassCastException_2_classLit = createForClass('java.lang.', 'ClassCastException', 502, Ljava_lang_RuntimeException_2_classLit), Lcom_google_gwt_core_client_JavaScriptException_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptException', 84, Ljava_lang_RuntimeException_2_classLit), Ljava_lang_StringBuilder_2_classLit = createForClass('java.lang.', 'StringBuilder', 520, Ljava_lang_Object_2_classLit), Lcom_google_gwt_core_client_impl_UnloadSupport_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'UnloadSupport', 107, Ljava_lang_Object_2_classLit), Ljava_lang_ArrayStoreException_2_classLit = createForClass('java.lang.', 'ArrayStoreException', 496, Ljava_lang_RuntimeException_2_classLit), Lcom_google_gwt_useragent_client_UserAgentImplSafari_2_classLit = createForClass('com.google.gwt.useragent.client.', 'UserAgentImplSafari', 455, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_DocumentModeAsserter_1DocumentModeProperty_2_classLit = createForClass('com.google.gwt.user.client.', 'DocumentModeAsserter_DocumentModeProperty', 327, Ljava_lang_Object_2_classLit), Ljava_util_logging_Logger_2_classLit = createForClass('java.util.logging.', 'Logger', 302, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_websocket_WebSocket_2_classLit = createForClass('org.cruxframework.crux.core.client.websocket.', 'WebSocket', 750, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_websocket_WebSocket$1_2_classLit = createForClass('org.cruxframework.crux.core.client.websocket.', 'WebSocket$1', 751, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_websocket_WebSocket$2_2_classLit = createForClass('org.cruxframework.crux.core.client.websocket.', 'WebSocket$2', 752, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_websocket_WebSocket$3_2_classLit = createForClass('org.cruxframework.crux.core.client.websocket.', 'WebSocket$3', 753, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_websocket_WebSocket$4_2_classLit = createForClass('org.cruxframework.crux.core.client.websocket.', 'WebSocket$4', 754, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_UIObject_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'UIObject', 356, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Widget', 355, Lcom_google_gwt_user_client_ui_UIObject_2_classLit), Lcom_google_gwt_user_client_ui_Panel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Panel', 354, Lcom_google_gwt_user_client_ui_Widget_2_classLit), Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel', 368, Lcom_google_gwt_user_client_ui_Panel_2_classLit), Lcom_google_gwt_user_client_ui_PopupPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel', 367, Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit), Lcom_google_gwt_user_client_ui_DecoratedPopupPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DecoratedPopupPanel', 366, Lcom_google_gwt_user_client_ui_PopupPanel_2_classLit), Lcom_google_gwt_user_client_ui_DialogBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DialogBox', 370, Lcom_google_gwt_user_client_ui_DecoratedPopupPanel_2_classLit), Lcom_google_gwt_user_client_ui_LabelBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LabelBase', 375, Lcom_google_gwt_user_client_ui_Widget_2_classLit), Lcom_google_gwt_user_client_ui_Label_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Label', 374, Lcom_google_gwt_user_client_ui_LabelBase_2_classLit), Lcom_google_gwt_user_client_ui_HTML_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTML', 373, Lcom_google_gwt_user_client_ui_Label_2_classLit), Lcom_google_gwt_user_client_ui_DialogBox$CaptionImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DialogBox$CaptionImpl', 372, Lcom_google_gwt_user_client_ui_HTML_2_classLit), Lcom_google_gwt_user_client_ui_DialogBox$MouseHandler_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DialogBox$MouseHandler', 376, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_DialogBox$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DialogBox$1', 371, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_PopupPanel$AnimationType_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'PopupPanel$AnimationType', 422, Ljava_lang_Enum_2_classLit, values_9, valueOf_9), _3Lcom_google_gwt_user_client_ui_PopupPanel$AnimationType_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'PopupPanel$AnimationType;', 886, Lcom_google_gwt_user_client_ui_PopupPanel$AnimationType_2_classLit), Lcom_google_gwt_animation_client_Animation_2_classLit = createForClass('com.google.gwt.animation.client.', 'Animation', 3, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_PopupPanel$ResizeAnimation_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$ResizeAnimation', 424, Lcom_google_gwt_animation_client_Animation_2_classLit), Lcom_google_gwt_user_client_ui_PopupPanel$ResizeAnimation$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$ResizeAnimation$1', 425, Lcom_google_gwt_user_client_Timer_2_classLit), Lcom_google_gwt_user_client_ui_PopupPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$1', 419, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_PopupPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$3', 420, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_PopupPanel$4_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$4', 421, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_SimplePanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel$1', 432, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_UIObject$DebugIdImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'UIObject$DebugIdImpl', 435, Ljava_lang_Object_2_classLit), Lcom_google_gwt_animation_client_Animation$1_2_classLit = createForClass('com.google.gwt.animation.client.', 'Animation$1', 4, Ljava_lang_Object_2_classLit), Lcom_google_gwt_animation_client_AnimationScheduler_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationScheduler', 5, Ljava_lang_Object_2_classLit), Lcom_google_gwt_animation_client_AnimationScheduler$AnimationHandle_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationScheduler$AnimationHandle', 6, Ljava_lang_Object_2_classLit), Lcom_google_web_bindery_event_shared_Event_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event', 184, Ljava_lang_Object_2_classLit), Lcom_google_gwt_event_shared_GwtEvent_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent', 183, Lcom_google_web_bindery_event_shared_Event_2_classLit), Lcom_google_gwt_user_client_Event$NativePreviewEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Event$NativePreviewEvent', 330, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lcom_google_web_bindery_event_shared_Event$Type_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event$Type', 191, Ljava_lang_Object_2_classLit), Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent$Type', 190, Lcom_google_web_bindery_event_shared_Event$Type_2_classLit), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$AutoHorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$AutoHorizontalAlignmentConstant', 394, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$HorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$HorizontalAlignmentConstant', 395, Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$AutoHorizontalAlignmentConstant_2_classLit), Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForEnum('com.google.gwt.i18n.client.', 'HasDirection$Direction', 240, Ljava_lang_Enum_2_classLit, values_7, valueOf_7), _3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForArray('[Lcom.google.gwt.i18n.client.', 'HasDirection$Direction;', 887, Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit), Lcom_google_gwt_user_client_Window$ClosingEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$ClosingEvent', 336, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lcom_google_gwt_event_shared_HandlerManager_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager', 216, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_Window$WindowHandlers_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$WindowHandlers', 339, Lcom_google_gwt_event_shared_HandlerManager_2_classLit), Lcom_google_gwt_user_client_Window$1_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$1', 334, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_Window$2_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$2', 335, Ljava_lang_Object_2_classLit), Lcom_google_web_bindery_event_shared_EventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'EventBus', 219, Ljava_lang_Object_2_classLit), Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus', 218, Lcom_google_web_bindery_event_shared_EventBus_2_classLit), Lcom_google_gwt_event_shared_HandlerManager$Bus_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager$Bus', 217, Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit), Lcom_google_web_bindery_event_shared_SimpleEventBus$1_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$1', 457, Ljava_lang_Object_2_classLit), Lcom_google_web_bindery_event_shared_SimpleEventBus$2_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$2', 458, Ljava_lang_Object_2_classLit), Lcom_google_web_bindery_event_shared_SimpleEventBus$3_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$3', 459, Ljava_lang_Object_2_classLit), Ljava_lang_NullPointerException_2_classLit = createForClass('java.lang.', 'NullPointerException', 512, Ljava_lang_RuntimeException_2_classLit), Ljava_lang_IllegalArgumentException_2_classLit = createForClass('java.lang.', 'IllegalArgumentException', 505, Ljava_lang_RuntimeException_2_classLit), Ljava_lang_ArithmeticException_2_classLit = createForClass('java.lang.', 'ArithmeticException', 495, Ljava_lang_RuntimeException_2_classLit), Lcom_google_gwt_core_client_impl_StringBufferImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImpl', 103, Ljava_lang_Object_2_classLit), Lcom_google_gwt_logging_impl_LoggerImplRegular_2_classLit = createForClass('com.google.gwt.logging.impl.', 'LoggerImplRegular', 300, Ljava_lang_Object_2_classLit), Ljava_util_logging_Handler_2_classLit = createForClass('java.util.logging.', 'Handler', 281, Ljava_lang_Object_2_classLit), _3Ljava_util_logging_Handler_2_classLit = createForArray('[Ljava.util.logging.', 'Handler;', 888, Ljava_util_logging_Handler_2_classLit), Ljava_lang_IllegalStateException_2_classLit = createForClass('java.lang.', 'IllegalStateException', 506, Ljava_lang_RuntimeException_2_classLit), Ljava_util_logging_Level_2_classLit = createForClass('java.util.logging.', 'Level', 558, Ljava_lang_Object_2_classLit), Ljava_util_logging_Level$LevelAll_2_classLit = createForClass('java.util.logging.', 'Level$LevelAll', 559, Ljava_util_logging_Level_2_classLit), Ljava_util_logging_Level$LevelConfig_2_classLit = createForClass('java.util.logging.', 'Level$LevelConfig', 560, Ljava_util_logging_Level_2_classLit), Ljava_util_logging_Level$LevelFine_2_classLit = createForClass('java.util.logging.', 'Level$LevelFine', 561, Ljava_util_logging_Level_2_classLit), Ljava_util_logging_Level$LevelFiner_2_classLit = createForClass('java.util.logging.', 'Level$LevelFiner', 562, Ljava_util_logging_Level_2_classLit), Ljava_util_logging_Level$LevelFinest_2_classLit = createForClass('java.util.logging.', 'Level$LevelFinest', 563, Ljava_util_logging_Level_2_classLit), Ljava_util_logging_Level$LevelInfo_2_classLit = createForClass('java.util.logging.', 'Level$LevelInfo', 564, Ljava_util_logging_Level_2_classLit), Ljava_util_logging_Level$LevelOff_2_classLit = createForClass('java.util.logging.', 'Level$LevelOff', 565, Ljava_util_logging_Level_2_classLit), Ljava_util_logging_Level$LevelSevere_2_classLit = createForClass('java.util.logging.', 'Level$LevelSevere', 566, Ljava_util_logging_Level_2_classLit), Ljava_util_logging_Level$LevelWarning_2_classLit = createForClass('java.util.logging.', 'Level$LevelWarning', 567, Ljava_util_logging_Level_2_classLit), Lorg_cruxframework_crux_core_client_ClientMessages_1_2_classLit = createForClass('org.cruxframework.crux.core.client.', 'ClientMessages_', 571, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_config_CruxClientConfig_1Impl_2_classLit = createForClass('org.cruxframework.crux.core.client.config.', 'CruxClientConfig_Impl', 582, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_errors_ErrorHandlerImpl_2_classLit = createForClass('org.cruxframework.crux.core.client.errors.', 'ErrorHandlerImpl', 613, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_ScreenFactory_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.', 'ScreenFactory', 679, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_Screen_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.', 'Screen', 677, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_Screen$1_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.', 'Screen$1', 678, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_tools_codeserver_client_common_CodeServerResources_1default_1StaticClientBundleGenerator_2_classLit = createForClass('org.cruxframework.crux.tools.codeserver.client.common.', 'CodeServerResources_default_StaticClientBundleGenerator', 787, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_tools_codeserver_client_common_CodeServerResources_1default_1StaticClientBundleGenerator$1_2_classLit = createForClass('org.cruxframework.crux.tools.codeserver.client.common.', 'CodeServerResources_default_StaticClientBundleGenerator$1', 788, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_DirectionalTextHelper_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DirectionalTextHelper', 377, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_collection_FastList_2_classLit = createForClass('org.cruxframework.crux.core.client.collection.', 'FastList', 579, Ljava_lang_Object_2_classLit), Lcom_google_gwt_core_client_impl_StackTraceCreator$Collector_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StackTraceCreator$Collector', 100, Ljava_lang_Object_2_classLit), Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorMoz_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StackTraceCreator$CollectorMoz', 102, Lcom_google_gwt_core_client_impl_StackTraceCreator$Collector_2_classLit), Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorChrome_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StackTraceCreator$CollectorChrome', 101, Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorMoz_2_classLit), Lcom_google_gwt_core_client_impl_StringBufferImplAppend_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImplAppend', 104, Lcom_google_gwt_core_client_impl_StringBufferImpl_2_classLit), Lcom_google_gwt_core_client_Duration_2_classLit = createForClass('com.google.gwt.core.client.', 'Duration', 82, Ljava_lang_Object_2_classLit), Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl', 95, Lcom_google_gwt_core_client_Scheduler_2_classLit), Lcom_google_gwt_core_client_impl_SchedulerImpl$Flusher_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl$Flusher', 96, Ljava_lang_Object_2_classLit), Lcom_google_gwt_core_client_impl_SchedulerImpl$Rescuer_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl$Rescuer', 97, Ljava_lang_Object_2_classLit), Lcom_google_gwt_core_shared_impl_JsLogger_2_classLit = createForClass('com.google.gwt.core.shared.impl.', 'JsLogger', 106, Ljava_lang_Object_2_classLit), Lcom_google_gwt_core_client_impl_SuperDevModeLogger_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SuperDevModeLogger', 105, Lcom_google_gwt_core_shared_impl_JsLogger_2_classLit), _3Ljava_lang_Object_2_classLit = createForArray('[Ljava.lang.', 'Object;', 876, Ljava_lang_Object_2_classLit), Ljava_util_AbstractCollection_2_classLit = createForClass('java.util.', 'AbstractCollection', 264, Ljava_lang_Object_2_classLit), Ljava_util_AbstractList_2_classLit = createForClass('java.util.', 'AbstractList', 403, Ljava_util_AbstractCollection_2_classLit), Ljava_util_ArrayList_2_classLit = createForClass('java.util.', 'ArrayList', 402, Ljava_util_AbstractList_2_classLit), Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$IteratorImpl', 529, Ljava_lang_Object_2_classLit), Ljava_util_AbstractList$ListIteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$ListIteratorImpl', 530, Ljava_util_AbstractList$IteratorImpl_2_classLit), Lcom_google_gwt_logging_impl_LevelImplRegular_2_classLit = createForClass('com.google.gwt.logging.impl.', 'LevelImplRegular', 299, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_BaseListenerWrapper_2_classLit = createForClass('com.google.gwt.user.client.', 'BaseListenerWrapper', 322, Ljava_lang_Object_2_classLit), Ljava_lang_NumberFormatException_2_classLit = createForClass('java.lang.', 'NumberFormatException', 515, Ljava_lang_IllegalArgumentException_2_classLit), Ljava_lang_UnsupportedOperationException_2_classLit = createForClass('java.lang.', 'UnsupportedOperationException', 521, Ljava_lang_RuntimeException_2_classLit), Lcom_google_gwt_user_client_ui_impl_PopupImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.impl.', 'PopupImpl', 452, Ljava_lang_Object_2_classLit), Lcom_google_gwt_dom_client_Style$Unit_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit', 163, Ljava_lang_Enum_2_classLit, values_5, valueOf_5), _3Lcom_google_gwt_dom_client_Style$Unit_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Unit;', 889, Lcom_google_gwt_dom_client_Style$Unit_2_classLit), Lcom_google_gwt_dom_client_Style$Display_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display', 133, Ljava_lang_Enum_2_classLit, values_0, valueOf_0), _3Lcom_google_gwt_dom_client_Style$Display_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Display;', 890, Lcom_google_gwt_dom_client_Style$Display_2_classLit), Lcom_google_gwt_dom_client_Style$Float_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Float', 140, Ljava_lang_Enum_2_classLit, values_1, valueOf_1), _3Lcom_google_gwt_dom_client_Style$Float_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Float;', 891, Lcom_google_gwt_dom_client_Style$Float_2_classLit), Lcom_google_gwt_dom_client_Style$Overflow_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow', 145, Ljava_lang_Enum_2_classLit, values_2, valueOf_2), _3Lcom_google_gwt_dom_client_Style$Overflow_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Overflow;', 892, Lcom_google_gwt_dom_client_Style$Overflow_2_classLit), Lcom_google_gwt_dom_client_Style$Position_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position', 151, Ljava_lang_Enum_2_classLit, values_3, valueOf_3), _3Lcom_google_gwt_dom_client_Style$Position_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Position;', 893, Lcom_google_gwt_dom_client_Style$Position_2_classLit), Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign', 157, Ljava_lang_Enum_2_classLit, values_4, valueOf_4), _3Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$TextAlign;', 894, Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit), Lcom_google_gwt_dom_client_Style$Visibility_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Visibility', 174, Ljava_lang_Enum_2_classLit, values_6, valueOf_6), _3Lcom_google_gwt_dom_client_Style$Visibility_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Visibility;', 895, Lcom_google_gwt_dom_client_Style$Visibility_2_classLit), Lcom_google_gwt_dom_client_Style$Unit$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$1', 164, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Unit$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$2', 165, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Unit$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$3', 166, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Unit$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$4', 167, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Unit$5_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$5', 168, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Unit$6_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$6', 169, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Unit$7_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$7', 170, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Unit$8_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$8', 171, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Unit$9_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$9', 172, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Display$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$1', 135, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Display$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$2', 136, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Display$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$3', 137, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Display$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$4', 138, Lcom_google_gwt_dom_client_Style$Display_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Float$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Float$1', 141, Lcom_google_gwt_dom_client_Style$Float_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Float$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Float$2', 142, Lcom_google_gwt_dom_client_Style$Float_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Float$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Float$3', 143, Lcom_google_gwt_dom_client_Style$Float_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Overflow$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$1', 146, Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Overflow$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$2', 147, Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Overflow$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$3', 148, Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Overflow$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$4', 149, Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Position$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$1', 152, Lcom_google_gwt_dom_client_Style$Position_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Position$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$2', 153, Lcom_google_gwt_dom_client_Style$Position_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Position$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$3', 154, Lcom_google_gwt_dom_client_Style$Position_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Position$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$4', 155, Lcom_google_gwt_dom_client_Style$Position_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$TextAlign$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$1', 158, Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$TextAlign$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$2', 159, Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$TextAlign$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$3', 160, Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$TextAlign$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$4', 161, Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Visibility$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Visibility$1', 175, Lcom_google_gwt_dom_client_Style$Visibility_2_classLit, null, null), Lcom_google_gwt_dom_client_Style$Visibility$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Visibility$2', 176, Lcom_google_gwt_dom_client_Style$Visibility_2_classLit, null, null), Lcom_google_gwt_i18n_client_LocaleInfo_2_classLit = createForClass('com.google.gwt.i18n.client.', 'LocaleInfo', 242, Ljava_lang_Object_2_classLit), Lcom_google_gwt_i18n_shared_DirectionEstimator_2_classLit = createForClass('com.google.gwt.i18n.shared.', 'DirectionEstimator', 253, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_DecoratorPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DecoratorPanel', 369, Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit), Ljava_util_logging_LogManager_2_classLit = createForClass('java.util.logging.', 'LogManager', 568, Ljava_lang_Object_2_classLit), Ljava_util_logging_LogManager$RootLogger_2_classLit = createForClass('java.util.logging.', 'LogManager$RootLogger', 569, Ljava_util_logging_Logger_2_classLit), Lcom_google_gwt_logging_impl_LoggerWithExposedConstructor_2_classLit = createForClass('com.google.gwt.logging.impl.', 'LoggerWithExposedConstructor', 301, Ljava_util_logging_Logger_2_classLit), Lcom_google_gwt_user_client_impl_DOMImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl', 340, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_impl_DOMImpl$1_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl$1', 341, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_impl_DOMImplStandard_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplStandard', 342, Lcom_google_gwt_user_client_impl_DOMImpl_2_classLit), Lcom_google_gwt_user_client_impl_DOMImplStandardBase_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplStandardBase', 343, Lcom_google_gwt_user_client_impl_DOMImplStandard_2_classLit), Lcom_google_gwt_user_client_impl_DOMImplWebkit_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplWebkit', 344, Lcom_google_gwt_user_client_impl_DOMImplStandardBase_2_classLit), Lcom_google_gwt_dom_client_DOMImpl_2_classLit = createForClass('com.google.gwt.dom.client.', 'DOMImpl', 115, Ljava_lang_Object_2_classLit), Lcom_google_gwt_i18n_client_impl_LocaleInfoImpl_2_classLit = createForClass('com.google.gwt.i18n.client.impl.', 'LocaleInfoImpl', 244, Ljava_lang_Object_2_classLit), Lcom_google_gwt_i18n_client_impl_LocaleInfoImpl_1shared_2_classLit = createForClass('com.google.gwt.i18n.client.impl.', 'LocaleInfoImpl_shared', 246, Lcom_google_gwt_i18n_client_impl_LocaleInfoImpl_2_classLit), Lcom_google_gwt_i18n_client_impl_LocaleInfoImpl_1_2_classLit = createForClass('com.google.gwt.i18n.client.impl.', 'LocaleInfoImpl_', 245, Lcom_google_gwt_i18n_client_impl_LocaleInfoImpl_1shared_2_classLit), Lcom_google_gwt_i18n_client_impl_CldrImpl_2_classLit = createForClass('com.google.gwt.i18n.client.impl.', 'CldrImpl', 243, Ljava_lang_Object_2_classLit), Lcom_google_gwt_i18n_shared_WordCountDirectionEstimator_2_classLit = createForClass('com.google.gwt.i18n.shared.', 'WordCountDirectionEstimator', 254, Lcom_google_gwt_i18n_shared_DirectionEstimator_2_classLit), Lcom_google_gwt_i18n_shared_BidiUtils_2_classLit = createForClass('com.google.gwt.i18n.shared.', 'BidiUtils', 252, Ljava_lang_Object_2_classLit), Lcom_google_gwt_i18n_shared_BidiFormatterBase_2_classLit = createForClass('com.google.gwt.i18n.shared.', 'BidiFormatterBase', 248, Ljava_lang_Object_2_classLit), Lcom_google_gwt_i18n_shared_BidiFormatter_2_classLit = createForClass('com.google.gwt.i18n.shared.', 'BidiFormatter', 247, Lcom_google_gwt_i18n_shared_BidiFormatterBase_2_classLit), Lcom_google_gwt_i18n_shared_BidiFormatterBase$Factory_2_classLit = createForClass('com.google.gwt.i18n.shared.', 'BidiFormatterBase$Factory', 250, Ljava_lang_Object_2_classLit), Lcom_google_gwt_i18n_shared_BidiFormatter$Factory_2_classLit = createForClass('com.google.gwt.i18n.shared.', 'BidiFormatter$Factory', 249, Lcom_google_gwt_i18n_shared_BidiFormatterBase$Factory_2_classLit), _3Lcom_google_gwt_i18n_shared_BidiFormatterBase_2_classLit = createForArray('[Lcom.google.gwt.i18n.shared.', 'BidiFormatterBase;', 896, Lcom_google_gwt_i18n_shared_BidiFormatterBase_2_classLit), Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ComplexPanel', 353, Lcom_google_gwt_user_client_ui_Panel_2_classLit), Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AbsolutePanel', 352, Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit), Lcom_google_gwt_user_client_ui_RootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel', 427, Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit), Lcom_google_gwt_user_client_ui_RootPanel$DefaultRootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$DefaultRootPanel', 431, Lcom_google_gwt_user_client_ui_RootPanel_2_classLit), Lcom_google_gwt_user_client_ui_RootPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$1', 428, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_RootPanel$2_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$2', 429, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_RootPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$3', 430, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_ComplexPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ComplexPanel$1', 364, Ljava_lang_Object_2_classLit), Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'UmbrellaException', 222, Ljava_lang_RuntimeException_2_classLit), Lcom_google_gwt_event_shared_UmbrellaException_2_classLit = createForClass('com.google.gwt.event.shared.', 'UmbrellaException', 221, Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit), Lcom_google_gwt_user_client_ui_AttachDetachException_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException', 358, Lcom_google_gwt_event_shared_UmbrellaException_2_classLit), Lcom_google_gwt_user_client_ui_AttachDetachException$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$1', 359, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_AttachDetachException$2_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$2', 360, Ljava_lang_Object_2_classLit), Ljava_util_logging_LogRecord_2_classLit = createForClass('java.util.logging.', 'LogRecord', 570, Ljava_lang_Object_2_classLit), Lcom_google_gwt_logging_client_DefaultLevel$Fine_2_classLit = createForClass('com.google.gwt.logging.client.', 'DefaultLevel$Fine', 282, Ljava_lang_Object_2_classLit), Lcom_google_gwt_logging_client_ConsoleLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'ConsoleLogHandler', 280, Ljava_util_logging_Handler_2_classLit), Lcom_google_gwt_logging_client_DevelopmentModeLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'DevelopmentModeLogHandler', 283, Ljava_util_logging_Handler_2_classLit), Lcom_google_gwt_logging_client_NullLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'NullLogHandler', 296, Ljava_util_logging_Handler_2_classLit), Lcom_google_gwt_logging_client_NullLoggingPopup_2_classLit = createForClass('com.google.gwt.logging.client.', 'NullLoggingPopup', 297, Ljava_lang_Object_2_classLit), Lcom_google_gwt_logging_client_HasWidgetsLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'HasWidgetsLogHandler', 284, Ljava_util_logging_Handler_2_classLit), Ljava_lang_StringBuffer_2_classLit = createForClass('java.lang.', 'StringBuffer', 519, Ljava_lang_Object_2_classLit), Ljava_util_AbstractMap_2_classLit = createForClass('java.util.', 'AbstractMap', 523, Ljava_lang_Object_2_classLit), Ljava_util_AbstractHashMap_2_classLit = createForClass('java.util.', 'AbstractHashMap', 522, Ljava_util_AbstractMap_2_classLit), Ljava_util_AbstractSet_2_classLit = createForClass('java.util.', 'AbstractSet', 263, Ljava_util_AbstractCollection_2_classLit), Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySet', 524, Ljava_util_AbstractSet_2_classLit), Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySetIterator', 525, Ljava_lang_Object_2_classLit), Ljava_util_AbstractMapEntry_2_classLit = createForClass('java.util.', 'AbstractMapEntry', 527, Ljava_lang_Object_2_classLit), Ljava_util_AbstractHashMap$MapEntryNull_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryNull', 526, Ljava_util_AbstractMapEntry_2_classLit), Ljava_util_AbstractHashMap$MapEntryString_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryString', 528, Ljava_util_AbstractMapEntry_2_classLit), Ljava_util_AbstractMap$1_2_classLit = createForClass('java.util.', 'AbstractMap$1', 531, Ljava_util_AbstractSet_2_classLit), Ljava_util_AbstractMap$1$1_2_classLit = createForClass('java.util.', 'AbstractMap$1$1', 532, Ljava_lang_Object_2_classLit), Ljava_util_HashMap_2_classLit = createForClass('java.util.', 'HashMap', 553, Ljava_util_AbstractHashMap_2_classLit), Lcom_google_gwt_user_client_ui_Composite_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Composite', 365, Lcom_google_gwt_user_client_ui_Widget_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewContainer_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewContainer', 596, Lcom_google_gwt_user_client_ui_Composite_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ParameterizedViewContainer_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ParameterizedViewContainer', 595, Lorg_cruxframework_crux_core_client_screen_views_ViewContainer_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_SingleViewContainer_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'SingleViewContainer', 594, Lorg_cruxframework_crux_core_client_screen_views_ParameterizedViewContainer_2_classLit), Lorg_cruxframework_crux_core_client_screen_RootViewContainer_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.', 'RootViewContainer', 676, Lorg_cruxframework_crux_core_client_screen_views_SingleViewContainer_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewContainer$1_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewContainer$1', 687, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewContainer$2_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewContainer$2', 688, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewContainer$3_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewContainer$3', 689, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewContainer$4_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewContainer$4', 690, Ljava_lang_Object_2_classLit), Lcom_google_gwt_event_logical_shared_AttachEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'AttachEvent', 210, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewFactory$CreateCallback$EmptyCallback_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewFactory$CreateCallback$EmptyCallback', 692, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_View_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'View', 682, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_View$7_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'View$7', 684, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_View$9_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'View$9', 685, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_View$10_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'View$10', 683, Ljava_lang_Object_2_classLit), Lcom_google_gwt_dom_client_DOMImplStandard_2_classLit = createForClass('com.google.gwt.dom.client.', 'DOMImplStandard', 116, Lcom_google_gwt_dom_client_DOMImpl_2_classLit), Lcom_google_gwt_dom_client_DOMImplStandardBase_2_classLit = createForClass('com.google.gwt.dom.client.', 'DOMImplStandardBase', 117, Lcom_google_gwt_dom_client_DOMImplStandard_2_classLit), Lcom_google_gwt_dom_client_DOMImplWebkit_2_classLit = createForClass('com.google.gwt.dom.client.', 'DOMImplWebkit', 119, Lcom_google_gwt_dom_client_DOMImplStandardBase_2_classLit), Lcom_google_gwt_event_dom_client_DomEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent', 182, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lcom_google_gwt_event_dom_client_HumanInputEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'HumanInputEvent', 188, Lcom_google_gwt_event_dom_client_DomEvent_2_classLit), Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseEvent', 187, Lcom_google_gwt_event_dom_client_HumanInputEvent_2_classLit), Lcom_google_gwt_event_dom_client_MouseDownEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseDownEvent', 203, Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit), Lcom_google_gwt_event_dom_client_DomEvent$Type_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent$Type', 189, Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit), Lcom_google_gwt_event_dom_client_MouseUpEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseUpEvent', 207, Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit), Lcom_google_gwt_event_dom_client_MouseMoveEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseMoveEvent', 204, Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit), Lcom_google_gwt_event_dom_client_MouseOverEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseOverEvent', 206, Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit), Lcom_google_gwt_event_dom_client_MouseOutEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseOutEvent', 205, Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit), Ljava_util_HashSet_2_classLit = createForClass('java.util.', 'HashSet', 554, Ljava_util_AbstractSet_2_classLit), Ljava_util_Date_2_classLit = createForClass('java.util.', 'Date', 551, Ljava_lang_Object_2_classLit), Lcom_google_gwt_core_shared_SerializableThrowable_2_classLit = createForClass('com.google.gwt.core.shared.', 'SerializableThrowable', 109, Ljava_lang_Throwable_2_classLit), Ljava_util_logging_Formatter_2_classLit = createForClass('java.util.logging.', 'Formatter', 287, Ljava_lang_Object_2_classLit), Lcom_google_gwt_logging_impl_FormatterImpl_2_classLit = createForClass('com.google.gwt.logging.impl.', 'FormatterImpl', 286, Ljava_util_logging_Formatter_2_classLit), Lcom_google_gwt_logging_client_TextLogFormatter_2_classLit = createForClass('com.google.gwt.logging.client.', 'TextLogFormatter', 298, Lcom_google_gwt_logging_impl_FormatterImpl_2_classLit), Ljava_io_OutputStream_2_classLit = createForClass('java.io.', 'OutputStream', 292, Ljava_lang_Object_2_classLit), Ljava_io_FilterOutputStream_2_classLit = createForClass('java.io.', 'FilterOutputStream', 291, Ljava_io_OutputStream_2_classLit), Ljava_io_PrintStream_2_classLit = createForClass('java.io.', 'PrintStream', 290, Ljava_io_FilterOutputStream_2_classLit), Lcom_google_gwt_logging_impl_StackTracePrintStream_2_classLit = createForClass('com.google.gwt.logging.impl.', 'StackTracePrintStream', 289, Ljava_io_PrintStream_2_classLit), Lcom_google_gwt_logging_client_HtmlLogFormatter_2_classLit = createForClass('com.google.gwt.logging.client.', 'HtmlLogFormatter', 285, Lcom_google_gwt_logging_impl_FormatterImpl_2_classLit), Lcom_google_gwt_logging_client_HtmlLogFormatter$1_2_classLit = createForClass('com.google.gwt.logging.client.', 'HtmlLogFormatter$1', 288, Lcom_google_gwt_logging_impl_StackTracePrintStream_2_classLit), Lorg_cruxframework_crux_core_client_screen_URLRewriter_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.', 'URLRewriter', 680, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_impl_WindowImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'WindowImpl', 351, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_event_BaseEvent_2_classLit = createForClass('org.cruxframework.crux.core.client.event.', 'BaseEvent', 614, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_event_CruxEvent_2_classLit = createForClass('org.cruxframework.crux.core.client.event.', 'CruxEvent', 615, Lorg_cruxframework_crux_core_client_event_BaseEvent_2_classLit), Lorg_cruxframework_crux_core_client_websocket_SocketErrorEvent_2_classLit = createForClass('org.cruxframework.crux.core.client.websocket.', 'SocketErrorEvent', 747, Lorg_cruxframework_crux_core_client_event_CruxEvent_2_classLit), Lorg_cruxframework_crux_core_client_websocket_SocketOpenEvent_2_classLit = createForClass('org.cruxframework.crux.core.client.websocket.', 'SocketOpenEvent', 749, Lorg_cruxframework_crux_core_client_event_CruxEvent_2_classLit), Lorg_cruxframework_crux_core_client_websocket_SocketMessageEvent_2_classLit = createForClass('org.cruxframework.crux.core.client.websocket.', 'SocketMessageEvent', 748, Lorg_cruxframework_crux_core_client_event_CruxEvent_2_classLit), Lorg_cruxframework_crux_core_client_websocket_SocketCloseEvent_2_classLit = createForClass('org.cruxframework.crux.core.client.websocket.', 'SocketCloseEvent', 746, Lorg_cruxframework_crux_core_client_event_CruxEvent_2_classLit), Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass('java.lang.', 'IndexOutOfBoundsException', 507, Ljava_lang_RuntimeException_2_classLit), Lorg_cruxframework_crux_core_client_executor_BeginEndExecutor_2_classLit = createForClass('org.cruxframework.crux.core.client.executor.', 'BeginEndExecutor', 616, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewHandlers$ResizeBeginEndExecutor_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewHandlers$ResizeBeginEndExecutor', 704, Lorg_cruxframework_crux_core_client_executor_BeginEndExecutor_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewHandlers$1_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewHandlers$1', 696, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewHandlers$2_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewHandlers$2', 697, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewHandlers$3_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewHandlers$3', 698, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewHandlers$4_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewHandlers$4', 699, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewHandlers$5_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewHandlers$5', 700, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewHandlers$6_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewHandlers$6', 701, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewHandlers$7_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewHandlers$7', 702, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewHandlers$7$1_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewHandlers$7$1', 703, Lorg_cruxframework_crux_core_client_screen_views_ViewHandlers$ResizeBeginEndExecutor_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewHandlers$8_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewHandlers$8', 705, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_executor_BeginEndExecutor$1_2_classLit = createForClass('org.cruxframework.crux.core.client.executor.', 'BeginEndExecutor$1', 617, Lcom_google_gwt_user_client_Timer_2_classLit), Lcom_google_gwt_event_dom_client_PrivateMap_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'PrivateMap', 208, Ljava_lang_Object_2_classLit), Lcom_google_gwt_event_shared_LegacyHandlerWrapper_2_classLit = createForClass('com.google.gwt.event.shared.', 'LegacyHandlerWrapper', 220, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_tools_codeserver_client_CompilationMessage$CompilerOperation_2_classLit = createForEnum('org.cruxframework.crux.tools.codeserver.client.', 'CompilationMessage$CompilerOperation', 785, Ljava_lang_Enum_2_classLit, values_16, valueOf_23), _3Lorg_cruxframework_crux_tools_codeserver_client_CompilationMessage$CompilerOperation_2_classLit = createForArray('[Lorg.cruxframework.crux.tools.codeserver.client.', 'CompilationMessage$CompilerOperation;', 897, Lorg_cruxframework_crux_tools_codeserver_client_CompilationMessage$CompilerOperation_2_classLit), Ljava_util_Collections$EmptyList_2_classLit = createForClass('java.util.', 'Collections$EmptyList', 537, Ljava_util_AbstractList_2_classLit), Ljava_util_Collections$EmptySet_2_classLit = createForClass('java.util.', 'Collections$EmptySet', 539, Ljava_util_AbstractSet_2_classLit), Ljava_util_Collections$EmptyMap_2_classLit = createForClass('java.util.', 'Collections$EmptyMap', 538, Ljava_util_AbstractMap_2_classLit), Ljava_util_Collections$UnmodifiableCollection_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableCollection', 541, Ljava_lang_Object_2_classLit), Ljava_util_Collections$UnmodifiableList_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableList', 543, Ljava_util_Collections$UnmodifiableCollection_2_classLit), Ljava_util_Collections$UnmodifiableMap_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableMap', 545, Ljava_lang_Object_2_classLit), Ljava_util_Collections$UnmodifiableSet_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableSet', 547, Ljava_util_Collections$UnmodifiableCollection_2_classLit), Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableMap$UnmodifiableEntrySet', 546, Ljava_util_Collections$UnmodifiableSet_2_classLit), Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry', 549, Ljava_lang_Object_2_classLit), Ljava_util_Collections$UnmodifiableRandomAccessList_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableRandomAccessList', 550, Ljava_util_Collections$UnmodifiableList_2_classLit), Ljava_util_Collections$UnmodifiableCollectionIterator_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableCollectionIterator', 542, Ljava_lang_Object_2_classLit), Ljava_util_Collections$UnmodifiableListIterator_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableListIterator', 544, Ljava_util_Collections$UnmodifiableCollectionIterator_2_classLit), Ljava_util_Collections$EmptySet$1_2_classLit = createForClass('java.util.', 'Collections$EmptySet$1', 540, Ljava_lang_Object_2_classLit), Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet$1_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableMap$UnmodifiableEntrySet$1', 548, Ljava_lang_Object_2_classLit), Ljava_util_Collections$1_2_classLit = createForClass('java.util.', 'Collections$1', 536, Ljava_lang_Object_2_classLit), Ljava_util_NoSuchElementException_2_classLit = createForClass('java.util.', 'NoSuchElementException', 556, Ljava_lang_RuntimeException_2_classLit), Ljava_util_MapEntryImpl_2_classLit = createForClass('java.util.', 'MapEntryImpl', 555, Ljava_util_AbstractMapEntry_2_classLit), Lcom_google_gwt_dom_client_StyleInjector$StyleInjectorImpl_2_classLit = createForClass('com.google.gwt.dom.client.', 'StyleInjector$StyleInjectorImpl', 180, Ljava_lang_Object_2_classLit), Lcom_google_gwt_dom_client_StyleInjector$1_2_classLit = createForClass('com.google.gwt.dom.client.', 'StyleInjector$1', 179, Ljava_lang_Object_2_classLit), Lcom_google_gwt_safehtml_shared_SafeHtmlString_2_classLit = createForClass('com.google.gwt.safehtml.shared.', 'SafeHtmlString', 314, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_History$1_2_classLit = createForClass('com.google.gwt.user.client.', 'History$1', 332, Ljava_lang_Object_2_classLit), Lcom_google_gwt_event_logical_shared_ResizeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'ResizeEvent', 213, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lorg_cruxframework_crux_core_client_screen_widgets_ScreenBlocker_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.widgets.', 'ScreenBlocker', 741, Lcom_google_gwt_user_client_ui_Composite_2_classLit), Lorg_cruxframework_crux_core_client_screen_widgets_ScreenBlocker$ScreenBlockerImpl_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.widgets.', 'ScreenBlocker$ScreenBlockerImpl', 742, Lcom_google_gwt_user_client_ui_Composite_2_classLit), Lorg_cruxframework_crux_core_client_screen_widgets_ScreenBlocker$ScreenBlockerOtherBrowsers_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.widgets.', 'ScreenBlocker$ScreenBlockerOtherBrowsers', 743, Lorg_cruxframework_crux_core_client_screen_widgets_ScreenBlocker$ScreenBlockerImpl_2_classLit), Lcom_google_gwt_event_logical_shared_CloseEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'CloseEvent', 211, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lorg_cruxframework_crux_core_client_collection_FastMap_2_classLit = createForClass('org.cruxframework.crux.core.client.collection.', 'FastMap', 580, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_WidgetCollection_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection', 442, Ljava_lang_Object_2_classLit), _3Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'Widget;', 898, Lcom_google_gwt_user_client_ui_Widget_2_classLit), Lcom_google_gwt_user_client_ui_WidgetCollection$WidgetIterator_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection$WidgetIterator', 443, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_impl_HistoryImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImpl', 348, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_impl_HistoryImplTimer_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImplTimer', 350, Lcom_google_gwt_user_client_impl_HistoryImpl_2_classLit), Lcom_google_gwt_user_client_impl_HistoryImplSafari_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImplSafari', 349, Lcom_google_gwt_user_client_impl_HistoryImplTimer_2_classLit), Lorg_cruxframework_crux_core_client_screen_InterfaceConfigException_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.', 'InterfaceConfigException', 673, Ljava_lang_RuntimeException_2_classLit), Lcom_google_gwt_event_logical_shared_ValueChangeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'ValueChangeEvent', 215, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewFactory_1Impl_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewFactory_Impl_largeDisplayMouse', 694, Ljava_lang_Object_2_classLit), Lcom_google_gwt_animation_client_AnimationSchedulerImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImpl', 7, Lcom_google_gwt_animation_client_AnimationScheduler_2_classLit), Lcom_google_gwt_animation_client_AnimationSchedulerImplWebkit_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplWebkit', 12, Lcom_google_gwt_animation_client_AnimationSchedulerImpl_2_classLit), Lcom_google_gwt_animation_client_AnimationSchedulerImplWebkit$AnimationHandleImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplWebkit$AnimationHandleImpl', 13, Lcom_google_gwt_animation_client_AnimationScheduler$AnimationHandle_2_classLit), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer', 8, Lcom_google_gwt_animation_client_AnimationSchedulerImpl_2_classLit), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$AnimationHandleImpl', 11, Lcom_google_gwt_animation_client_AnimationScheduler$AnimationHandle_2_classLit), _3Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit = createForArray('[Lcom.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$AnimationHandleImpl;', 899, Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$1_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$1', 9, Lcom_google_gwt_user_client_Timer_2_classLit), Lorg_cruxframework_crux_core_client_screen_DeviceAdaptive$Size_2_classLit = createForEnum('org.cruxframework.crux.core.client.screen.', 'DeviceAdaptive$Size', 668, Ljava_lang_Enum_2_classLit, values_14, valueOf_21), _3Lorg_cruxframework_crux_core_client_screen_DeviceAdaptive$Size_2_classLit = createForArray('[Lorg.cruxframework.crux.core.client.screen.', 'DeviceAdaptive$Size;', 900, Lorg_cruxframework_crux_core_client_screen_DeviceAdaptive$Size_2_classLit), Lorg_cruxframework_crux_core_client_screen_DeviceAdaptive$Input_2_classLit = createForEnum('org.cruxframework.crux.core.client.screen.', 'DeviceAdaptive$Input', 666, Ljava_lang_Enum_2_classLit, values_13, valueOf_20), _3Lorg_cruxframework_crux_core_client_screen_DeviceAdaptive$Input_2_classLit = createForArray('[Lorg.cruxframework.crux.core.client.screen.', 'DeviceAdaptive$Input;', 901, Lorg_cruxframework_crux_core_client_screen_DeviceAdaptive$Input_2_classLit), Lorg_cruxframework_crux_core_client_screen_DeviceAdaptive$Device_2_classLit = createForEnum('org.cruxframework.crux.core.client.screen.', 'DeviceAdaptive$Device', 664, Ljava_lang_Enum_2_classLit, values_12, valueOf_19), _3Lorg_cruxframework_crux_core_client_screen_DeviceAdaptive$Device_2_classLit = createForArray('[Lorg.cruxframework.crux.core.client.screen.', 'DeviceAdaptive$Device;', 902, Lorg_cruxframework_crux_core_client_screen_DeviceAdaptive$Device_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_toscaui_1index_1html_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'toscaui_index_html_largeDisplayMouse', 739, Lorg_cruxframework_crux_core_client_screen_views_View_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_subscribeServiceTaylorForm_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'subscribeServiceTaylorForm_largeDisplayMouse', 732, Lorg_cruxframework_crux_core_client_screen_views_View_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_subscribeServiceTaylorForm_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'subscribeServiceTaylorForm_largeDisplayMouse$1', 733, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_subscribeServiceTaylorForm_1largeDisplayMouse$2_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'subscribeServiceTaylorForm_largeDisplayMouse$2', 734, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_detailService_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'detailService_largeDisplayMouse', 708, Lorg_cruxframework_crux_core_client_screen_views_View_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_detailService_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'detailService_largeDisplayMouse$1', 709, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_menu_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'menu_largeDisplayMouse', 719, Lorg_cruxframework_crux_core_client_screen_views_View_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_menu_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'menu_largeDisplayMouse$1', 720, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_publishService_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'publishService_largeDisplayMouse', 723, Lorg_cruxframework_crux_core_client_screen_views_View_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_publishService_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'publishService_largeDisplayMouse$1', 724, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_publishService_1largeDisplayMouse$2_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'publishService_largeDisplayMouse$2', 725, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_publishService_1largeDisplayMouse$3_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'publishService_largeDisplayMouse$3', 726, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_publishService_1largeDisplayMouse$4_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'publishService_largeDisplayMouse$4', 727, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_publishService_1largeDisplayMouse$5_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'publishService_largeDisplayMouse$5', 728, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_login_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'login_largeDisplayMouse', 710, Lorg_cruxframework_crux_core_client_screen_views_View_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_login_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'login_largeDisplayMouse$1', 711, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_login_1largeDisplayMouse$2_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'login_largeDisplayMouse$2', 712, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_serviceCatalogList_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'serviceCatalogList_largeDisplayMouse', 729, Lorg_cruxframework_crux_core_client_screen_views_View_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_serviceCatalogList_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'serviceCatalogList_largeDisplayMouse$1', 730, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_toscalist_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'toscalist_largeDisplayMouse', 735, Lorg_cruxframework_crux_core_client_screen_views_View_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_toscalist_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'toscalist_largeDisplayMouse$1', 736, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_toscalist_1largeDisplayMouse$2_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'toscalist_largeDisplayMouse$2', 737, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_toscalist_1largeDisplayMouse$3_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'toscalist_largeDisplayMouse$3', 738, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_main_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'main_largeDisplayMouse', 713, Lorg_cruxframework_crux_core_client_screen_views_View_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_main_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'main_largeDisplayMouse$1', 714, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_main_1largeDisplayMouse$2_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'main_largeDisplayMouse$2', 715, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_main_1largeDisplayMouse$3_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'main_largeDisplayMouse$3', 716, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_main_1largeDisplayMouse$4_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'main_largeDisplayMouse$4', 717, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_main_1largeDisplayMouse$5_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'main_largeDisplayMouse$5', 718, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer', 624, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1toscaui_1index_1html_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_toscaui_index_html_largeDisplayMouse', 660, Lorg_cruxframework_crux_core_client_ioc_IocContainer_2_classLit), Lorg_cruxframework_crux_core_client_controller_RegisteredControllers_1toscaui_1index_1html_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.controller.', 'RegisteredControllers_toscaui_index_html_largeDisplayMouse', 591, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_datasource_RegisteredDataSources_1toscaui_1index_1html_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.datasource.', 'RegisteredDataSources_toscaui_index_html_largeDisplayMouse', 612, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_smartFacesResources_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'smartFacesResources_largeDisplayMouse', null, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_xStandardResources_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'xStandardResources_largeDisplayMouse', null, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1subscribeServiceTaylorForm_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_subscribeServiceTaylorForm_largeDisplayMouse', 656, Lorg_cruxframework_crux_core_client_ioc_IocContainer_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1subscribeServiceTaylorForm_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_subscribeServiceTaylorForm_largeDisplayMouse$1', 657, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1subscribeServiceTaylorForm_1largeDisplayMouse$2_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_subscribeServiceTaylorForm_largeDisplayMouse$2', 658, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_controller_RegisteredControllers_1subscribeServiceTaylorForm_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.controller.', 'RegisteredControllers_subscribeServiceTaylorForm_largeDisplayMouse', 589, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_datasource_RegisteredDataSources_1subscribeServiceTaylorForm_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.datasource.', 'RegisteredDataSources_subscribeServiceTaylorForm_largeDisplayMouse', 610, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1detailService_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_detailService_largeDisplayMouse', 626, Lorg_cruxframework_crux_core_client_ioc_IocContainer_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1detailService_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_detailService_largeDisplayMouse$1', 627, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1detailService_1largeDisplayMouse$2_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_detailService_largeDisplayMouse$2', 628, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_controller_RegisteredControllers_1detailService_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.controller.', 'RegisteredControllers_detailService_largeDisplayMouse', 583, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_datasource_RegisteredDataSources_1detailService_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.datasource.', 'RegisteredDataSources_detailService_largeDisplayMouse', 604, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1menu_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_menu_largeDisplayMouse', 645, Lorg_cruxframework_crux_core_client_ioc_IocContainer_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1menu_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_menu_largeDisplayMouse$1', 646, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1menu_1largeDisplayMouse$2_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_menu_largeDisplayMouse$2', 647, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_controller_RegisteredControllers_1menu_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.controller.', 'RegisteredControllers_menu_largeDisplayMouse', 586, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_datasource_RegisteredDataSources_1menu_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.datasource.', 'RegisteredDataSources_menu_largeDisplayMouse', 607, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1publishService_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_publishService_largeDisplayMouse', 650, Lorg_cruxframework_crux_core_client_ioc_IocContainer_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1publishService_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_publishService_largeDisplayMouse$1', 651, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1publishService_1largeDisplayMouse$2_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_publishService_largeDisplayMouse$2', 652, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_controller_RegisteredControllers_1publishService_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.controller.', 'RegisteredControllers_publishService_largeDisplayMouse', 587, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_datasource_RegisteredDataSources_1publishService_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.datasource.', 'RegisteredDataSources_publishService_largeDisplayMouse', 608, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1login_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_login_largeDisplayMouse', 629, Lorg_cruxframework_crux_core_client_ioc_IocContainer_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1login_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_login_largeDisplayMouse$1', 630, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1login_1largeDisplayMouse$2_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_login_largeDisplayMouse$2', 631, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1login_1largeDisplayMouse$3_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_login_largeDisplayMouse$3', 632, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1login_1largeDisplayMouse$4_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_login_largeDisplayMouse$4', 633, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_controller_RegisteredControllers_1login_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.controller.', 'RegisteredControllers_login_largeDisplayMouse', 584, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_datasource_RegisteredDataSources_1login_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.datasource.', 'RegisteredDataSources_login_largeDisplayMouse', 605, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1serviceCatalogList_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_serviceCatalogList_largeDisplayMouse', 653, Lorg_cruxframework_crux_core_client_ioc_IocContainer_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1serviceCatalogList_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_serviceCatalogList_largeDisplayMouse$1', 654, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1serviceCatalogList_1largeDisplayMouse$2_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_serviceCatalogList_largeDisplayMouse$2', 655, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_controller_RegisteredControllers_1serviceCatalogList_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.controller.', 'RegisteredControllers_serviceCatalogList_largeDisplayMouse', 588, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_datasource_RegisteredDataSources_1serviceCatalogList_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.datasource.', 'RegisteredDataSources_serviceCatalogList_largeDisplayMouse', 609, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1toscalist_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_toscalist_largeDisplayMouse', 659, Lorg_cruxframework_crux_core_client_ioc_IocContainer_2_classLit), Lorg_cruxframework_crux_core_client_controller_RegisteredControllers_1toscalist_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.controller.', 'RegisteredControllers_toscalist_largeDisplayMouse', 590, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_datasource_RegisteredDataSources_1toscalist_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.datasource.', 'RegisteredDataSources_toscalist_largeDisplayMouse', 611, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1main_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_main_largeDisplayMouse', 634, Lorg_cruxframework_crux_core_client_ioc_IocContainer_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1main_1largeDisplayMouse$1_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_main_largeDisplayMouse$1', 635, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1main_1largeDisplayMouse$2_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_main_largeDisplayMouse$2', 637, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1main_1largeDisplayMouse$3_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_main_largeDisplayMouse$3', 638, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1main_1largeDisplayMouse$4_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_main_largeDisplayMouse$4', 639, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1main_1largeDisplayMouse$5_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_main_largeDisplayMouse$5', 640, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1main_1largeDisplayMouse$6_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_main_largeDisplayMouse$6', 641, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1main_1largeDisplayMouse$7_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_main_largeDisplayMouse$7', 642, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1main_1largeDisplayMouse$8_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_main_largeDisplayMouse$8', 643, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1main_1largeDisplayMouse$9_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_main_largeDisplayMouse$9', 644, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1main_1largeDisplayMouse$10_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_main_largeDisplayMouse$10', 636, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_controller_RegisteredControllers_1main_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.controller.', 'RegisteredControllers_main_largeDisplayMouse', 585, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_datasource_RegisteredDataSources_1main_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.datasource.', 'RegisteredDataSources_main_largeDisplayMouse', 606, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewDeactivateEvent_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewDeactivateEvent', 691, Lorg_cruxframework_crux_core_client_event_CruxEvent_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewUnloadEvent_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewUnloadEvent', 707, Lorg_cruxframework_crux_core_client_event_CruxEvent_2_classLit), Lcom_google_gwt_user_client_ui_HTMLPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLPanel', 389, Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit), Lorg_cruxframework_crux_smartfaces_themes_client_large_SmartFacesResourcesLarge_1default_1StaticClientBundleGenerator_2_classLit = createForClass('org.cruxframework.crux.smartfaces.themes.client.large.', 'SmartFacesResourcesLarge_default_StaticClientBundleGenerator', 757, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_smartfaces_themes_client_large_SmartFacesResourcesLarge_1default_1StaticClientBundleGenerator$1_2_classLit = createForClass('org.cruxframework.crux.smartfaces.themes.client.large.', 'SmartFacesResourcesLarge_default_StaticClientBundleGenerator$1', 758, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_themes_widgets_xstandard_client_resource_large_XStandardResourcesLarge_1default_1StaticClientBundleGenerator_2_classLit = createForClass('org.cruxframework.crux.themes.widgets.xstandard.client.resource.large.', 'XStandardResourcesLarge_default_StaticClientBundleGenerator', 761, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_themes_widgets_xstandard_client_resource_large_XStandardResourcesLarge_1default_1StaticClientBundleGenerator$1_2_classLit = createForClass('org.cruxframework.crux.themes.widgets.xstandard.client.resource.large.', 'XStandardResourcesLarge_default_StaticClientBundleGenerator$1', 762, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer__largeDisplayMouse', 625, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocLocalScope_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocLocalScope', 661, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocPersistentScope_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocPersistentScope', 662, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_swapcontainer_HorizontalSwapContainer_2_classLit = createForClass('org.cruxframework.crux.widgets.client.swapcontainer.', 'HorizontalSwapContainer', 830, Lorg_cruxframework_crux_core_client_screen_views_SingleViewContainer_2_classLit), Lorg_cruxframework_crux_widgets_client_swapcontainer_HorizontalSwapContainer$2_2_classLit = createForClass('org.cruxframework.crux.widgets.client.swapcontainer.', 'HorizontalSwapContainer$2', 831, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_HTMLPanelHelper$HTMLPanelInfo_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.', 'HTMLPanelHelper$HTMLPanelInfo', 672, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_formdisplay_FormDisplay_2_classLit = createForClass('org.cruxframework.crux.widgets.client.formdisplay.', 'FormDisplay', 812, Lcom_google_gwt_user_client_ui_Composite_2_classLit), Lorg_cruxframework_crux_widgets_client_formdisplay_FormDisplay$FormEntry_2_classLit = createForClass('org.cruxframework.crux.widgets.client.formdisplay.', 'FormDisplay$FormEntry', 813, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FocusWidget', 363, Lcom_google_gwt_user_client_ui_Widget_2_classLit), Lcom_google_gwt_user_client_ui_ValueBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ValueBoxBase', 418, Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit), Lcom_google_gwt_user_client_ui_TextBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextBoxBase', 417, Lcom_google_gwt_user_client_ui_ValueBoxBase_2_classLit), Lcom_google_gwt_user_client_ui_TextBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextBox', 416, Lcom_google_gwt_user_client_ui_TextBoxBase_2_classLit), Lcom_google_gwt_user_client_ui_TextBoxBase$TextAlignConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextBoxBase$TextAlignConstant', 434, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment', 436, Ljava_lang_Enum_2_classLit, values_10, valueOf_10), _3Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment;', 903, Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$1_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$1', 437, Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, null, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$2_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$2', 438, Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, null, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$3_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$3', 439, Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, null, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$4_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$4', 440, Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, null, null), Lcom_google_gwt_i18n_client_AutoDirectionHandler_2_classLit = createForClass('com.google.gwt.i18n.client.', 'AutoDirectionHandler', 236, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_button_Button_2_classLit = createForClass('org.cruxframework.crux.widgets.client.button.', 'Button', 790, Lcom_google_gwt_user_client_ui_Composite_2_classLit), Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ButtonBase', 362, Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit), Lcom_google_gwt_user_client_ui_Button_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Button', 361, Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit), Lorg_cruxframework_crux_widgets_client_button_Button$ButtonImpl_2_classLit = createForClass('org.cruxframework.crux.widgets.client.button.', 'Button$ButtonImpl', 791, Lcom_google_gwt_user_client_ui_Button_2_classLit), Lorg_cruxframework_crux_widgets_client_button_Button$ButtonNoTouchImpl_2_classLit = createForClass('org.cruxframework.crux.widgets.client.button.', 'Button$ButtonNoTouchImpl', 792, Lorg_cruxframework_crux_widgets_client_button_Button$ButtonImpl_2_classLit), Lorg_cruxframework_crux_widgets_client_button_Button$ButtonNoTouchImpl$1_2_classLit = createForClass('org.cruxframework.crux.widgets.client.button.', 'Button$ButtonNoTouchImpl$1', 793, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_styledpanel_StyledPanel_2_classLit = createForClass('org.cruxframework.crux.widgets.client.styledpanel.', 'StyledPanel', 829, Lcom_google_gwt_user_client_ui_Composite_2_classLit), Lcom_google_gwt_user_client_ui_HasVerticalAlignment$VerticalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasVerticalAlignment$VerticalAlignmentConstant', 396, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_controller_crossdevice_TopMenuDisposal_1Impl_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.controller.crossdevice.', 'TopMenuDisposal_Impl_largeDisplayMouse', 598, Lcom_google_gwt_user_client_ui_Composite_2_classLit), Lcom_google_gwt_user_client_ui_TextArea_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextArea', 433, Lcom_google_gwt_user_client_ui_TextBoxBase_2_classLit), Lorg_cruxframework_crux_widgets_client_textarea_TextArea_2_classLit = createForClass('org.cruxframework.crux.widgets.client.textarea.', 'TextArea', 840, Lcom_google_gwt_user_client_ui_TextArea_2_classLit), Lorg_cruxframework_crux_widgets_client_textarea_TextArea$MaxLengthHandler_2_classLit = createForClass('org.cruxframework.crux.widgets.client.textarea.', 'TextArea$MaxLengthHandler', 841, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_textarea_TextArea$MaxLengthHandler$1_2_classLit = createForClass('org.cruxframework.crux.widgets.client.textarea.', 'TextArea$MaxLengthHandler$1', 842, Lcom_google_gwt_user_client_Timer_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_FileUploader_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'FileUploader', 853, Lcom_google_gwt_user_client_ui_Composite_2_classLit), Lcom_google_gwt_user_client_ui_ListBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ListBox', 404, Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit), Lorg_cruxframework_crux_widgets_client_select_SingleSelect_2_classLit = createForClass('org.cruxframework.crux.widgets.client.select.', 'SingleSelect', 815, Lcom_google_gwt_user_client_ui_ListBox_2_classLit), Lcom_google_gwt_user_client_ui_PasswordTextBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PasswordTextBox', 415, Lcom_google_gwt_user_client_ui_TextBox_2_classLit), Lorg_cruxframework_crux_widgets_client_dialogcontainer_DialogViewContainer_2_classLit = createForClass('org.cruxframework.crux.widgets.client.dialogcontainer.', 'DialogViewContainer', 800, Lorg_cruxframework_crux_core_client_screen_views_SingleViewContainer_2_classLit), Lorg_cruxframework_crux_widgets_client_dialogcontainer_DialogViewContainer$1_2_classLit = createForClass('org.cruxframework.crux.widgets.client.dialogcontainer.', 'DialogViewContainer$1', 801, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_controller_crossdevice_Storyboard_1Impl_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.controller.crossdevice.', 'Storyboard_Impl_largeDisplayMouse', 597, Lcom_google_gwt_user_client_ui_Composite_2_classLit), Lcom_google_gwt_user_client_ui_FormPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FormPanel', 384, Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit), Lcom_google_gwt_user_client_ui_FormPanel$SubmitCompleteEvent_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FormPanel$SubmitCompleteEvent', 386, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lcom_google_gwt_user_client_ui_FormPanel$SubmitEvent_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FormPanel$SubmitEvent', 387, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lcom_google_gwt_user_client_ui_FormPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FormPanel$1', 385, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewLoadEvent_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewLoadEvent', 706, Lorg_cruxframework_crux_core_client_event_CruxEvent_2_classLit), Lorg_cruxframework_crux_widgets_client_swappanel_HorizontalSwapPanel_2_classLit = createForClass('org.cruxframework.crux.widgets.client.swappanel.', 'HorizontalSwapPanel', 832, Lcom_google_gwt_user_client_ui_Composite_2_classLit), Lorg_cruxframework_crux_widgets_client_swappanel_HorizontalSwapPanel$Direction_2_classLit = createForEnum('org.cruxframework.crux.widgets.client.swappanel.', 'HorizontalSwapPanel$Direction', 838, Ljava_lang_Enum_2_classLit, values_18, valueOf_25), _3Lorg_cruxframework_crux_widgets_client_swappanel_HorizontalSwapPanel$Direction_2_classLit = createForArray('[Lorg.cruxframework.crux.widgets.client.swappanel.', 'HorizontalSwapPanel$Direction;', 904, Lorg_cruxframework_crux_widgets_client_swappanel_HorizontalSwapPanel$Direction_2_classLit), Lorg_cruxframework_crux_widgets_client_swappanel_HorizontalSwapPanel$2_2_classLit = createForClass('org.cruxframework.crux.widgets.client.swappanel.', 'HorizontalSwapPanel$2', 833, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_swappanel_HorizontalSwapPanel$3_2_classLit = createForClass('org.cruxframework.crux.widgets.client.swappanel.', 'HorizontalSwapPanel$3', 834, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_swappanel_HorizontalSwapPanel$3$1_2_classLit = createForClass('org.cruxframework.crux.widgets.client.swappanel.', 'HorizontalSwapPanel$3$1', 835, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_swappanel_HorizontalSwapPanel$4_2_classLit = createForClass('org.cruxframework.crux.widgets.client.swappanel.', 'HorizontalSwapPanel$4', 836, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_swappanel_HorizontalSwapPanel$5_2_classLit = createForClass('org.cruxframework.crux.widgets.client.swappanel.', 'HorizontalSwapPanel$5', 837, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_HTMLTable_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable', 379, Lcom_google_gwt_user_client_ui_Panel_2_classLit), Lcom_google_gwt_user_client_ui_FlexTable_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlexTable', 378, Lcom_google_gwt_user_client_ui_HTMLTable_2_classLit), Lcom_google_gwt_user_client_ui_HTMLTable$CellFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$CellFormatter', 381, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_FlexTable$FlexCellFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlexTable$FlexCellFormatter', 380, Lcom_google_gwt_user_client_ui_HTMLTable$CellFormatter_2_classLit), Lcom_google_gwt_user_client_ui_HTMLTable$HTMLTableStandardImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$HTMLTableStandardImpl', 392, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_HTMLTable$ColumnFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$ColumnFormatter', 391, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_HTMLTable$RowFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$RowFormatter', 393, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_HTMLTable$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$1', 390, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_org_1cruxframework_1crux_1widgets_1client_1disposal_1topmenudisposal_1TopMenuDisposal_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'org_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposal_largeDisplayMouse', 721, Lorg_cruxframework_crux_core_client_screen_views_View_2_classLit), Lorg_cruxframework_crux_core_client_controller_crossdevice_DeviceAdaptiveController_2_classLit = createForClass('org.cruxframework.crux.core.client.controller.crossdevice.', 'DeviceAdaptiveController', 592, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposalLargeController_2_classLit = createForClass('org.cruxframework.crux.widgets.client.disposal.topmenudisposal.', 'TopMenuDisposalLargeController', 802, Lorg_cruxframework_crux_core_client_controller_crossdevice_DeviceAdaptiveController_2_classLit), Lorg_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposalLargeController_1ControllerProxy_2_classLit = createForClass('org.cruxframework.crux.widgets.client.disposal.topmenudisposal.', 'TopMenuDisposalLargeController_ControllerProxy', 806, Lorg_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposalLargeController_2_classLit), Lorg_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposalLargeController$1_2_classLit = createForClass('org.cruxframework.crux.widgets.client.disposal.topmenudisposal.', 'TopMenuDisposalLargeController$1', 803, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposalLargeController$2_2_classLit = createForClass('org.cruxframework.crux.widgets.client.disposal.topmenudisposal.', 'TopMenuDisposalLargeController$2', 804, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposalLargeController$3_2_classLit = createForClass('org.cruxframework.crux.widgets.client.disposal.topmenudisposal.', 'TopMenuDisposalLargeController$3', 805, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_controller_crossdevice_DeviceAdaptiveViewContainer_2_classLit = createForClass('org.cruxframework.crux.core.client.controller.crossdevice.', 'DeviceAdaptiveViewContainer', 593, Lorg_cruxframework_crux_core_client_screen_views_SingleViewContainer_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_AbstractFileUploader_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'AbstractFileUploader', 843, Lcom_google_gwt_user_client_ui_Composite_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_AbstractFileUploader$1_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'AbstractFileUploader$1', 844, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_AbstractFileUploader$2_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'AbstractFileUploader$2', 845, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_AbstractFileUploader$3_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'AbstractFileUploader$3', 846, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_AbstractFileUploader$4_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'AbstractFileUploader$4', 847, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_AbstractFileUploader$5_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'AbstractFileUploader$5', 848, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_AbstractFileUploader$6_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'AbstractFileUploader$6', 849, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_AbstractFileUploader$7_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'AbstractFileUploader$7', 850, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_event_AbstractFileEvent_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.event.', 'AbstractFileEvent', 858, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_event_RemoveFileEvent_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.event.', 'RemoveFileEvent', 860, Lorg_cruxframework_crux_widgets_client_uploader_event_AbstractFileEvent_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_org_1cruxframework_1crux_1widgets_1client_1storyboard_1Storyboard_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'org_cruxframework_crux_widgets_client_storyboard_Storyboard_largeDisplayMouse', 722, Lorg_cruxframework_crux_core_client_screen_views_View_2_classLit), Lorg_cruxframework_crux_widgets_client_storyboard_StoryboardSmallController_2_classLit = createForClass('org.cruxframework.crux.widgets.client.storyboard.', 'StoryboardSmallController', 822, Lorg_cruxframework_crux_core_client_controller_crossdevice_DeviceAdaptiveController_2_classLit), Lorg_cruxframework_crux_widgets_client_storyboard_StoryboardLargeController_2_classLit = createForClass('org.cruxframework.crux.widgets.client.storyboard.', 'StoryboardLargeController', 821, Lorg_cruxframework_crux_widgets_client_storyboard_StoryboardSmallController_2_classLit), Lorg_cruxframework_crux_widgets_client_storyboard_StoryboardLargeMouseController_2_classLit = createForClass('org.cruxframework.crux.widgets.client.storyboard.', 'StoryboardLargeMouseController', 823, Lorg_cruxframework_crux_widgets_client_storyboard_StoryboardLargeController_2_classLit), Lorg_cruxframework_crux_widgets_client_storyboard_StoryboardLargeMouseController_1ControllerProxy_2_classLit = createForClass('org.cruxframework.crux.widgets.client.storyboard.', 'StoryboardLargeMouseController_ControllerProxy', 826, Lorg_cruxframework_crux_widgets_client_storyboard_StoryboardLargeMouseController_2_classLit), Lorg_cruxframework_crux_widgets_client_storyboard_StoryboardLargeMouseController$1_2_classLit = createForClass('org.cruxframework.crux.widgets.client.storyboard.', 'StoryboardLargeMouseController$1', 824, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_storyboard_StoryboardLargeMouseController$2_2_classLit = createForClass('org.cruxframework.crux.widgets.client.storyboard.', 'StoryboardLargeMouseController$2', 825, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_storyboard_StoryboardSmallController$1_2_classLit = createForClass('org.cruxframework.crux.widgets.client.storyboard.', 'StoryboardSmallController$1', 827, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_storyboard_StoryboardSmallController$2_2_classLit = createForClass('org.cruxframework.crux.widgets.client.storyboard.', 'StoryboardSmallController$2', 828, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ViewActivateEvent_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ViewActivateEvent', 686, Lorg_cruxframework_crux_core_client_event_CruxEvent_2_classLit), Lcom_google_gwt_user_client_ui_FlowPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlowPanel', 382, Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_SubscribeServiceTaylorFormController_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'SubscribeServiceTaylorFormController', 482, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_SubscribeServiceTaylorFormController_1ControllerProxy_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'SubscribeServiceTaylorFormController_ControllerProxy', 483, Leu_cloudopting_ui_ToscaUI_client_controller_SubscribeServiceTaylorFormController_2_classLit), Lcom_google_gwt_user_client_ui_impl_FocusImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.impl.', 'FocusImpl', 448, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_impl_TextBoxImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.impl.', 'TextBoxImpl', 453, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_event_SelectEvent_2_classLit = createForClass('org.cruxframework.crux.widgets.client.event.', 'SelectEvent', 807, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_DetailServiceController_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'DetailServiceController', 460, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_DetailServiceController_1ControllerProxy_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'DetailServiceController_ControllerProxy', 461, Leu_cloudopting_ui_ToscaUI_client_controller_DetailServiceController_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_MenuController_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'MenuController', 472, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_MenuController_1ControllerProxy_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'MenuController_ControllerProxy', 473, Leu_cloudopting_ui_ToscaUI_client_controller_MenuController_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1org_1cruxframework_1crux_1widgets_1client_1disposal_1topmenudisposal_1TopMenuDisposal_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_org_cruxframework_crux_widgets_client_disposal_topmenudisposal_TopMenuDisposal_largeDisplayMouse', 648, Lorg_cruxframework_crux_core_client_ioc_IocContainer_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_PublishServiceController_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'PublishServiceController', 475, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_PublishServiceController_1ControllerProxy_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'PublishServiceController_ControllerProxy', 476, Leu_cloudopting_ui_ToscaUI_client_controller_PublishServiceController_2_classLit), Lorg_cruxframework_crux_widgets_client_event_paste_PasteEventSourceRegisterImpl_2_classLit = createForClass('org.cruxframework.crux.widgets.client.event.paste.', 'PasteEventSourceRegisterImpl', 810, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_FileUploaderLargeImpl_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'FileUploaderLargeImpl', 854, Lorg_cruxframework_crux_widgets_client_uploader_AbstractFileUploader_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_FileUploaderLargeImpl$1_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'FileUploaderLargeImpl$1', 855, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_FileUploaderLargeImpl$2_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'FileUploaderLargeImpl$2', 856, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_FileUploaderLargeImpl$3_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'FileUploaderLargeImpl$3', 857, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_FileButton_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'FileButton', 851, Lcom_google_gwt_user_client_ui_Composite_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_FileInput_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.', 'FileInput', 852, Lcom_google_gwt_user_client_ui_Widget_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_LoginController_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'LoginController', 463, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_LoginController_1ControllerProxy_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'LoginController_ControllerProxy', 465, Leu_cloudopting_ui_ToscaUI_client_controller_LoginController_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_LoginController$1_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'LoginController$1', 464, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_ServiceCatalogListController_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'ServiceCatalogListController', 478, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_ServiceCatalogListController_1ControllerProxy_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'ServiceCatalogListController_ControllerProxy', 480, Leu_cloudopting_ui_ToscaUI_client_controller_ServiceCatalogListController_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_ServiceCatalogListController$1_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'ServiceCatalogListController$1', 479, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IocContainer_1org_1cruxframework_1crux_1widgets_1client_1storyboard_1Storyboard_1largeDisplayMouse_2_classLit = createForClass('org.cruxframework.crux.core.client.ioc.', 'IocContainer_org_cruxframework_crux_widgets_client_storyboard_Storyboard_largeDisplayMouse', 649, Lorg_cruxframework_crux_core_client_ioc_IocContainer_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_ToscaListController_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'ToscaListController', 485, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_ToscaListController_1ControllerProxy_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'ToscaListController_ControllerProxy', 486, Leu_cloudopting_ui_ToscaUI_client_controller_ToscaListController_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_MainController_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'MainController', 467, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_MainController_1ControllerProxy_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'MainController_ControllerProxy', 470, Leu_cloudopting_ui_ToscaUI_client_controller_MainController_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_MainController$1_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'MainController$1', 468, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_MainController$2_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'MainController$2', 469, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_impl_FormPanelImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.impl.', 'FormPanelImpl', 451, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_ioc_IoCResource$Scope_2_classLit = createForEnum('org.cruxframework.crux.core.client.ioc.', 'IoCResource$Scope', 622, Ljava_lang_Enum_2_classLit, values_11, valueOf_18), _3Lorg_cruxframework_crux_core_client_ioc_IoCResource$Scope_2_classLit = createForArray('[Lorg.cruxframework.crux.core.client.ioc.', 'IoCResource$Scope;', 905, Lorg_cruxframework_crux_core_client_ioc_IoCResource$Scope_2_classLit), Lcom_google_gwt_text_shared_AbstractRenderer_2_classLit = createForClass('com.google.gwt.text.shared.', 'AbstractRenderer', 319, Ljava_lang_Object_2_classLit), Lcom_google_gwt_text_shared_testing_PassthroughRenderer_2_classLit = createForClass('com.google.gwt.text.shared.testing.', 'PassthroughRenderer', 321, Lcom_google_gwt_text_shared_AbstractRenderer_2_classLit), Lcom_google_gwt_text_shared_testing_PassthroughParser_2_classLit = createForClass('com.google.gwt.text.shared.testing.', 'PassthroughParser', 320, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_impl_FocusImplStandard_2_classLit = createForClass('com.google.gwt.user.client.ui.impl.', 'FocusImplStandard', 450, Lcom_google_gwt_user_client_ui_impl_FocusImpl_2_classLit), Lcom_google_gwt_user_client_ui_impl_FocusImplSafari_2_classLit = createForClass('com.google.gwt.user.client.ui.impl.', 'FocusImplSafari', 449, Lcom_google_gwt_user_client_ui_impl_FocusImplStandard_2_classLit), Lcom_google_gwt_event_dom_client_ChangeEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'ChangeEvent', 185, Lcom_google_gwt_event_dom_client_DomEvent_2_classLit), Lcom_google_gwt_user_client_impl_ElementMapperImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'ElementMapperImpl', 345, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_impl_ElementMapperImpl$FreeNode_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'ElementMapperImpl$FreeNode', 346, Ljava_lang_Object_2_classLit), Lcom_google_gwt_event_dom_client_ClickEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'ClickEvent', 186, Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit), Lcom_google_gwt_user_client_ui_MenuBar_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'MenuBar', 407, Lcom_google_gwt_user_client_ui_Widget_2_classLit), Lcom_google_gwt_user_client_ui_MenuBar$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'MenuBar$1', 408, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_MenuBar$2_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'MenuBar$2', 409, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_MenuBar$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'MenuBar$3', 410, Lcom_google_gwt_user_client_ui_DecoratedPopupPanel_2_classLit), Lcom_google_gwt_user_client_ui_MenuBar$4_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'MenuBar$4', 411, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_simplecontainer_SimpleViewContainer_2_classLit = createForClass('org.cruxframework.crux.widgets.client.simplecontainer.', 'SimpleViewContainer', 820, Lorg_cruxframework_crux_core_client_screen_views_SingleViewContainer_2_classLit), Lcom_google_gwt_user_client_ui_MenuItem_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'MenuItem', 414, Lcom_google_gwt_user_client_ui_UIObject_2_classLit), Lcom_google_gwt_safehtml_shared_SafeHtmlBuilder_2_classLit = createForClass('com.google.gwt.safehtml.shared.', 'SafeHtmlBuilder', 313, Ljava_lang_Object_2_classLit), Lcom_google_gwt_event_dom_client_KeyEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'KeyEvent', 198, Lcom_google_gwt_event_dom_client_DomEvent_2_classLit), Lcom_google_gwt_event_dom_client_KeyCodeEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'KeyCodeEvent', 197, Lcom_google_gwt_event_dom_client_KeyEvent_2_classLit), Lcom_google_gwt_event_dom_client_KeyDownEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'KeyDownEvent', 200, Lcom_google_gwt_event_dom_client_KeyCodeEvent_2_classLit), Lorg_cruxframework_crux_widgets_client_event_paste_PasteEvent_2_classLit = createForClass('org.cruxframework.crux.widgets.client.event.paste.', 'PasteEvent', 808, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lorg_cruxframework_crux_core_client_css_transition_BaseTransitionHandler_2_classLit = createForClass('org.cruxframework.crux.core.client.css.transition.', 'BaseTransitionHandler', 599, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_css_transition_WebkitTransitionHandler_2_classLit = createForClass('org.cruxframework.crux.core.client.css.transition.', 'WebkitTransitionHandler', 603, Lorg_cruxframework_crux_core_client_css_transition_BaseTransitionHandler_2_classLit), Lorg_cruxframework_crux_core_client_css_transition_BaseTransitionHandler$1_2_classLit = createForClass('org.cruxframework.crux.core.client.css.transition.', 'BaseTransitionHandler$1', 600, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_core_client_css_transition_BaseTransitionHandler$6_2_classLit = createForClass('org.cruxframework.crux.core.client.css.transition.', 'BaseTransitionHandler$6', 601, Lcom_google_gwt_user_client_Timer_2_classLit), Lorg_cruxframework_crux_core_client_screen_views_ChangeViewEvent_2_classLit = createForClass('org.cruxframework.crux.core.client.screen.views.', 'ChangeViewEvent', 681, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lcom_google_gwt_i18n_client_BidiPolicy$BidiPolicyImpl_2_classLit = createForClass('com.google.gwt.i18n.client.', 'BidiPolicy$BidiPolicyImpl', 238, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_MenuBar_1Resources_1default_1StaticClientBundleGenerator_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'MenuBar_Resources_default_StaticClientBundleGenerator', 412, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_FocusPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FocusPanel', 383, Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit), Lorg_cruxframework_crux_widgets_client_selectablepanel_SelectablePanel_2_classLit = createForClass('org.cruxframework.crux.widgets.client.selectablepanel.', 'SelectablePanel', 816, Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit), Lorg_cruxframework_crux_widgets_client_selectablepanel_SelectablePanel$PanelEventsHandler_2_classLit = createForClass('org.cruxframework.crux.widgets.client.selectablepanel.', 'SelectablePanel$PanelEventsHandler', 817, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_selectablepanel_SelectablePanel$PanelEventsHandlerNoTouchImpl_2_classLit = createForClass('org.cruxframework.crux.widgets.client.selectablepanel.', 'SelectablePanel$PanelEventsHandlerNoTouchImpl', 818, Lorg_cruxframework_crux_widgets_client_selectablepanel_SelectablePanel$PanelEventsHandler_2_classLit), Lorg_cruxframework_crux_widgets_client_selectablepanel_SelectablePanel$PanelEventsHandlerNoTouchImpl$1_2_classLit = createForClass('org.cruxframework.crux.widgets.client.selectablepanel.', 'SelectablePanel$PanelEventsHandlerNoTouchImpl$1', 819, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_FormPanel_1IFrameTemplateImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FormPanel_IFrameTemplateImpl', 388, Ljava_lang_Object_2_classLit), Lcom_google_gwt_resources_client_impl_DataResourcePrototype_2_classLit = createForClass('com.google.gwt.resources.client.impl.', 'DataResourcePrototype', 305, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_AbstractImagePrototype_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AbstractImagePrototype', 357, Ljava_lang_Object_2_classLit), Lcom_google_gwt_event_dom_client_DragDropEventBase_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DragDropEventBase', 192, Lcom_google_gwt_event_dom_client_DomEvent_2_classLit), Lcom_google_gwt_event_dom_client_DragDropEventBase$DragSupportDetector_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DragDropEventBase$DragSupportDetector', 193, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_model_StoryboardItem_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.model.', 'StoryboardItem', 494, Lcom_google_gwt_user_client_ui_Composite_2_classLit), Lcom_google_gwt_event_dom_client_KeyPressEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'KeyPressEvent', 201, Lcom_google_gwt_event_dom_client_KeyEvent_2_classLit), Lcom_google_gwt_safehtml_shared_SafeUriString_2_classLit = createForClass('com.google.gwt.safehtml.shared.', 'SafeUriString', 317, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_impl_ClippedImagePrototype_2_classLit = createForClass('com.google.gwt.user.client.ui.impl.', 'ClippedImagePrototype', 447, Lcom_google_gwt_user_client_ui_AbstractImagePrototype_2_classLit), Lcom_google_gwt_event_dom_client_BlurEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'BlurEvent', 181, Lcom_google_gwt_event_dom_client_DomEvent_2_classLit), Lcom_google_gwt_aria_client_RoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RoleImpl', 15, Ljava_lang_Object_2_classLit), Lcom_google_gwt_aria_client_AlertdialogRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'AlertdialogRoleImpl', 16, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_AlertRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'AlertRoleImpl', 14, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_ApplicationRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ApplicationRoleImpl', 17, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_ArticleRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ArticleRoleImpl', 20, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_BannerRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'BannerRoleImpl', 21, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_ButtonRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ButtonRoleImpl', 22, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_CheckboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'CheckboxRoleImpl', 23, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_ColumnheaderRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ColumnheaderRoleImpl', 24, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_ComboboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ComboboxRoleImpl', 25, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_Id_2_classLit = createForClass('com.google.gwt.aria.client.', 'Id', 37, Ljava_lang_Object_2_classLit), _3Lcom_google_gwt_aria_client_Id_2_classLit = createForArray('[Lcom.google.gwt.aria.client.', 'Id;', 906, Lcom_google_gwt_aria_client_Id_2_classLit), Lcom_google_gwt_aria_client_ComplementaryRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ComplementaryRoleImpl', 26, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_ContentinfoRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ContentinfoRoleImpl', 27, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_DefinitionRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'DefinitionRoleImpl', 28, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_DialogRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'DialogRoleImpl', 29, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_DirectoryRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'DirectoryRoleImpl', 30, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_DocumentRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'DocumentRoleImpl', 31, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_FormRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'FormRoleImpl', 32, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_GridcellRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'GridcellRoleImpl', 34, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_GridRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'GridRoleImpl', 33, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_GroupRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'GroupRoleImpl', 35, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_HeadingRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'HeadingRoleImpl', 36, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_ImgRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ImgRoleImpl', 38, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_LinkRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'LinkRoleImpl', 39, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_ListboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ListboxRoleImpl', 41, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_ListitemRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ListitemRoleImpl', 42, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_ListRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ListRoleImpl', 40, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_LogRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'LogRoleImpl', 43, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_MainRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MainRoleImpl', 44, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_MarqueeRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MarqueeRoleImpl', 45, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_MathRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MathRoleImpl', 46, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_MenubarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenubarRoleImpl', 48, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_MenuitemcheckboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenuitemcheckboxRoleImpl', 50, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_MenuitemradioRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenuitemradioRoleImpl', 51, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_MenuitemRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenuitemRoleImpl', 49, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_MenuRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'MenuRoleImpl', 47, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_NavigationRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'NavigationRoleImpl', 52, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_NoteRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'NoteRoleImpl', 53, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_OptionRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'OptionRoleImpl', 54, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_PresentationRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'PresentationRoleImpl', 55, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_ProgressbarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ProgressbarRoleImpl', 57, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_RadiogroupRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RadiogroupRoleImpl', 60, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_RadioRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RadioRoleImpl', 59, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_RegionRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RegionRoleImpl', 61, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_RowgroupRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RowgroupRoleImpl', 64, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_RowheaderRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RowheaderRoleImpl', 65, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_RowRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'RowRoleImpl', 63, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_ScrollbarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ScrollbarRoleImpl', 66, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_SearchRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'SearchRoleImpl', 67, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_SeparatorRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'SeparatorRoleImpl', 68, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_SliderRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'SliderRoleImpl', 69, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_SpinbuttonRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'SpinbuttonRoleImpl', 70, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_StatusRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'StatusRoleImpl', 71, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_TablistRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TablistRoleImpl', 73, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_TabpanelRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TabpanelRoleImpl', 74, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_TabRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TabRoleImpl', 72, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_TextboxRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TextboxRoleImpl', 75, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_TimerRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TimerRoleImpl', 76, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_ToolbarRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'ToolbarRoleImpl', 77, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_TooltipRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TooltipRoleImpl', 78, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_TreegridRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TreegridRoleImpl', 80, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_TreeitemRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TreeitemRoleImpl', 81, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lcom_google_gwt_aria_client_TreeRoleImpl_2_classLit = createForClass('com.google.gwt.aria.client.', 'TreeRoleImpl', 79, Lcom_google_gwt_aria_client_RoleImpl_2_classLit), Lorg_cruxframework_crux_core_client_screen_LazyPanelWrappingType_2_classLit = createForEnum('org.cruxframework.crux.core.client.screen.', 'LazyPanelWrappingType', 674, Ljava_lang_Enum_2_classLit, values_15, valueOf_22), _3Lorg_cruxframework_crux_core_client_screen_LazyPanelWrappingType_2_classLit = createForArray('[Lorg.cruxframework.crux.core.client.screen.', 'LazyPanelWrappingType;', 907, Lorg_cruxframework_crux_core_client_screen_LazyPanelWrappingType_2_classLit), Lcom_google_gwt_safehtml_shared_OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_2_classLit = createForClass('com.google.gwt.safehtml.shared.', 'OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml', 312, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_SubscribeServiceTaylorFormController_1SubscribeServiceTaylorFormView_1Impl_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'SubscribeServiceTaylorFormController_SubscribeServiceTaylorFormView_Impl', 484, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_DetailServiceController_1DetailServiceView_1Impl_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'DetailServiceController_DetailServiceView_Impl', 462, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_MenuController_1MenuView_1Impl_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'MenuController_MenuView_Impl', 474, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_PublishServiceController_1PublishServiceView_1Impl_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'PublishServiceController_PublishServiceView_Impl', 477, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_LoginController_1LoginView_1Impl_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'LoginController_LoginView_Impl', 466, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_remote_IConnect_1Impl_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.remote.', 'IConnect_Impl', 488, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_remote_IConnect_1Impl$1_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.remote.', 'IConnect_Impl$1', 489, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_remote_IConnect_1Impl$2_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.remote.', 'IConnect_Impl$2', 490, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_ServiceCatalogListController_1ServiceCatalogList_1Impl_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'ServiceCatalogListController_ServiceCatalogList_Impl', 481, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_controller_MainController_1MainView_1Impl_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.controller.', 'MainController_MainView_Impl', 471, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_remote_impl_ToscaProviderService_1Impl_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.remote.impl.', 'ToscaProviderService_Impl', 493, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_remote_IApi_1Impl_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.remote.', 'IApi_Impl', 487, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_remote_IUserInfo_1Impl_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.remote.', 'IUserInfo_Impl', 491, Ljava_lang_Object_2_classLit), Leu_cloudopting_ui_ToscaUI_client_remote_IUserInfo_1Impl$1_2_classLit = createForClass('eu.cloudopting.ui.ToscaUI.client.remote.', 'IUserInfo_Impl$1', 492, Ljava_lang_Object_2_classLit), Lcom_google_gwt_event_dom_client_DragOverEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DragOverEvent', 195, Lcom_google_gwt_event_dom_client_DragDropEventBase_2_classLit), Lcom_google_gwt_event_dom_client_DragLeaveEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DragLeaveEvent', 194, Lcom_google_gwt_event_dom_client_DragDropEventBase_2_classLit), Lcom_google_gwt_event_dom_client_DropEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DropEvent', 196, Lcom_google_gwt_event_dom_client_DragDropEventBase_2_classLit), Lcom_google_gwt_event_logical_shared_SelectionEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'SelectionEvent', 214, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lcom_google_gwt_resources_client_impl_ImageResourcePrototype_2_classLit = createForClass('com.google.gwt.resources.client.impl.', 'ImageResourcePrototype', 306, Ljava_lang_Object_2_classLit), Lcom_google_gwt_resources_client_impl_ImageResourcePrototype$Bundle_2_classLit = createForClass('com.google.gwt.resources.client.impl.', 'ImageResourcePrototype$Bundle', 307, Lcom_google_gwt_resources_client_impl_ImageResourcePrototype_2_classLit), Lcom_google_gwt_user_client_ui_impl_ClippedImageImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.impl.', 'ClippedImageImpl', 444, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_ListenerWrapper_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ListenerWrapper', 405, Lcom_google_gwt_user_client_BaseListenerWrapper_2_classLit), Lcom_google_gwt_user_client_ui_ListenerWrapper$WrappedPopupListener_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ListenerWrapper$WrappedPopupListener', 406, Lcom_google_gwt_user_client_ui_ListenerWrapper_2_classLit), Lcom_google_gwt_aria_client_Attribute_2_classLit = createForClass('com.google.gwt.aria.client.', 'Attribute', 19, Ljava_lang_Object_2_classLit), Lcom_google_gwt_event_dom_client_KeyUpEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'KeyUpEvent', 202, Lcom_google_gwt_event_dom_client_KeyCodeEvent_2_classLit), Lcom_google_gwt_safecss_shared_SafeStylesBuilder_2_classLit = createForClass('com.google.gwt.safecss.shared.', 'SafeStylesBuilder', 308, Ljava_lang_Object_2_classLit), Lcom_google_gwt_aria_client_AriaValueAttribute_2_classLit = createForClass('com.google.gwt.aria.client.', 'AriaValueAttribute', 18, Lcom_google_gwt_aria_client_Attribute_2_classLit), Lcom_google_gwt_aria_client_PrimitiveValueAttribute_2_classLit = createForClass('com.google.gwt.aria.client.', 'PrimitiveValueAttribute', 56, Lcom_google_gwt_aria_client_Attribute_2_classLit), Lcom_google_gwt_user_client_ui_impl_ClippedImageImpl_1TemplateImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.impl.', 'ClippedImageImpl_TemplateImpl', 446, Ljava_lang_Object_2_classLit), Lcom_google_gwt_safecss_shared_SafeStylesString_2_classLit = createForClass('com.google.gwt.safecss.shared.', 'SafeStylesString', 310, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_impl_ClippedImageImpl_1DraggableTemplateImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.impl.', 'ClippedImageImpl_DraggableTemplateImpl', 445, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_event_AddFileEvent_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.event.', 'AddFileEvent', 859, Lorg_cruxframework_crux_widgets_client_uploader_event_AbstractFileEvent_2_classLit), Lorg_cruxframework_crux_widgets_client_event_swap_SwapEvent_2_classLit = createForClass('org.cruxframework.crux.widgets.client.event.swap.', 'SwapEvent', 811, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lorg_cruxframework_crux_widgets_client_progressbar_ProgressBar_2_classLit = createForClass('org.cruxframework.crux.widgets.client.progressbar.', 'ProgressBar', 814, Lcom_google_gwt_user_client_ui_Composite_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_event_UploadStartEvent_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.event.', 'UploadStartEvent', 864, Lorg_cruxframework_crux_widgets_client_uploader_event_AbstractFileEvent_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_event_UploadCanceledEvent_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.event.', 'UploadCanceledEvent', 861, Lorg_cruxframework_crux_widgets_client_uploader_event_AbstractFileEvent_2_classLit), Lorg_cruxframework_crux_widgets_client_dialog_AbstractDialogBox_2_classLit = createForClass('org.cruxframework.crux.widgets.client.dialog.', 'AbstractDialogBox', 794, Lcom_google_gwt_user_client_ui_PopupPanel_2_classLit), Lorg_cruxframework_crux_widgets_client_dialog_FlatMessageBox_2_classLit = createForClass('org.cruxframework.crux.widgets.client.dialog.', 'FlatMessageBox', 796, Lorg_cruxframework_crux_widgets_client_dialog_AbstractDialogBox_2_classLit), Lorg_cruxframework_crux_widgets_client_dialog_FlatMessageBox$MessageType_2_classLit = createForEnum('org.cruxframework.crux.widgets.client.dialog.', 'FlatMessageBox$MessageType', 798, Ljava_lang_Enum_2_classLit, values_17, valueOf_24), _3Lorg_cruxframework_crux_widgets_client_dialog_FlatMessageBox$MessageType_2_classLit = createForArray('[Lorg.cruxframework.crux.widgets.client.dialog.', 'FlatMessageBox$MessageType;', 908, Lorg_cruxframework_crux_widgets_client_dialog_FlatMessageBox$MessageType_2_classLit), Lorg_cruxframework_crux_widgets_client_dialog_FlatMessageBox$1_2_classLit = createForClass('org.cruxframework.crux.widgets.client.dialog.', 'FlatMessageBox$1', 797, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_dialog_AbstractDialogBox$1_2_classLit = createForClass('org.cruxframework.crux.widgets.client.dialog.', 'AbstractDialogBox$1', 795, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_util_draganddrop_GenericDragEventHandler$DragAction_2_classLit = createForClass('org.cruxframework.crux.widgets.client.util.draganddrop.', 'GenericDragEventHandler$DragAction', 866, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_util_draganddrop_MoveCapability$DragMoveAction_2_classLit = createForClass('org.cruxframework.crux.widgets.client.util.draganddrop.', 'MoveCapability$DragMoveAction', 870, Lorg_cruxframework_crux_widgets_client_util_draganddrop_GenericDragEventHandler$DragAction_2_classLit), Lorg_cruxframework_crux_widgets_client_util_draganddrop_GenericDragEventHandler_2_classLit = createForClass('org.cruxframework.crux.widgets.client.util.draganddrop.', 'GenericDragEventHandler', 865, Ljava_lang_Object_2_classLit), Lorg_cruxframework_crux_widgets_client_util_draganddrop_GenericDragEventHandler$DragAndDropFeature_2_classLit = createForEnum('org.cruxframework.crux.widgets.client.util.draganddrop.', 'GenericDragEventHandler$DragAndDropFeature', 867, Ljava_lang_Enum_2_classLit, values_19, valueOf_26), _3Lorg_cruxframework_crux_widgets_client_util_draganddrop_GenericDragEventHandler$DragAndDropFeature_2_classLit = createForArray('[Lorg.cruxframework.crux.widgets.client.util.draganddrop.', 'GenericDragEventHandler$DragAndDropFeature;', 909, Lorg_cruxframework_crux_widgets_client_util_draganddrop_GenericDragEventHandler$DragAndDropFeature_2_classLit), Lorg_cruxframework_crux_widgets_client_util_draganddrop_ResizeCapability$DragResizeAction_2_classLit = createForClass('org.cruxframework.crux.widgets.client.util.draganddrop.', 'ResizeCapability$DragResizeAction', 872, Lorg_cruxframework_crux_widgets_client_util_draganddrop_GenericDragEventHandler$DragAction_2_classLit), Lcom_google_gwt_http_client_RequestBuilder_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestBuilder', 226, Ljava_lang_Object_2_classLit), Lcom_google_gwt_http_client_RequestBuilder$Method_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestBuilder$Method', 228, Ljava_lang_Object_2_classLit), Lcom_google_gwt_http_client_RequestBuilder$1_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestBuilder$1', 227, Ljava_lang_Object_2_classLit), Lcom_google_gwt_http_client_Request_2_classLit = createForClass('com.google.gwt.http.client.', 'Request', 223, Ljava_lang_Object_2_classLit), Lcom_google_gwt_http_client_Request$RequestImpl_2_classLit = createForClass('com.google.gwt.http.client.', 'Request$RequestImpl', 225, Ljava_lang_Object_2_classLit), Lcom_google_gwt_http_client_Response_2_classLit = createForClass('com.google.gwt.http.client.', 'Response', 232, Ljava_lang_Object_2_classLit), Lcom_google_gwt_http_client_ResponseImpl_2_classLit = createForClass('com.google.gwt.http.client.', 'ResponseImpl', 233, Lcom_google_gwt_http_client_Response_2_classLit), Lcom_google_gwt_http_client_RequestException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestException', 229, Ljava_lang_Exception_2_classLit), Lorg_cruxframework_crux_core_client_rest_RestError_2_classLit = createForClass('org.cruxframework.crux.core.client.rest.', 'RestError', 663, Ljava_lang_Exception_2_classLit), Lcom_google_gwt_user_client_ui_Image_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image', 397, Lcom_google_gwt_user_client_ui_Widget_2_classLit), Lcom_google_gwt_user_client_ui_Image$State_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image$State', 398, Ljava_lang_Object_2_classLit), Lcom_google_gwt_user_client_ui_Image$UnclippedState_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image$UnclippedState', 400, Lcom_google_gwt_user_client_ui_Image$State_2_classLit), Lcom_google_gwt_user_client_ui_Image$State$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image$State$1', 399, Ljava_lang_Object_2_classLit), Lcom_google_gwt_event_logical_shared_OpenEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'OpenEvent', 212, Lcom_google_gwt_event_shared_GwtEvent_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_event_UploadErrorEvent_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.event.', 'UploadErrorEvent', 863, Lorg_cruxframework_crux_widgets_client_uploader_event_AbstractFileEvent_2_classLit), Lorg_cruxframework_crux_widgets_client_uploader_event_UploadCompleteEvent_2_classLit = createForClass('org.cruxframework.crux.widgets.client.uploader.event.', 'UploadCompleteEvent', 862, Lorg_cruxframework_crux_widgets_client_uploader_event_AbstractFileEvent_2_classLit), Lcom_google_gwt_http_client_RequestPermissionException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestPermissionException', 230, Lcom_google_gwt_http_client_RequestException_2_classLit), Lcom_google_gwt_http_client_RequestTimeoutException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestTimeoutException', 231, Lcom_google_gwt_http_client_RequestException_2_classLit), Lcom_google_gwt_json_client_JSONValue_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONValue', 256, Ljava_lang_Object_2_classLit), Lcom_google_gwt_json_client_JSONObject_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONObject', 261, Lcom_google_gwt_json_client_JSONValue_2_classLit), Lcom_google_gwt_json_client_JSONObject$1_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONObject$1', 262, Ljava_util_AbstractSet_2_classLit), Lorg_cruxframework_crux_core_client_bean_java_1lang_1String_1JsonEncoder_2_classLit = createForClass('org.cruxframework.crux.core.client.bean.', 'java_lang_String_JsonEncoder', 575, Ljava_lang_Object_2_classLit), Lcom_google_gwt_json_client_JSONString_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONString', 266, Lcom_google_gwt_json_client_JSONValue_2_classLit), Lcom_google_gwt_json_client_JSONNull_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONNull', 259, Lcom_google_gwt_json_client_JSONValue_2_classLit), Lcom_google_gwt_json_client_JSONException_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONException', 258, Ljava_lang_RuntimeException_2_classLit), Lcom_google_gwt_json_client_JSONBoolean_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONBoolean', 257, Lcom_google_gwt_json_client_JSONValue_2_classLit), Lcom_google_gwt_json_client_JSONNumber_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONNumber', 260, Lcom_google_gwt_json_client_JSONValue_2_classLit), Lcom_google_gwt_json_client_JSONArray_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONArray', 255, Lcom_google_gwt_json_client_JSONValue_2_classLit), Lorg_cruxframework_crux_core_client_bean_java_1util_1Map_1java_1lang_1String_1_1java_1lang_1String_1_1JsonEncoder_2_classLit = createForClass('org.cruxframework.crux.core.client.bean.', 'java_util_Map_java_lang_String__java_lang_String__JsonEncoder', 576, Ljava_lang_Object_2_classLit), Ljava_util_Arrays$ArrayList_2_classLit = createForClass('java.util.', 'Arrays$ArrayList', 534, Ljava_util_AbstractList_2_classLit);
$sendStats('moduleStartup', 'moduleEvalEnd');
gwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);
$sendStats('moduleStartup', 'end');
//# sourceMappingURL=http://localhost:9876/sourcemaps/toscaui/gwtSourceMap.json 
//# sourceURL=toscaui-0.js

